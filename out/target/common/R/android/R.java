/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package android;

public final class R {
    public static final class anim {
        public static final int accelerate_decelerate_interpolator=0x010a0004;
        public static final int accelerate_interpolator=0x010a0005;
        public static final int anticipate_interpolator=0x010a0007;
        public static final int anticipate_overshoot_interpolator=0x010a0009;
        public static final int bounce_interpolator=0x010a000a;
        public static final int cycle_interpolator=0x010a000c;
        public static final int decelerate_interpolator=0x010a0006;
        public static final int fade_in=0x010a0000;
        public static final int fade_out=0x010a0001;
        public static final int linear_interpolator=0x010a000b;
        public static final int overshoot_interpolator=0x010a0008;
        public static final int slide_in_left=0x010a0002;
        public static final int slide_out_right=0x010a0003;
    }
    public static final class array {
        /**  Email address types from android.provider.Contacts. This could be used when adding a new e-mail address for a contact, for example. 
 Email address types from android.provider.Contacts. This could be used when adding a new e-mail address for a contact, for example. 
         */
        public static final int emailAddressTypes=0x01070000;
        /**  Instant Message protocols/providers from android.provider.Contacts 
 Instant Message protocols/providers from android.provider.Contacts 
         */
        public static final int imProtocols=0x01070001;
        /**  Organization types from android.provider.Contacts. This could be used when adding a new organization for a contact, for example. 
 Organization types from android.provider.Contacts. This could be used when adding a new organization for a contact, for example. 
         */
        public static final int organizationTypes=0x01070002;
        /**  Phone number types from android.provider.Contacts. This could be used when adding a new phone number for a contact, for example. 
 Phone number types from android.provider.Contacts. This could be used when adding a new phone number for a contact, for example. 
         */
        public static final int phoneTypes=0x01070003;
        /**  Postal address types from android.provider.Contacts. This could be used when adding a new address for a contact, for example. 
 Postal address types from android.provider.Contacts. This could be used when adding a new address for a contact, for example. 
         */
        public static final int postalAddressTypes=0x01070004;
    }
    public static final class attr {
        /**  Default AbsListView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int absListViewStyle=0x0101006a;
        /**  A preferences.xml file for authenticator-specific settings. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int accountPreferences=0x0101029f;
        /**  The account type this authenticator handles. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int accountType=0x0101028f;
        /**  The action name to assign to the Intent, as per
            {@link android.content.Intent#setAction Intent.setAction()}. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int action=0x0101002d;
        /**   When closing the current activity, this is the animation that is
              run on the next activity (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int activityCloseEnterAnimation=0x010100ba;
        /**   When closing the current activity, this is the animation that is
              run on the current activity (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int activityCloseExitAnimation=0x010100bb;
        /**   When opening a new activity, this is the animation that is
              run on the next activity (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int activityOpenEnterAnimation=0x010100b8;
        /**   When opening a new activity, this is the animation that is
              run on the previous activity (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int activityOpenExitAnimation=0x010100b9;
        /**  Sets whether this ViewGroup's drawable states also include
             its children's drawable states.  This is used, for example, to
             make a group appear to be focused when its child EditText or button
             is focused. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int addStatesFromChildren=0x010100f0;
        /**  Set this to true if you want the ImageView to adjust its bounds
             to preserve the aspect ratio of its drawable. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int adjustViewBounds=0x0101011e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int alertDialogStyle=0x0101005d;
        /**  Whether to allow the application to participate in backup
         infrastructure.  If this attribute is set to <code>false</code>, no backup
         of the application will ever be performed, even by a full-system backup that
         would otherwise cause all application data to be saved via adb.  The
         default value of this attribute is <code>true</code>. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allowBackup=0x01010280;
        /**  Option to let applications specify that user data can/cannot be 
         cleared. This flag is turned on by default.
         <em>This attribute is usable only by applications
         included in the system image. Third-party apps cannot use it.</em> 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allowClearUserData=0x01010005;
        /**  Indicates whether the drawer can be opened/closed by a single tap
             on the handle.  (If false, the user must drag or fling, or click
             using the trackball, to open/close the drawer.)  Default is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allowSingleTap=0x01010259;
        /**  Specify that an activity can be moved out of a task it is in to
         the task it has an affinity for when appropriate.  Use with the
         application tag (to supply a default for all activities in the
         application), or with an activity tag (to supply a specific
         setting for that component).
    
         <p>Normally when an application is started, it is associated with
         the task of the activity that started it and stays there for its
         entire lifetime.  You can use the allowTaskReparenting feature to force an
         activity to be re-parented to a different task when the task it is
         in goes to the background.  Typically this is used to cause the
         activities of an application to move back to the main task associated
         with that application.  The activity is re-parented to the task
         with the same {@link android.R.attr#taskAffinity} as it has. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allowTaskReparenting=0x01010204;
        /**  The alphabetic shortcut key.  This is the shortcut when using a keyboard
             with alphabetic keys. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alphabeticShortcut=0x010101e3;
        /**  Defines whether the ViewGroup should always draw its children using their
             drawing cache or not. The default value is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alwaysDrawnWithCache=0x010100ef;
        /**  Specify whether an acitivty's task state should always be maintained
         by the system, or if it is allowed to reset the task to its initial
         state in certain situations.
         
         <p>Normally the system will reset a task (remove all activities from
         the stack and reset the root activity) in certain situations when
         the user re-selects that task from the home screen.  Typically this
         will be done if the user hasn't visited that task for a certain
         amount of time, such as 30 minutes.
         
         <p>By setting this attribute, the user will always return to your
         task in its last state, regardless of how they get there.  This is
         useful, for example, in an application like the web browser where there
         is a lot of state (such as multiple open tabs) that the application
         would not like to lose. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alwaysRetainTaskState=0x01010203;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int angle=0x010101a0;
        /**  Indicates whether the drawer should be opened/closed with an animation
             when the user clicks the handle. Default is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int animateOnClick=0x0101025c;
        /**  Animation to use on each child. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int animation=0x010101cd;
        /**  Defines whether layout animations should create a drawing cache for their
             children. Enabling the animation cache consumes more memory and requires
             a longer initialization but provides better performance. The animation
             cache is enabled by default. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int animationCache=0x010100ed;
        /**  Sets how long a transition animation should run (in milliseconds)
             when layout has changed.  Only relevant if animation is turned on. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int animationDuration=0x01010112;
        /**  The order in which the animations will be started. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> Animations are started in the natural order. </td></tr>
<tr><td><code>reverse</code></td><td>1</td><td> Animations are started in the reverse order. </td></tr>
<tr><td><code>random</code></td><td>2</td><td> Animations are started randomly. </td></tr>
</table>
         */
        public static final int animationOrder=0x010101ce;
        /**  Enables or disables antialiasing. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int antialias=0x0101011a;
        /**  Indicates whether the application can accommodate any screen
             density.  Older applications are assumed to not be able to,
             new ones able to.  You can explicitly supply your abilities
             here. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int anyDensity=0x0101026c;
        /**  Value is a string that specifies the Maps API Key to use. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int apiKey=0x01010211;
        /**  Name of the author of this component, e.g. Google. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int author=0x010102b4;
        /**  Specify the authorities under which this content provider can be
         found.  Multiple authorities may be supplied by separating them
         with a semicolon.  Authority names should use a Java-style naming
         convention (such as <code>com.google.provider.MyProvider</code>)
         in order to avoid conflicts.  Typically this name is the same
         as the class implementation describing the provider's data structure. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int authorities=0x01010018;
        /**  Default AutoCompleteTextView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int autoCompleteTextViewStyle=0x0101006b;
        /**  Controls whether links such as urls and email addresses are
         automatically found and converted to clickable links.  The default
         value is "none", disabling this feature. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00</td><td> Match no patterns (default). </td></tr>
<tr><td><code>web</code></td><td>0x01</td><td> Match Web URLs. </td></tr>
<tr><td><code>email</code></td><td>0x02</td><td> Match email addresses. </td></tr>
<tr><td><code>phone</code></td><td>0x04</td><td> Match phone numbers. </td></tr>
<tr><td><code>map</code></td><td>0x08</td><td> Match map addresses. </td></tr>
<tr><td><code>all</code></td><td>0x0f</td><td> Match all patterns (equivalent to web|email|phone|map). </td></tr>
</table>
         */
        public static final int autoLink=0x010100b0;
        /**  When true, automatically start animating 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int autoStart=0x010102b5;
        /**  If set, specifies that this TextView has a textual input method
             and automatically corrects some common spelling errors.
             The default is "false".
             {@deprecated Use inputType instead.} 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int autoText=0x0101016a;
        /**  If provided and <code>true</code>, URLs entered in the search dialog while searching
             within this activity would be detected and treated as URLs (show a 'go' button in the
             keyboard and invoke the browser directly when user launches the URL instead of passing
             the URL to the activity). If set to <code>false</code> any URLs entered are treated as
             normal query text.
             The default value is <code>false</code>. <i>Optional attribute.</i>. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int autoUrlDetect=0x0101028c;
        /**  A drawable to use as the background.  This can be either a reference
             to a full drawable resource (such as a PNG image, 9-patch,
             XML state list description, etc), or a solid color such as "#ff000000"
            (black). 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int background=0x010100d4;
        /**  Default background dim amount when a menu, dialog, or something similar pops up. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int backgroundDimAmount=0x01010032;
        /**  Control whether dimming behind the window is enabled.  The default
             theme does not set this value, meaning it is based on whether the
             window is floating. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int backgroundDimEnabled=0x0101021f;
        /**  The name of the class subclassing <code>BackupAgent</code> to manage
         backup and restore of the application's data on external storage. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int backupAgent=0x0101027f;
        /**  If true, the image view will be baseline aligned with based on its
             bottom edge. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int baselineAlignBottom=0x01010122;
        /**  When set to false, prevents the layout from aligning its children's
             baselines. This attribute is particularly useful when the children
             use different values for gravity. The default value is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int baselineAligned=0x01010126;
        /**  When a linear layout is part of another layout that is baseline
          aligned, it can specify which of its children to baseline align to
          (that is, which child TextView).
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int baselineAlignedChildIndex=0x01010127;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int bottom=0x010101b0;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int bottomBright=0x010100cd;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int bottomDark=0x010100c9;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int bottomLeftRadius=0x010101ab;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int bottomMedium=0x010100ce;
        /**  Extra offset for the handle at the bottom of the SlidingDrawer. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int bottomOffset=0x01010257;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int bottomRightRadius=0x010101ac;
        /**  Determines the minimum type that getText() will return.
             The default is "normal".
             Note that EditText and LogTextBox always return Editable,
             even if you specify something less powerful here. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> Can return any CharSequence, possibly a
             Spanned one if the source text was Spanned. </td></tr>
<tr><td><code>spannable</code></td><td>1</td><td> Can only return Spannable. </td></tr>
<tr><td><code>editable</code></td><td>2</td><td> Can only return Spannable and Editable. </td></tr>
</table>
         */
        public static final int bufferType=0x0101014e;
        /**  Drawable used for the button graphic (e.g. checkbox, radio button, etc). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int button=0x01010107;
        /**  Normal Button style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonStyle=0x01010048;
        /**  Button style to inset into an EditText. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonStyleInset=0x0101004a;
        /**  Small Button style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonStyleSmall=0x01010049;
        /**  ToggleButton style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonStyleToggle=0x0101004b;
        /**  Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cacheColorHint=0x01010101;
        /**  A styled string, specifying the style to be used for showing
             inline candidate text when composing with an input method.  The
             text itself will be ignored, but the style spans will be applied
             to the candidate text as it is edited. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         */
        public static final int candidatesTextStyleSpans=0x01010230;
        /**  If set, specifies that this TextView has a textual input method
             and should automatically capitalize what the user types.
             The default is "none".
             {@deprecated Use inputType instead.} 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Don't automatically capitalize anything. </td></tr>
<tr><td><code>sentences</code></td><td>1</td><td> Capitalize the first word of each sentence. </td></tr>
<tr><td><code>words</code></td><td>2</td><td> Capitalize the first letter of every word. </td></tr>
<tr><td><code>characters</code></td><td>3</td><td> Capitalize every character. </td></tr>
</table>
         */
        @Deprecated
        public static final int capitalize=0x01010169;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int centerBright=0x010100cc;
        /**  Optional center color. For linear gradients, use centerX or centerY to place the center color. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int centerColor=0x0101020b;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int centerDark=0x010100c8;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int centerMedium=0x010100cf;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int centerX=0x010101a2;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int centerY=0x010101a3;
        /**  Default style for CheckBoxPreference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int checkBoxPreferenceStyle=0x0101008f;
        /**  Drawable used for the check mark graphic. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int checkMark=0x01010108;
        /**  Whether the item is capable of displaying a check mark. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int checkable=0x010101e5;
        /**  Whether the items are capable of displaying a check mark. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> The items are not checkable. </td></tr>
<tr><td><code>all</code></td><td>1</td><td> The items are all checkable. </td></tr>
<tr><td><code>single</code></td><td>2</td><td> The items are checkable and there will only be a single checked item in
                 this group. </td></tr>
</table>
         */
        public static final int checkableBehavior=0x010101e0;
        /**  Default Checkbox style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int checkboxStyle=0x0101006c;
        /**  Indicates the initial checked state of this button. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int checked=0x01010106;
        /**  The id of the child radio button that should be checked by default
             within this radio group. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int checkedButton=0x01010148;
        /**  Drawable or color that is used as a divider for children. (It will drawn
             below and above child items.) The height of this will be the same as
             the height of the normal list item divider. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int childDivider=0x01010111;
        /**  Indicator shown beside the child View. This can be a stateful Drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int childIndicator=0x0101010c;
        /**  The left bound for a child's indicator. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int childIndicatorLeft=0x0101010f;
        /**  The right bound for a child's indicator. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int childIndicatorRight=0x01010110;
        /**  Defines the choice behavior for the ListView. By default, lists do not have
             any choice behavior. By setting the choiceMode to singleChoice, the List
             allows up to one item to be in a chosen state. By setting the choiceMode to
             multipleChoice, the list allows any number of items to be chosen. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Normal list that does not indicate choices. </td></tr>
<tr><td><code>singleChoice</code></td><td>1</td><td> The list allows up to one choice. </td></tr>
<tr><td><code>multipleChoice</code></td><td>2</td><td> The list allows multiple choices. </td></tr>
</table>
         */
        public static final int choiceMode=0x0101012b;
        /**  Specify whether an activity's task should be cleared when it
         is re-launched from the home screen.  As a result, every time the
         user starts the task, they will be brought to its root activity,
         regardless of whether they used BACK or HOME to last leave it.
         This flag only applies to activities that
         are used to start the root of a new task.
         
         <p>An example of the use of this flag would be for the case where
         a user launches activity A from home, and from there goes to
         activity B.  They now press home, and then return to activity A.
         Normally they would see activity B, since that is what they were
         last doing in A's task.  However, if A has set this flag to true,
         then upon going to the background all of the tasks on top of it (B
         in this case) are removed, so when the user next returns to A they
         will restart at its original activity.
         
         <p>When this option is used in conjunction with
         {@link android.R.attr#allowTaskReparenting}, the allowTaskReparenting trumps the
         clear.  That is, all activities above the root activity of the
         task will be removed: those that have an affinity will be moved
         to the task they are associated with, otherwise they will simply
         be dropped as described here. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clearTaskOnLaunch=0x01010015;
        /**  Defines whether this view reacts to click events. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clickable=0x010100e5;
        /**  Defines whether a child is limited to draw inside of its bounds or not.
             This is useful with animations that scale the size of the children to more
             than 100% for instance. In such a case, this property should be set to false
             to allow the children to draw outside of their bounds. The default value of
             this property is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clipChildren=0x010100ea;
        /**  The orientation for the clip. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> Clip the drawable horizontally. </td></tr>
<tr><td><code>vertical</code></td><td>2</td><td> Clip the drawable vertically. </td></tr>
</table>
         */
        public static final int clipOrientation=0x0101020a;
        /**  Defines whether the ViewGroup will clip its drawing surface so as to exclude
             the padding area. This property is set to true by default. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clipToPadding=0x010100eb;
        /**  The unicode value or comma-separated values that this key outputs. 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int codes=0x01010242;
        /**  The zero-based index of the columns to collapse. The column indices
             must be separated by a comma: 1, 2, 5. Illegal and duplicate
             indices are ignored. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int collapseColumns=0x0101014b;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int color=0x010101a5;
        /**  Color that matches (as closely as possible) the window background. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorBackground=0x01010031;
        /**  This is a hint for a solid color that can be used for caching
             rendered views.  This will be the color of the background when
             there is a solid background color; it will be null when the
             background is a texture or translucent. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorBackgroundCacheHint=0x010102ab;
        /**  Default color of foreground imagery. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorForeground=0x01010030;
        /**  Default color of foreground imagery on an inverted background. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorForegroundInverse=0x01010206;
        /**  Fraction of the animation duration used to delay the beginning of
         the animation of each column. 
         <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnDelay=0x010101cf;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnWidth=0x01010117;
        /**  Defines the hint displayed in the drop down menu. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int completionHint=0x01010172;
        /**  Defines the hint view displayed in the drop down menu. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int completionHintView=0x01010173;
        /**  Defines the number of characters that the user must type before
         completion suggestions are displayed in a drop down menu. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int completionThreshold=0x01010174;
        /**  Specify one or more configuration changes that the activity will
         handle itself.  If not specified, the activity will be restarted
         if any of these configuration changes happen in the system.  Otherwise,
         the activity will remain running and its
         {@link android.app.Activity#onConfigurationChanged Activity.onConfigurationChanged}
         method called with the new configuration.
         
         <p>Note that all of these configuration changes can impact the
         resource values seen by the application, so you will generally need
         to re-retrieve all resources (including view layouts, drawables, etc)
         to correctly handle any configuration change.
         
         <p>These values must be kept in sync with those in
         {@link android.content.pm.ActivityInfo} and
         include/utils/ResourceTypes.h. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>mcc</code></td><td>0x0001</td><td> The IMSI MCC has changed, that is a SIM has been detected and
             updated the Mobile Country Code. </td></tr>
<tr><td><code>mnc</code></td><td>0x0002</td><td> The IMSI MNC has changed, that is a SIM has been detected and
             updated the Mobile Network Code. </td></tr>
<tr><td><code>locale</code></td><td>0x0004</td><td> The locale has changed, that is the user has selected a new
             language that text should be displayed in. </td></tr>
<tr><td><code>touchscreen</code></td><td>0x0008</td><td> The touchscreen has changed.  Should never normally happen. </td></tr>
<tr><td><code>keyboard</code></td><td>0x0010</td><td> The keyboard type has changed, for example the user has plugged
             in an external keyboard. </td></tr>
<tr><td><code>keyboardHidden</code></td><td>0x0020</td><td> The keyboard or navigation accessibility has changed, for example
             the user has slid the keyboard out to expose it.  Note that
             despite its name, this applied to any accessibility: keyboard
             or navigation. </td></tr>
<tr><td><code>navigation</code></td><td>0x0040</td><td> The navigation type has changed.  Should never normally happen. </td></tr>
<tr><td><code>orientation</code></td><td>0x0080</td><td> The screen orientation has changed, that is the user has
             rotated the device. </td></tr>
<tr><td><code>screenLayout</code></td><td>0x0100</td><td> The screen layout has changed.  This might be caused by a
             different display being activated. </td></tr>
<tr><td><code>uiMode</code></td><td>0x0200</td><td> The global user interface mode has changed.  For example,
             going in or out of car mode, night mode changing, etc. </td></tr>
<tr><td><code>fontScale</code></td><td>0x40000000</td><td> The font scaling factor has changed, that is the user has
             selected a new global font size. </td></tr>
</table>
         */
        public static final int configChanges=0x0101001f;
        /**  A class name in the AppWidget's package to be launched to configure.
             If not supplied, then no activity will be launched. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int configure=0x0101025d;
        /**  If true, the drawable's reported internal size will remain
             constant as the state changes; the size is the maximum of all
             of the states.  If false, the size will vary based on the
             current state. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int constantSize=0x01010196;
        /**  Identifier for the child that represents the drawer's content. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int content=0x0101025b;
        /**  the authority of a content provider. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int contentAuthority=0x01010290;
        /**  Defines text that briefly describes content of the view. This property is used
             primarily for accessibility. Since some views do not have textual
             representation this attribute can be used for providing such. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int contentDescription=0x01010273;
        /**  If true, the image will be cropped to fit within its padding. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cropToPadding=0x01010123;
        /**  Makes the cursor visible (the default) or invisible. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cursorVisible=0x01010152;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cycles=0x010101d4;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dashGap=0x010101a7;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dashWidth=0x010101a6;
        /**  The data URI to assign to the Intent, as per
            {@link android.content.Intent#setData Intent.setData()}.
            <p><em>Note: scheme and host name matching in the Android framework is
            case-sensitive, unlike the formal RFC.  As a result,
            URIs here should always be normalized to use lower case letters
            for these elements (as well as other proper Uri normalization).</em></p> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int data=0x0101002e;
        /**  Flag indicating whether the application can be debugged, even when
         running on a device that is running in user mode. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int debuggable=0x0101000f;
        /**  The default value for the preference, which will be set either if persistence
             is off or persistence is on and the preference is not found in the persistent
             storage.  
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>May be a floating point value, such as "<code>1.2</code>".
         */
        public static final int defaultValue=0x010101ed;
        /**  Fraction of the animation duration used to delay the beginning of
         the animation of each child. 
         <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int delay=0x010101cc;
        /**  The key of another Preference that this Preference will depend on.  If the other
             Preference is not set or is off, this Preference will be disabled. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dependency=0x010101ec;
        /**  Defines the relationship between the ViewGroup and its descendants
             when looking for a View to take focus. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>beforeDescendants</code></td><td>0</td><td> The ViewGroup will get focus before any of its descendants. </td></tr>
<tr><td><code>afterDescendants</code></td><td>1</td><td> The ViewGroup will get focus only if none of its descendants want it. </td></tr>
<tr><td><code>blocksDescendants</code></td><td>2</td><td> The ViewGroup will block its descendants from receiving focus. </td></tr>
</table>
         */
        public static final int descendantFocusability=0x010100f1;
        /**  Descriptive text for the associated data. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int description=0x01010020;
        /**  Special option for window animations: if this window is on top
             of a wallpaper, don't animate the wallpaper with it. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int detachWallpaper=0x010102a6;
        /**  Column in data table that contains details for this data. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int detailColumn=0x010102a3;
        /**  Flag indicating that detail should be built from SocialProvider. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int detailSocialSummary=0x010102a4;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dial=0x01010102;
        /**  The icon for the dialog. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dialogIcon=0x010101f4;
        /**  A layout to be used as the content View for the dialog. By default, this shouldn't
             be needed. If a custom DialogPreference is required, this should be set. For example,
             the EditTextPreference uses a layout with an EditText as this attribute. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dialogLayout=0x010101f7;
        /**  The message in the dialog. If a dialogLayout is provided and contains
             a TextView with ID android:id/message, this message will be placed in there. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dialogMessage=0x010101f3;
        /**  Default style for DialogPreference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dialogPreferenceStyle=0x01010091;
        /**  The title in the dialog. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dialogTitle=0x010101f2;
        /**  If set, specifies that this TextView has a numeric input method
             and that these specific characters are the ones that it will
             accept.
             If this is set, numeric is implied to be true.
             The default is false. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int digits=0x01010166;
        /**  Direction of the animation in the grid. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left_to_right</code></td><td>0x0</td><td> Animates columns from left to right. </td></tr>
<tr><td><code>right_to_left</code></td><td>0x1</td><td> Animates columns from right to left. </td></tr>
<tr><td><code>top_to_bottom</code></td><td>0x0</td><td> Animates rows from top to bottom. </td></tr>
<tr><td><code>bottom_to_top</code></td><td>0x2</td><td> Animates rows from bottom to top. </td></tr>
</table>
         */
        public static final int direction=0x010101d1;
        /**  Priority of the rows and columns. When the priority is none,
         both rows and columns have the same priority. When the priority is
         column, the animations will be applied on the columns first. The same
         goes for rows. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Rows and columns are animated at the same time. </td></tr>
<tr><td><code>column</code></td><td>1</td><td> Columns are animated first. </td></tr>
<tr><td><code>row</code></td><td>2</td><td> Rows are animated first. </td></tr>
</table>
         */
        public static final int directionPriority=0x010101d2;
        /**  The state (true for on, or false for off) that causes dependents to be disabled. By default,
             dependents will be disabled when this is unchecked, so the value of this preference is false. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int disableDependentsState=0x010101f1;
        /**  Default disabled alpha for widgets that set enabled/disabled alpha programmatically. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int disabledAlpha=0x01010033;
        /**  Enables or disables dithering of the bitmap if the bitmap does not have the
             same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
             an RGB 565 screen). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dither=0x0101011c;
        /**  Drawable or color to draw between list items. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int divider=0x01010129;
        /**  Height of the divider. Will use the intrinsic height of the divider if this
             is not specified. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dividerHeight=0x0101012a;
        /**  When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int drawSelectorOnTop=0x010100fc;
        /**  Reference to a drawable resource to use for the frame.  If not
             given, the drawable must be defined by the first child tag. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int drawable=0x01010199;
        /**  The drawable to be drawn below the text. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int drawableBottom=0x0101016e;
        /**  The drawable to be drawn to the left of the text. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int drawableLeft=0x0101016f;
        /**  The padding between the drawables and the text. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int drawablePadding=0x01010171;
        /**  The drawable to be drawn to the right of the text. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int drawableRight=0x01010170;
        /**  The drawable to be drawn above the text. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int drawableTop=0x0101016d;
        /**  Defines the quality of translucent drawing caches. This property is used
             only when the drawing cache is enabled and translucent. The default value is auto. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td> Lets the framework decide what quality level should be used
                 for the drawing cache. </td></tr>
<tr><td><code>low</code></td><td>1</td><td> Low quality. When set to low quality, the drawing cache uses a lower color
                 depth, thus losing precision in rendering gradients, but uses less memory. </td></tr>
<tr><td><code>high</code></td><td>2</td><td> High quality. When set to high quality, the drawing cache uses a higher
                 color depth but uses more memory. </td></tr>
</table>
         */
        public static final int drawingCacheQuality=0x010100e8;
        /**  View to anchor the auto-complete dropdown to. If not specified, the text view itself
             is used. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dropDownAnchor=0x01010263;
        /**  Specifies the basic height of the dropdown. Its value may
             be a dimension (such as "12dip") for a constant height,
             fill_parent or match_parent to fill the height of the
             screen, or wrap_content to match the height of
             the content of the drop down. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The dropdown should fit the height of the screen.
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The dropdown should fit the height of the screen.
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The dropdown should fit the height of the content. </td></tr>
</table>
         */
        public static final int dropDownHeight=0x01010283;
        /**  Default style for drop down hints. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dropDownHintAppearance=0x01010088;
        /**  Amount of pixels by which the drop down should be offset horizontally. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dropDownHorizontalOffset=0x010102ac;
        /**  Default style for drop down items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dropDownItemStyle=0x01010086;
        /**  Default ListView style for drop downs. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dropDownListViewStyle=0x0101006d;
        /**  Selector in a drop down list. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int dropDownSelector=0x01010175;
        /**  Amount of pixels by which the drop down should be offset vertically. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dropDownVerticalOffset=0x010102ad;
        /**  Specifies the basic width of the dropdown. Its value may
             be a dimension (such as "12dip") for a constant width,
             fill_parent or match_parent to match the width of the 
             screen, or wrap_content to match the width of
             the anchored view. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The dropdown should fill the width of the screen.
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The dropdown should fit the width of the screen.
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The dropdown should fit the width of its anchor. </td></tr>
</table>
         */
        public static final int dropDownWidth=0x01010262;
        /**  When this attribute is set to true, the view gets its drawable state
             (focused, pressed, etc.) from its direct parent rather than from itself. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int duplicateParentState=0x010100e9;
        /**  Amount of time (in milliseconds) to display this frame. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int duration=0x01010198;
        /**  Default style for EditTextPreference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int editTextPreferenceStyle=0x01010092;
        /**  Default EditText style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int editTextStyle=0x0101006e;
        /**  If set, specifies that this TextView has an input method.
             It will be a textual one unless it has otherwise been specified.
             For TextView, this is false by default.  For EditText, it is
             true by default.
             {@deprecated Use inputType instead.} 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int editable=0x0101016b;
        /**  Reference to an
             {@link android.R.styleable#InputExtras &lt;input-extras&gt;}
             XML resource containing additional data to
             supply to an input method, which is private to the implementation
             of the input method.  This simply fills in
             the {@link android.view.inputmethod.EditorInfo#extras
             EditorInfo.extras} field when the input
             method is connected. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int editorExtras=0x01010224;
        /**  Where to ellipsize text. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>start</code></td><td>1</td><td></td></tr>
<tr><td><code>middle</code></td><td>2</td><td></td></tr>
<tr><td><code>end</code></td><td>3</td><td></td></tr>
<tr><td><code>marquee</code></td><td>4</td><td></td></tr>
</table>
         */
        public static final int ellipsize=0x010100ab;
        /**  Makes the TextView be exactly this many ems wide. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ems=0x01010158;
        /**  Specifies whether the TextView is enabled or not. {@deprecated Use state_enabled instead}. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int enabled=0x0101000e;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int endColor=0x0101019e;
        /**  The last year (inclusive), for example "2010". 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int endYear=0x0101017d;
        /**  Reference to an array resource that will populate a list/adapter. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int entries=0x010100b2;
        /**  The array to find the value to save for a preference when an entry from
             entries is selected. If a user clicks on the second item in entries, the
             second item in this array will be saved to the preference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int entryValues=0x010101f8;
        /**  Defines whether the overlay should intercept the motion events when a gesture
             is recognized. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int eventsInterceptionEnabled=0x0101027d;
        /**  Indicates that an Activity should be excluded from the list of
         recently launched activities. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int excludeFromRecents=0x01010017;
        /**  The preferred left bound for an expandable list child's indicator. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int expandableListPreferredChildIndicatorLeft=0x01010052;
        /**  The preferred right bound for an expandable list child's indicator. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int expandableListPreferredChildIndicatorRight=0x01010053;
        /**  The preferred left padding for an expandable list item that is a child.
             If this is not provided, it defaults to the expandableListPreferredItemPaddingLeft. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int expandableListPreferredChildPaddingLeft=0x0101004f;
        /**  The preferred left bound for an expandable list item's indicator. For a child-specific
             indicator, use expandableListPreferredChildIndicatorLeft. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int expandableListPreferredItemIndicatorLeft=0x01010050;
        /**  The preferred right bound for an expandable list item's indicator. For a child-specific
             indicator, use expandableListPreferredChildIndicatorRight. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int expandableListPreferredItemIndicatorRight=0x01010051;
        /**  The preferred left padding for an expandable list item (for child-specific layouts,
             use expandableListPreferredChildPaddingLeft). This takes into account
             the indicator that will be shown to next to the item. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int expandableListPreferredItemPaddingLeft=0x0101004e;
        /**  Default ExpandableListView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int expandableListViewStyle=0x0101006f;
        /**  ExpandableListView with white background. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int expandableListViewWhiteStyle=0x010102b6;
        /**  Flag indicating whether the given application component is available
         to other applications.  If false, it can only be accessed by
         applications with its same user id (which usually means only by
         code in its own package).  If true, it can be invoked by external
         entities, though which ones can do so may be controlled through
         permissions.  The default value is false for activity, receiver,
         and service components that do not specify any intent filters; it
         is true for activity, receiver, and service components that do
         have intent filters (implying they expect to be invoked by others
         who do not know their particular component name) and for all
         content providers. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int exported=0x01010010;
        /**  This is the amount by which to multiply the tension. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int extraTension=0x0101026b;
        /**  This is the amount of deceleration to add when easing in. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int factor=0x010101d3;
        /**  Duration, in milliseconds, of the fade out effect after the user is done
             drawing a gesture. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fadeDuration=0x01010278;
        /**  Defines whether the gesture will automatically fade out after being recognized. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fadeEnabled=0x0101027e;
        /**  Time, in milliseconds, to wait before the gesture fades out after the user
             is done drawing it. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fadeOffset=0x01010277;
        /**  Defines whether to fade out scrollbars when they are not in use. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fadeScrollbars=0x010102aa;
        /**  Defines which edges should be fadeded on scrolling. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No edge is faded. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00001000</td><td> Fades horizontal edges only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00002000</td><td> Fades vertical edges only. </td></tr>
</table>
         */
        public static final int fadingEdge=0x010100df;
        /**  Defines the length of the fading edges. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fadingEdgeLength=0x010100e0;
        /**  Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fastScrollEnabled=0x01010226;
        /**  When set to true, the animation transformation is applied after the animation is
             over. The default value is false. If fillEnabled is not set to true and the animation
             is not set on a View, fillAfter is assumed to be true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillAfter=0x010101bd;
        /**  When set to true, the animation transformation is applied before the animation has
             started. The default value is true. If fillEnabled is not set to true, fillBefore
             is assumed to be true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillBefore=0x010101bc;
        /**  When set to true, fillAfter is taken into account. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillEnabled=0x0101024f;
        /**  Defines whether the scrollview should stretch its content to fill the viewport. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillViewport=0x0101017a;
        /**  Enables or disables bitmap filtering. Filtering is used when the bitmap is
             shrunk or stretched to smooth its apperance. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int filter=0x0101011b;
        /**  Specifies whether to filter touches when the view's window is obscured by
             another visible window.  When set to true, the view will not receive touches
             whenever a toast, dialog or other window appears above the view's window.
             Refer to the {@link android.view.View} security documentation for more details. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int filterTouchesWhenObscured=0x010102c4;
        /**  Specify whether an activity should be finished when a "close system
         windows" request has been made.  This happens, for example, when
         the home key is pressed, when the device is locked, when a system
         dialog showing recent applications is displayed, etc. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int finishOnCloseSystemDialogs=0x010102a7;
        /**  Specify whether an activity should be finished when its task is
         brought to the foreground by relaunching from the home screen.
         
         <p>If both this option and {@link android.R.attr#allowTaskReparenting} are
         specified, the finish trumps the affinity: the affinity will be
         ignored and the activity simply finished. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int finishOnTaskLaunch=0x01010014;
        /**  Boolean internal attribute to adjust view layout based on
             system windows such as the status bar.
             If true, adjusts the padding of this view to leave space for the system windows.
             Will only take effect if this view is in a non-embedded activity. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fitsSystemWindows=0x010100dd;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int flipInterval=0x01010179;
        /**  Boolean that controls whether a view can take focus.  By default the user can not
             move focus to a view; by setting this attribute to true the view is
             allowed to take focus.  This value does not impact the behavior of
             directly calling {@link android.view.View#requestFocus}, which will
             always request focus regardless of this view.  It only impacts where
             focus navigation will try to move focus. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int focusable=0x010100da;
        /**  Boolean that controls whether a view can take focus while in touch mode.
             If this is true for a view, that view can gain focus when clicked on, and can keep
             focus if another view is clicked on that doesn't have this attribute set to true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int focusableInTouchMode=0x010100db;
        /**  When set to false, the ListView will not draw the divider before each footer view.
             The default value is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int footerDividersEnabled=0x0101022f;
        /**  Defines the drawable to draw over the content. This can be used as an overlay.
             The foreground drawable participates in the padding of the content if the gravity
             is set to fill. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int foreground=0x01010109;
        /**  Defines the gravity to apply to the foreground drawable. The gravity defaults
             to fill. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the vertical gravity: a top gravity will clip the bottom
                 edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the horizontal gravity: a left gravity will clip the right
                 edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
         */
        public static final int foregroundGravity=0x01010200;
        /**  Format string: if specified, the Chronometer will display this
             string, with the first "%s" replaced by the current timer value
             in "MM:SS" or "H:MM:SS" form.
             If no format string is specified, the Chronometer will simply display
             "MM:SS" or "H:MM:SS". 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int format=0x01010105;
        /**  If set, the text view will include its current complete text
             inside of its frozen icicle in addition to meta-data such as
             the current cursor position.  By default this is disabled;
             it can be useful when the contents of a text view is not stored
             in a persistent place such as a content provider. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int freezesText=0x0101016c;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fromAlpha=0x010101ca;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fromDegrees=0x010101b3;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fromXDelta=0x010101c6;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fromXScale=0x010101c2;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fromYDelta=0x010101c8;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fromYScale=0x010101c4;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int fullBright=0x010100ca;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int fullDark=0x010100c6;
        /**  Flag indicating that an Instrumentation class should be run as a
         functional test. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int functionalTest=0x01010023;
        /**  The preferred background for gallery items. This should be set
             as the background of any Views you provide from the Adapter. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int galleryItemBackground=0x0101004c;
        /**  Default Gallery style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int galleryStyle=0x01010070;
        /**  Color used to draw a gesture. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureColor=0x01010275;
        /**  Minimum curve angle a stroke must contain before it is recognized as a gesture. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureStrokeAngleThreshold=0x0101027c;
        /**  Minimum length of a stroke before it is recognized as a gesture. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureStrokeLengthThreshold=0x0101027a;
        /**  Squareness threshold of a stroke before it is recognized as a gesture. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureStrokeSquarenessThreshold=0x0101027b;
        /**  Defines the type of strokes that define a gesture. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>single</code></td><td>0</td><td> A gesture is made of only one stroke. </td></tr>
<tr><td><code>multiple</code></td><td>1</td><td> A gesture is made of multiple strokes. </td></tr>
</table>
         */
        public static final int gestureStrokeType=0x01010279;
        /**  Width of the stroke used to draw the gesture. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureStrokeWidth=0x01010274;
        /**  The GLES driver version number needed by an application.
             The higher 16 bits represent the major number and the lower 16 bits
             represent the minor number. For example for GL 1.2 referring to
             0x00000102, the actual value should be set as 0x00010002. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int glEsVersion=0x01010281;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gradientRadius=0x010101a4;
        /**  If true, the {@link android.content.Context#grantUriPermission
         Context.grantUriPermission} or corresponding Intent flags can
         be used to allow others to access specific URIs in the content
         provider, even if they do not have an explicit read or write
         permission.  If you are supporting this feature, you must be
         sure to call {@link android.content.Context#revokeUriPermission
         Context.revokeUriPermission} when URIs are deleted from your
         provider.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int grantUriPermissions=0x0101001b;
        /**  Specifies how to place the content of an object, both
         on the x- and y-axis, within the object itself. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
         */
        public static final int gravity=0x010100af;
        /**  Default GridView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int gridViewStyle=0x01010071;
        /**  Indicator shown beside the group View. This can be a stateful Drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int groupIndicator=0x0101010b;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int hand_hour=0x01010103;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int hand_minute=0x01010104;
        /**  Identifier for the child that represents the drawer's handle. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int handle=0x0101025a;
        /**  Flag indicating that an Instrumentation class wants to take care
         of starting/stopping profiling itself, rather than relying on
         the default behavior of profiling the complete time it is running.
         This allows it to target profiling data at a specific set of
         operations. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int handleProfiling=0x01010022;
        /**  Boolean that controls whether a view should have haptic feedback
             enabled for events such as long presses. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hapticFeedbackEnabled=0x0101025e;
        /**  Indicate whether this application contains code.  If set to false,
             there is no code associated with it and thus the system will not
             try to load its code when launching components.  The default is true
             for normal behavior. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hasCode=0x0101000c;
        /**  Default background for the menu header. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int headerBackground=0x0101012f;
        /**  When set to false, the ListView will not draw the divider after each header view.
             The default value is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int headerDividersEnabled=0x0101022e;
        /**  Makes the TextView be exactly this many pixels tall.
             You could get the same effect by specifying this number in the
             layout parameters. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int height=0x01010155;
        /**  Hint text to display when the text is empty. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hint=0x01010150;
        /**  Default horizontal divider between rows of menu items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int horizontalDivider=0x0101012d;
        /**  Default horizontal gap between keys. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int horizontalGap=0x0101023f;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int horizontalSpacing=0x01010114;
        /**  Specify a URI authority host that is handled, as per
             {@link android.content.IntentFilter#addDataAuthority
             IntentFilter.addDataAuthority()}.
             <p><em>Note: host name matching in the Android framework is
             case-sensitive, unlike the formal RFC.  As a result,
             host names here should always use lower case letters.</em></p> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int host=0x01010028;
        /**  A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int icon=0x01010002;
        /**  The icon to show in the popup preview. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconPreview=0x01010249;
        /**  Supply an identifier name for this view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.
             This must be a
             resource reference; typically you set this using the
             <code>@+</code> syntax to create a new ID resources.
             For example: <code>android:id="@+id/my_id"</code> which
             allows you to later retrieve the view
             with <code>findViewById(R.id.my_id)</code>. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int id=0x010100d0;
        /**  Indicates what view should not be affected by gravity. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ignoreGravity=0x010101ff;
        /**  The style resource to use for an ImageButton. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int imageButtonStyle=0x01010072;
        /**  The style resource to use for an ImageButton that is an image well. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int imageWellStyle=0x01010073;
        /**  Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionId EditorInfo.actionId}
             used when an input method is connected to the text view. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imeActionId=0x01010266;
        /**  Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionLabel EditorInfo.actionLabel}
             used when an input method is connected to the text view. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imeActionLabel=0x01010265;
        /**  Animation to use when showing the fullscreen extract UI after
             it had previously been hidden. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int imeExtractEnterAnimation=0x01010268;
        /**  Animation to use when hiding the fullscreen extract UI after
             it had previously been shown. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int imeExtractExitAnimation=0x01010269;
        /**  Background to use for entire input method when it is being
             shown in fullscreen mode with the extract view, to ensure
             that it completely covers the application.  This allows,
             for example, the candidate view to be hidden
             while in fullscreen mode without having the application show through
             behind it.
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int imeFullscreenBackground=0x0101022c;
        /**  Additional features you can enable in an IME associated with an editor
         to improve the integration with your application.  The constants
         here correspond to those defined by
         {@link android.view.inputmethod.EditorInfo#imeOptions}. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0x00000000</td><td> There are no special semantics associated with this editor. </td></tr>
<tr><td><code>actionUnspecified</code></td><td>0x00000000</td><td> There is no specific action associated with this editor, let the
             editor come up with its own if it can.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_NULL}. </td></tr>
<tr><td><code>actionNone</code></td><td>0x00000001</td><td> This editor has no action associated with it.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NONE}. </td></tr>
<tr><td><code>actionGo</code></td><td>0x00000002</td><td> The action key performs a "go"
             operation to take the user to the target of the text they typed.
             Typically used, for example, when entering a URL.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_GO}. </td></tr>
<tr><td><code>actionSearch</code></td><td>0x00000003</td><td> The action key performs a "search"
             operation, taking the user to the results of searching for the text
             the have typed (in whatever context is appropriate).
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEARCH}. </td></tr>
<tr><td><code>actionSend</code></td><td>0x00000004</td><td> The action key performs a "send"
             operation, delivering the text to its target.  This is typically used
             when composing a message.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEND}. </td></tr>
<tr><td><code>actionNext</code></td><td>0x00000005</td><td> The action key performs a "next"
             operation, taking the user to the next field that will accept text.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NEXT}. </td></tr>
<tr><td><code>actionDone</code></td><td>0x00000006</td><td> The action key performs a "done"
             operation, closing the soft input method.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_DONE}. </td></tr>
<tr><td><code>flagNoExtractUi</code></td><td>0x10000000</td><td> Used to specify that the IME does not need
             to show its extracted text UI.  For input methods that may be fullscreen,
             often when in landscape mode, this allows them to be smaller and let part
             of the application be shown behind.  Though there will likely be limited
             access to the application available from the user, it can make the
             experience of a (mostly) fullscreen IME less jarring.  Note that when
             this flag is specified the IME may <em>not</em> be set up to be able
             to display text, so it should only be used in situations where this is
             not needed.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_EXTRACT_UI}. </td></tr>
<tr><td><code>flagNoAccessoryAction</code></td><td>0x20000000</td><td> Used in conjunction with a custom action, this indicates that the
             action should not be available as an accessory button when the
             input method is full-screen.
             Note that by setting this flag, there can be cases where the action
             is simply never available to the user.  Setting this generally means
             that you think showing text being edited is more important than the
             action you have supplied.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ACCESSORY_ACTION}. </td></tr>
<tr><td><code>flagNoEnterAction</code></td><td>0x40000000</td><td> Used in conjunction with a custom action,
             this indicates that the action should not be available in-line as
             a replacement for the "enter" key.  Typically this is
             because the action has such a significant impact or is not recoverable
             enough that accidentally hitting it should be avoided, such as sending
             a message.    Note that {@link android.widget.TextView} will
             automatically set this flag for you on multi-line text views.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ENTER_ACTION}. </td></tr>
</table>
         */
        public static final int imeOptions=0x01010264;
        /**  Flag declaring this activity to be 'immersive'; immersive activities
         should not be interrupted with other activities or notifications.
         @hide 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int immersive=0x010102c0;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int inAnimation=0x01010177;
        /**  Leave enough room for ascenders and descenders instead of
             using the font ascent and descent strictly.  (Normally true). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int includeFontPadding=0x0101015f;
        /**  If provided and <code>true</code>, this searchable activity will be
             included in any global lists of search targets.
             The default value is <code>false</code>. <i>Optional attribute.</i>. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int includeInGlobalSearch=0x0101026e;
        /**  Allows to enable the indeterminate mode. In this mode the progress
         bar plays an infinite looping animation. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int indeterminate=0x01010139;
        /**  Defines how the indeterminate mode should behave when the progress
        reaches max. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>repeat</code></td><td>1</td><td> Progress starts over from 0. </td></tr>
<tr><td><code>cycle</code></td><td>2</td><td> Progress keeps the current value and goes back to 0. </td></tr>
</table>
         */
        public static final int indeterminateBehavior=0x0101013e;
        /**  Drawable used for the indeterminate mode. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int indeterminateDrawable=0x0101013b;
        /**  Duration of the indeterminate animation. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int indeterminateDuration=0x0101013d;
        /**  Restricts to ONLY indeterminate mode (state-keeping progress mode will not work). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int indeterminateOnly=0x0101013a;
        /**  The left bound for an item's indicator. To specify a left bound specific to children,
             use childIndicatorLeft. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int indicatorLeft=0x0101010d;
        /**  The right bound for an item's indicator. To specify a right bound specific to children,
             use childIndicatorRight. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int indicatorRight=0x0101010e;
        /**  Overrides the id of the inflated View with this value. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int inflatedId=0x010100f3;
        /**  Specify the order in which content providers hosted by a process
         are instantiated when that process is created.  Not needed unless
         you have providers with dependencies between each other, to make
         sure that they are created in the order needed by those dependencies.
         The value is a simple integer, with higher numbers being
         initialized first. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int initOrder=0x0101001a;
        /**  A resource id of a layout. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int initialLayout=0x01010251;
        /**  Inner radius of the ring. When defined, innerRadiusRatio is ignored. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int innerRadius=0x0101025f;
        /**  Inner radius of the ring expressed as a ratio of the ring's width. For instance,
             if innerRadiusRatio=9, then the inner radius equals the ring's width divided by 9.
             This value is ignored if innerRadius is defined. Default value is 9. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int innerRadiusRatio=0x0101019b;
        /**  If set, specifies that this TextView should use the specified
             input method (specified by fully-qualified class name).
             {@deprecated Use inputType instead.} 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int inputMethod=0x01010168;
        /**  The type of data being placed in a text field, used to help an
         input method decide how to let the user enter text.  The constants
         here correspond to those defined by
         {@link android.text.InputType}.  Generally you can select
         a single value, though some can be combined together as
         indicated.  Setting this attribute to anything besides
         <var>none</var> also implies that the text is editable. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> There is no content type.  The text is not editable. </td></tr>
<tr><td><code>text</code></td><td>0x00000001</td><td> Just plain old text.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_NORMAL}. </td></tr>
<tr><td><code>textCapCharacters</code></td><td>0x00001001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of all characters.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_CHARACTERS}. </td></tr>
<tr><td><code>textCapWords</code></td><td>0x00002001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every word.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_WORDS}. </td></tr>
<tr><td><code>textCapSentences</code></td><td>0x00004001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every sentence.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_SENTENCES}. </td></tr>
<tr><td><code>textAutoCorrect</code></td><td>0x00008001</td><td> Can be combined with <var>text</var> and its variations to
             request auto-correction of text being input.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_CORRECT}. </td></tr>
<tr><td><code>textAutoComplete</code></td><td>0x00010001</td><td> Can be combined with <var>text</var> and its variations to
             specify that this field will be doing its own auto-completion and
             talking with the input method appropriately.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_COMPLETE}. </td></tr>
<tr><td><code>textMultiLine</code></td><td>0x00020001</td><td> Can be combined with <var>text</var> and its variations to
             allow multiple lines of text in the field.  If this flag is not set,
             the text field will be constrained to a single line.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_MULTI_LINE}. </td></tr>
<tr><td><code>textImeMultiLine</code></td><td>0x00040001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that though the regular text view should not be multiple
             lines, the IME should provide multiple lines if it can.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_IME_MULTI_LINE}. </td></tr>
<tr><td><code>textNoSuggestions</code></td><td>0x00080001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that the IME should not show any
             dictionary-based word suggestions.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_NO_SUGGESTIONS}. </td></tr>
<tr><td><code>textUri</code></td><td>0x00000011</td><td> Text that will be used as a URI.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_URI}. </td></tr>
<tr><td><code>textEmailAddress</code></td><td>0x00000021</td><td> Text that will be used as an e-mail address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textEmailSubject</code></td><td>0x00000031</td><td> Text that is being supplied as the subject of an e-mail.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_SUBJECT}. </td></tr>
<tr><td><code>textShortMessage</code></td><td>0x00000041</td><td> Text that is the content of a short message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_SHORT_MESSAGE}. </td></tr>
<tr><td><code>textLongMessage</code></td><td>0x00000051</td><td> Text that is the content of a long message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_LONG_MESSAGE}. </td></tr>
<tr><td><code>textPersonName</code></td><td>0x00000061</td><td> Text that is the name of a person.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PERSON_NAME}. </td></tr>
<tr><td><code>textPostalAddress</code></td><td>0x00000071</td><td> Text that is being supplied as a postal mailing address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_POSTAL_ADDRESS}. </td></tr>
<tr><td><code>textPassword</code></td><td>0x00000081</td><td> Text that is a password.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>textVisiblePassword</code></td><td>0x00000091</td><td> Text that is a password that should be visible.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_VISIBLE_PASSWORD}. </td></tr>
<tr><td><code>textWebEditText</code></td><td>0x000000a1</td><td> Text that is being supplied as text in a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EDIT_TEXT}. </td></tr>
<tr><td><code>textFilter</code></td><td>0x000000b1</td><td> Text that is filtering some other data.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_FILTER}. </td></tr>
<tr><td><code>textPhonetic</code></td><td>0x000000c1</td><td> Text that is for phonetic pronunciation, such as a phonetic name
             field in a contact entry.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PHONETIC}. </td></tr>
<tr><td><code>number</code></td><td>0x00000002</td><td> A numeric only field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER}. </td></tr>
<tr><td><code>numberSigned</code></td><td>0x00001002</td><td> Can be combined with <var>number</var> and its other options to
             allow a signed number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_SIGNED}. </td></tr>
<tr><td><code>numberDecimal</code></td><td>0x00002002</td><td> Can be combined with <var>number</var> and its other options to
             allow a decimal (fractional) number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_DECIMAL}. </td></tr>
<tr><td><code>phone</code></td><td>0x00000003</td><td> For entering a phone number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_PHONE}. </td></tr>
<tr><td><code>datetime</code></td><td>0x00000004</td><td> For entering a date and time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_NORMAL}. </td></tr>
<tr><td><code>date</code></td><td>0x00000014</td><td> For entering a date.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_DATE}. </td></tr>
<tr><td><code>time</code></td><td>0x00000024</td><td> For entering a time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_TIME}. </td></tr>
</table>
         */
        public static final int inputType=0x01010220;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int insetBottom=0x010101ba;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int insetLeft=0x010101b7;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int insetRight=0x010101b8;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int insetTop=0x010101b9;
        /**  The default install location defined by an application. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td> Let the system decide ideal install location </td></tr>
<tr><td><code>internalOnly</code></td><td>1</td><td> Explicitly request to be installed on internal phone storage
             only. </td></tr>
<tr><td><code>preferExternal</code></td><td>2</td><td> Prefer to be installed on SD card. There is no guarantee that
             the system will honor this request. The application might end
             up being installed on internal storage if external media
             is unavailable or too full. </td></tr>
</table>
         */
        public static final int installLocation=0x010102b7;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int interpolator=0x01010141;
        /**  Set to true in all of the configurations for which this input
             method should be considered an option as the default. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isDefault=0x01010221;
        /**  Whether this rating bar is an indicator (and non-changeable by the user). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isIndicator=0x01010147;
        /**  Whether this is a modifier key such as Alt or Shift. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isModifier=0x01010246;
        /**  Whether long-pressing on this key will make it repeat. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isRepeatable=0x01010248;
        /**  Set this if the view will serve as a scrolling container, meaing
             that it can be resized to shrink its overall window so that there
             will be space for an input method.  If not set, the default
             value will be true if "scrollbars" has the vertical scrollbar
             set, else it will be false. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isScrollContainer=0x0101024e;
        /**  Whether this is a toggle key. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isSticky=0x01010247;
        /**  Default background for each menu item. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int itemBackground=0x01010130;
        /**  Default disabled icon alpha for each menu item that shows an icon. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int itemIconDisabledAlpha=0x01010131;
        /**  Default appearance of menu item text. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int itemTextAppearance=0x0101012c;
        /**  Controls whether the view's window should keep the screen on
             while visible. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keepScreenOn=0x01010216;
        /**  The key to store the Preference value. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int key=0x010101e8;
        /**  Image for the key. This image needs to be a StateListDrawable, with the following
             possible states: normal, pressed, checkable, checkable+pressed, checkable+checked,
             checkable+checked+pressed. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyBackground=0x01010233;
        /**  Key edge flags. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>1</td><td> Key is anchored to the left of the keyboard. </td></tr>
<tr><td><code>right</code></td><td>2</td><td> Key is anchored to the right of the keyboard. </td></tr>
</table>
         */
        public static final int keyEdgeFlags=0x01010245;
        /**  Default height of a key, in pixels or percentage of display width. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHeight=0x0101023e;
        /**  The icon to display on the key instead of the label. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyIcon=0x0101024c;
        /**  The label to display on the key. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLabel=0x0101024b;
        /**  The string of characters to output when this key is pressed. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyOutputText=0x0101024a;
        /**  Height of the key press feedback popup. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewHeight=0x01010239;
        /**  Layout resource for key press feedback.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyPreviewLayout=0x01010237;
        /**  Vertical offset of the key press feedback from the key. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewOffset=0x01010238;
        /**  Color to use for the label in a key. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextColor=0x01010236;
        /**  Size of the text for character keys. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextSize=0x01010234;
        /**  Default width of a key, in pixels or percentage of display width. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyWidth=0x0101023d;
        /**  Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the row will be skipped. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardMode=0x0101024d;
        /**  This enum provides the same keycode values as can be found in
        {@link android.view.KeyEvent}. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>KEYCODE_UNKNOWN</code></td><td>0</td><td></td></tr>
<tr><td><code>KEYCODE_SOFT_LEFT</code></td><td>1</td><td></td></tr>
<tr><td><code>KEYCODE_SOFT_RIGHT</code></td><td>2</td><td></td></tr>
<tr><td><code>KEYCODE_HOME</code></td><td>3</td><td></td></tr>
<tr><td><code>KEYCODE_BACK</code></td><td>4</td><td></td></tr>
<tr><td><code>KEYCODE_CALL</code></td><td>5</td><td></td></tr>
<tr><td><code>KEYCODE_ENDCALL</code></td><td>6</td><td></td></tr>
<tr><td><code>KEYCODE_0</code></td><td>7</td><td></td></tr>
<tr><td><code>KEYCODE_1</code></td><td>8</td><td></td></tr>
<tr><td><code>KEYCODE_2</code></td><td>9</td><td></td></tr>
<tr><td><code>KEYCODE_3</code></td><td>10</td><td></td></tr>
<tr><td><code>KEYCODE_4</code></td><td>11</td><td></td></tr>
<tr><td><code>KEYCODE_5</code></td><td>12</td><td></td></tr>
<tr><td><code>KEYCODE_6</code></td><td>13</td><td></td></tr>
<tr><td><code>KEYCODE_7</code></td><td>14</td><td></td></tr>
<tr><td><code>KEYCODE_8</code></td><td>15</td><td></td></tr>
<tr><td><code>KEYCODE_9</code></td><td>16</td><td></td></tr>
<tr><td><code>KEYCODE_STAR</code></td><td>17</td><td></td></tr>
<tr><td><code>KEYCODE_POUND</code></td><td>18</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_UP</code></td><td>19</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_DOWN</code></td><td>20</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_LEFT</code></td><td>21</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_RIGHT</code></td><td>22</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_CENTER</code></td><td>23</td><td></td></tr>
<tr><td><code>KEYCODE_VOLUME_UP</code></td><td>24</td><td></td></tr>
<tr><td><code>KEYCODE_VOLUME_DOWN</code></td><td>25</td><td></td></tr>
<tr><td><code>KEYCODE_POWER</code></td><td>26</td><td></td></tr>
<tr><td><code>KEYCODE_CAMERA</code></td><td>27</td><td></td></tr>
<tr><td><code>KEYCODE_CLEAR</code></td><td>28</td><td></td></tr>
<tr><td><code>KEYCODE_A</code></td><td>29</td><td></td></tr>
<tr><td><code>KEYCODE_B</code></td><td>30</td><td></td></tr>
<tr><td><code>KEYCODE_C</code></td><td>31</td><td></td></tr>
<tr><td><code>KEYCODE_D</code></td><td>32</td><td></td></tr>
<tr><td><code>KEYCODE_E</code></td><td>33</td><td></td></tr>
<tr><td><code>KEYCODE_F</code></td><td>34</td><td></td></tr>
<tr><td><code>KEYCODE_G</code></td><td>35</td><td></td></tr>
<tr><td><code>KEYCODE_H</code></td><td>36</td><td></td></tr>
<tr><td><code>KEYCODE_I</code></td><td>37</td><td></td></tr>
<tr><td><code>KEYCODE_J</code></td><td>38</td><td></td></tr>
<tr><td><code>KEYCODE_K</code></td><td>39</td><td></td></tr>
<tr><td><code>KEYCODE_L</code></td><td>40</td><td></td></tr>
<tr><td><code>KEYCODE_M</code></td><td>41</td><td></td></tr>
<tr><td><code>KEYCODE_N</code></td><td>42</td><td></td></tr>
<tr><td><code>KEYCODE_O</code></td><td>43</td><td></td></tr>
<tr><td><code>KEYCODE_P</code></td><td>44</td><td></td></tr>
<tr><td><code>KEYCODE_Q</code></td><td>45</td><td></td></tr>
<tr><td><code>KEYCODE_R</code></td><td>46</td><td></td></tr>
<tr><td><code>KEYCODE_S</code></td><td>47</td><td></td></tr>
<tr><td><code>KEYCODE_T</code></td><td>48</td><td></td></tr>
<tr><td><code>KEYCODE_U</code></td><td>49</td><td></td></tr>
<tr><td><code>KEYCODE_V</code></td><td>50</td><td></td></tr>
<tr><td><code>KEYCODE_W</code></td><td>51</td><td></td></tr>
<tr><td><code>KEYCODE_X</code></td><td>52</td><td></td></tr>
<tr><td><code>KEYCODE_Y</code></td><td>53</td><td></td></tr>
<tr><td><code>KEYCODE_Z</code></td><td>54</td><td></td></tr>
<tr><td><code>KEYCODE_COMMA</code></td><td>55</td><td></td></tr>
<tr><td><code>KEYCODE_PERIOD</code></td><td>56</td><td></td></tr>
<tr><td><code>KEYCODE_ALT_LEFT</code></td><td>57</td><td></td></tr>
<tr><td><code>KEYCODE_ALT_RIGHT</code></td><td>58</td><td></td></tr>
<tr><td><code>KEYCODE_SHIFT_LEFT</code></td><td>59</td><td></td></tr>
<tr><td><code>KEYCODE_SHIFT_RIGHT</code></td><td>60</td><td></td></tr>
<tr><td><code>KEYCODE_TAB</code></td><td>61</td><td></td></tr>
<tr><td><code>KEYCODE_SPACE</code></td><td>62</td><td></td></tr>
<tr><td><code>KEYCODE_SYM</code></td><td>63</td><td></td></tr>
<tr><td><code>KEYCODE_EXPLORER</code></td><td>64</td><td></td></tr>
<tr><td><code>KEYCODE_ENVELOPE</code></td><td>65</td><td></td></tr>
<tr><td><code>KEYCODE_ENTER</code></td><td>66</td><td></td></tr>
<tr><td><code>KEYCODE_DEL</code></td><td>67</td><td></td></tr>
<tr><td><code>KEYCODE_GRAVE</code></td><td>68</td><td></td></tr>
<tr><td><code>KEYCODE_MINUS</code></td><td>69</td><td></td></tr>
<tr><td><code>KEYCODE_EQUALS</code></td><td>70</td><td></td></tr>
<tr><td><code>KEYCODE_LEFT_BRACKET</code></td><td>71</td><td></td></tr>
<tr><td><code>KEYCODE_RIGHT_BRACKET</code></td><td>72</td><td></td></tr>
<tr><td><code>KEYCODE_BACKSLASH</code></td><td>73</td><td></td></tr>
<tr><td><code>KEYCODE_SEMICOLON</code></td><td>74</td><td></td></tr>
<tr><td><code>KEYCODE_APOSTROPHE</code></td><td>75</td><td></td></tr>
<tr><td><code>KEYCODE_SLASH</code></td><td>76</td><td></td></tr>
<tr><td><code>KEYCODE_AT</code></td><td>77</td><td></td></tr>
<tr><td><code>KEYCODE_NUM</code></td><td>78</td><td></td></tr>
<tr><td><code>KEYCODE_HEADSETHOOK</code></td><td>79</td><td></td></tr>
<tr><td><code>KEYCODE_FOCUS</code></td><td>80</td><td></td></tr>
<tr><td><code>KEYCODE_PLUS</code></td><td>81</td><td></td></tr>
<tr><td><code>KEYCODE_MENU</code></td><td>82</td><td></td></tr>
<tr><td><code>KEYCODE_NOTIFICATION</code></td><td>83</td><td></td></tr>
<tr><td><code>KEYCODE_SEARCH</code></td><td>84</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_PLAY_PAUSE</code></td><td>85</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_STOP</code></td><td>86</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_NEXT</code></td><td>87</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_PREVIOUS</code></td><td>88</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_REWIND</code></td><td>89</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_FAST_FORWARD</code></td><td>90</td><td></td></tr>
<tr><td><code>KEYCODE_MUTE</code></td><td>91</td><td></td></tr>
<tr><td><code>KEYCODE_PAGE_UP</code></td><td>92</td><td></td></tr>
<tr><td><code>KEYCODE_PAGE_DOWN</code></td><td>93</td><td></td></tr>
<tr><td><code>KEYCODE_PICTSYMBOLS</code></td><td>94</td><td></td></tr>
<tr><td><code>KEYCODE_SWITCH_CHARSET</code></td><td>95</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_A</code></td><td>96</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_B</code></td><td>97</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_C</code></td><td>98</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_X</code></td><td>99</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_Y</code></td><td>100</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_Z</code></td><td>101</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_L1</code></td><td>102</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_R1</code></td><td>103</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_L2</code></td><td>104</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_R2</code></td><td>105</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_THUMBL</code></td><td>106</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_THUMBR</code></td><td>107</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_START</code></td><td>108</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_SELECT</code></td><td>109</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_MODE</code></td><td>110</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_1</code></td><td>92</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_2</code></td><td>93</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_3</code></td><td>94</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_4</code></td><td>95</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_5</code></td><td>96</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_6</code></td><td>97</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_7</code></td><td>98</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_8</code></td><td>99</td><td></td></tr>
<tr><td><code>KEYCODE_QUECHAR</code></td><td>100</td><td></td></tr>
<tr><td><code>KEYCODE_USER1</code></td><td>92</td><td></td></tr>
<tr><td><code>KEYCODE_USER2</code></td><td>93</td><td></td></tr>
<tr><td><code>KEYCODE_USER3</code></td><td>94</td><td></td></tr>
<tr><td><code>KEYCODE_USER4</code></td><td>95</td><td></td></tr>
<tr><td><code>KEYCODE_USER5</code></td><td>96</td><td></td></tr>
</table>
         */
        public static final int keycode=0x010100c5;
        /**  Whether the application in question should be terminated after its
         settings have been restored during a full-system restore operation.
         Single-package restore operations will never cause the application to
         be shut down.  Full-system restore operations typically only occur once,
         when the phone is first set up.  Third-party applications will not usually
         need to use this attribute.

         <p>The default is <code>true</code>, which means that after the application
         has finished processing its data during a full-system restore, it will be
         terminated. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int killAfterRestore=0x0101029c;
        /**  A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         */
        public static final int label=0x01010001;
        /**  Size of the text for custom keys with some text and no icon. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int labelTextSize=0x01010235;
        /**  Indicates whether the application supports larger screen form-factors.
             A large screen is defined as a screen that is significantly larger
             than a normal phone screen, and thus may require some special care
             on the application's part to make good use of it.  An example would
             be a VGA <em>normal density</em> screen, though even larger screens
             are certainly possible.  An application that does not support
             large screens will be placed as a postage stamp on such a
             screen, so that it retains the dimensions it was originally
             designed for. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int largeScreens=0x01010286;
        /**  Specify how an activity should be launched.  See the
         <a href="{@docRoot}guide/topics/fundamentals.html#acttask">Application Fundamentals</a>
         documentation for important information on how these options impact
         the behavior of your application.
         
         <p>If this attribute is not specified, <code>standard</code> launch
         mode will be used.  Note that the particular launch behavior can
         be changed in some ways at runtime through the
         {@link android.content.Intent} flags
         {@link android.content.Intent#FLAG_ACTIVITY_SINGLE_TOP},
         {@link android.content.Intent#FLAG_ACTIVITY_NEW_TASK}, and
         {@link android.content.Intent#FLAG_ACTIVITY_MULTIPLE_TASK}. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>standard</code></td><td>0</td><td> The default mode, which will usually create a new instance of
             the activity when it is started, though this behavior may change
             with the introduction of other options such as
             {@link android.content.Intent#FLAG_ACTIVITY_NEW_TASK
             Intent.FLAG_ACTIVITY_NEW_TASK}. </td></tr>
<tr><td><code>singleTop</code></td><td>1</td><td> If, when starting the activity, there is already an
            instance of the same activity class in the foreground that is
            interacting with the user, then
            re-use that instance.  This existing instance will receive a call to
            {@link android.app.Activity#onNewIntent Activity.onNewIntent()} with
            the new Intent that is being started. </td></tr>
<tr><td><code>singleTask</code></td><td>2</td><td> If, when starting the activity, there is already a task running
            that starts with this activity, then instead of starting a new
            instance the current task is brought to the front.  The existing
            instance will receive a call to {@link android.app.Activity#onNewIntent
            Activity.onNewIntent()}
            with the new Intent that is being started, and with the
            {@link android.content.Intent#FLAG_ACTIVITY_BROUGHT_TO_FRONT
            Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT} flag set.  This is a superset
            of the singleTop mode, where if there is already an instance
            of the activity being started at the top of the stack, it will
            receive the Intent as described there (without the
            FLAG_ACTIVITY_BROUGHT_TO_FRONT flag set).  See the
            <a href="{@docRoot}guide/topics/fundamentals.html#acttask">Application Fundamentals</a>
            documentation for more details on tasks.</td></tr>
<tr><td><code>singleInstance</code></td><td>3</td><td> Only allow one instance of this activity to ever be 
            running.  This activity gets a unique task with only itself running 
            in it; if it is ever launched again with the same Intent, then that 
            task will be brought forward and its 
            {@link android.app.Activity#onNewIntent Activity.onNewIntent()}
            method called.  If this 
            activity tries to start a new activity, that new activity will be 
            launched in a separate task.  See the
            <a href="{@docRoot}guide/topics/fundamentals.html#acttask">Application Fundamentals</a>
            documentation for more details on tasks. </td></tr>
</table>
         */
        public static final int launchMode=0x0101001d;
        /**  Supply an identifier for the layout resource to inflate when the ViewStub
             becomes visible or when forced to do so. The layout resource must be a
             valid reference to a layout. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout=0x010100f2;
        /**  Defines the layout animation to use the first time the ViewGroup is laid out.
             Layout animations can also be started manually after the first layout. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layoutAnimation=0x010100ec;
        /**  Positions the bottom edge of this view above the given anchor view ID.
            Accommodates bottom margin of this view and top margin of anchor view. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_above=0x01010184;
        /**  Positions the baseline of this view on the baseline of the given anchor view ID. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_alignBaseline=0x01010186;
        /**  Makes the bottom edge of this view match the bottom edge of the given anchor view ID.
            Accommodates bottom margin. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_alignBottom=0x0101018a;
        /**  Makes the left edge of this view match the left edge of the given anchor view ID.
            Accommodates left margin. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_alignLeft=0x01010187;
        /**  If true, makes the bottom edge of this view match the bottom edge of the parent.
            Accommodates bottom margin. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_alignParentBottom=0x0101018e;
        /**  If true, makes the left edge of this view match the left edge of the parent.
            Accommodates left margin. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_alignParentLeft=0x0101018b;
        /**  If true, makes the right edge of this view match the right edge of the parent.
            Accommodates right margin. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_alignParentRight=0x0101018d;
        /**  If true, makes the top edge of this view match the top edge of the parent.
            Accommodates top margin. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_alignParentTop=0x0101018c;
        /**  Makes the right edge of this view match the right edge of the given anchor view ID.
            Accommodates right margin. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_alignRight=0x01010189;
        /**  Makes the top edge of this view match the top edge of the given anchor view ID.
            Accommodates top margin. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_alignTop=0x01010188;
        /**  If set to true, the parent will be used as the anchor when the anchor cannot be
             be found for layout_toLeftOf, layout_toRightOf, etc. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_alignWithParentIfMissing=0x01010192;
        /**  Positions the top edge of this view below the given anchor view ID.
            Accommodates top margin of this view and bottom margin of anchor view. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_below=0x01010185;
        /**  If true, centers this child horizontally within its parent. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_centerHorizontal=0x01010190;
        /**  If true, centers this child horizontally and vertically within its parent. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_centerInParent=0x0101018f;
        /**  If true, centers this child vertically within its parent. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_centerVertical=0x01010191;
        /**  The index of the column in which this child should be. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_column=0x0101014c;
        /**  Standard gravity constant that a child can supply to its parent.
         Defines how to place the view, both its x- and y-axis, within its parent view group. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
         */
        public static final int layout_gravity=0x010100b3;
        /**  Specifies the basic height of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant height or one of
             the special constants. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
         */
        public static final int layout_height=0x010100f5;
        /**   Specifies extra space on the left, top, right and bottom
              sides of this view. This space is outside this view's bounds. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_margin=0x010100f6;
        /**   Specifies extra space on the bottom side of this view.
              This space is outside this view's bounds. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_marginBottom=0x010100fa;
        /**   Specifies extra space on the left side of this view.
              This space is outside this view's bounds. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_marginLeft=0x010100f7;
        /**   Specifies extra space on the right side of this view.
              This space is outside this view's bounds. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_marginRight=0x010100f9;
        /**   Specifies extra space on the top side of this view.
              This space is outside this view's bounds. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_marginTop=0x010100f8;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_scale=0x01010193;
        /**  Defines how many columns this child should span.  Must be >= 1.
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_span=0x0101014d;
        /**  Positions the right edge of this view to the left of the given anchor view ID.
             Accommodates right margin of this view and left margin of anchor view. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_toLeftOf=0x01010182;
        /**  Positions the left edge of this view to the right of the given anchor view ID.
            Accommodates left margin of this view and right margin of anchor view. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_toRightOf=0x01010183;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_weight=0x01010181;
        /**  Specifies the basic width of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant width or one of
             the special constants. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
         */
        public static final int layout_width=0x010100f4;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_x=0x0101017f;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_y=0x01010180;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int left=0x010101ad;
        /**  Extra spacing between lines of text. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int lineSpacingExtra=0x01010217;
        /**  Extra spacing between lines of text, as a multiplier. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int lineSpacingMultiplier=0x01010218;
        /**  Makes the TextView be exactly this many lines tall. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int lines=0x01010154;
        /**  If set to false, keeps the movement method from being set
             to the link movement method even if autoLink causes links
             to be found. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int linksClickable=0x010100b1;
        /**  Drawable to use for multiple choice indicators. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listChoiceIndicatorMultiple=0x0101021a;
        /**  Drawable to use for single choice indicators. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listChoiceIndicatorSingle=0x01010219;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listDivider=0x01010214;
        /**  The preferred list item height. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemHeight=0x0101004d;
        /**  Drawable used to indicate the currently selected item in the list. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int listSelector=0x010100fb;
        /**  TextView style for list separators. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listSeparatorTextViewStyle=0x01010208;
        /**  Default ListView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listViewStyle=0x01010074;
        /**  ListView with white background. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listViewWhiteStyle=0x01010075;
        /**  ===============================================================
     Resources introduced in Gingerbread.
     =============================================================== 
 A Drawable resource providing an extended graphical logo for its
         associated item. Use with the application tag (to supply a default
         logo for all application components), or with the activity, receiver,
         service, or instrumentation tag (to supply a specific logo for that
         component). It may also be used with the intent-filter tag to supply
         a logo to show to the user when an activity is being selected based
         on a particular Intent.

         <p>The given logo will be used to display to the user a graphical
         representation of its associated component; for example as the
         header in the Action Bar. The primary differences between an icon
         and a logo are that logos are often wider and more detailed, and are
         used without an accompanying text caption. This must be a reference
         to a Drawable resource containing the image definition.
         @hide 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int logo=0x010102be;
        /**  Defines whether this view reacts to long click events. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int longClickable=0x010100e6;
        /**  Name of the activity to be launched to manage application's space on
         device. The specified activity gets automatically launched when the
         application's space needs to be managed and is usually invoked 
         through user actions. Applications can thus provide their own custom
         behavior for managing space for various scenarios like out of memory
         conditions. This is an optional attribute and
         applications can choose not to specify a default activity to 
         manage space. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int manageSpaceActivity=0x01010004;
        /**  Default MapView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int mapViewStyle=0x0101008a;
        /**  The number of times to repeat the marquee animation. Only applied if the
             TextView has marquee enabled. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>marquee_forever</code></td><td>-1</td><td> Indicates that marquee should repeat indefinitely. </td></tr>
</table>
         */
        public static final int marqueeRepeatLimit=0x0101021d;
        /**  Defines the maximum value the progress can take. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int max=0x01010136;
        /**  Makes the TextView be at most this many ems wide. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxEms=0x01010157;
        /**  An optional argument to supply a maximum height for this view.
             See {see android.widget.ImageView#setMaxHeight} for details. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxHeight=0x01010120;
        /**  Defines the maximum number of items per row. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxItemsPerRow=0x01010134;
        /**  Set an input filter to constrain the text length to the
             specified number. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxLength=0x01010160;
        /**  The maximum level allowed for this item. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxLevel=0x010101b2;
        /**  Makes the TextView be at most this many lines tall. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxLines=0x01010153;
        /**  Defines the maximum number of rows displayed. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxRows=0x01010133;
        /**  This is the maximum SDK version number that an application works
             on.  You can use this to ensure your application is filtered out
             of later versions of the platform when you know you have
             incompatibility with them. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxSdkVersion=0x01010271;
        /**  An optional argument to supply a maximum width for this view.
             See {see android.widget.ImageView#setMaxWidth} for details. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxWidth=0x0101011f;
        /**  Determines whether to measure all children or just those in
             the VISIBLE or INVISIBLE state when measuring. Defaults to false. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int measureAllChildren=0x0101010a;
        /**  The category applied to all items within this group.
             (This will be or'ed with the orderInCategory attribute.) 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>container</code></td><td>0x00010000</td><td> Items are part of a container. </td></tr>
<tr><td><code>system</code></td><td>0x00020000</td><td> Items are provided by the system. </td></tr>
<tr><td><code>secondary</code></td><td>0x00030000</td><td> Items are user-supplied secondary (infrequently used). </td></tr>
<tr><td><code>alternative</code></td><td>0x00040000</td><td> Items are alternative actions. </td></tr>
</table>
         */
        public static final int menuCategory=0x010101de;
        /**  Specify a MIME type that is handled, as per
             {@link android.content.IntentFilter#addDataType
             IntentFilter.addDataType()}.
             <p><em>Note: MIME type matching in the Android framework is
             case-sensitive, unlike formal RFC MIME types.  As a result,
             MIME types here should always use lower case letters.</em></p> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int mimeType=0x01010026;
        /**  Makes the TextView be at least this many ems wide. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minEms=0x0101015a;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minHeight=0x01010140;
        /**  The minimum level allowed for this item. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minLevel=0x010101b1;
        /**  Makes the TextView be at least this many lines tall. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minLines=0x01010156;
        /**  This is the minimum SDK version number that the application
             requires.  This number is an abstract integer, from the list
             in {@link android.os.Build.VERSION_CODES}  If
             not supplied, the application will work on any SDK.  This
             may also be string (such as "Donut") if the application was built
             against a development branch, in which case it will only work against
             the development builds. 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minSdkVersion=0x0101020c;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minWidth=0x0101013f;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>oneLine</code></td><td>1</td><td> Always show only the first line. </td></tr>
<tr><td><code>collapsing</code></td><td>2</td><td> When selected show both lines, otherwise show only the first line.
                 This is the default mode. </td></tr>
<tr><td><code>twoLine</code></td><td>3</td><td> Always show both lines. </td></tr>
</table>
         */
        public static final int mode=0x0101017e;
        /**  'More' icon. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreIcon=0x01010135;
        /**  Specify whether a component is allowed to have multiple instances
         of itself running in different processes.  Use with the activity
         and provider tags.
    
         <p>Normally the system will ensure that all instances of a particular
         component are only running in a single process.  You can use this
         attribute to disable that behavior, allowing the system to create
         instances wherever they are used (provided permissions allow it).
         This is most often used with content providers, so that instances
         of a provider can be created in each client process, allowing them
         to be used without performing IPC.  
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int multiprocess=0x01010013;
        /**  A unique name for the given item.  This must use a Java-style naming
         convention to ensure the name is unique, for example
         "com.mycompany.MyName". 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int name=0x01010003;
        /**  The negative button text for the dialog. Set to @null to hide the negative button. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int negativeButtonText=0x010101f6;
        /**  Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_DOWN}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusDown=0x010100e4;
        /**  Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_LEFT}.

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusLeft=0x010100e1;
        /**  Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_RIGHT}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusRight=0x010100e2;
        /**  Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_UP}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusUp=0x010100e3;
        /**  Specify whether an activity should be kept in its history stack.
         If this attribute is set, then as soon as the user navigates away
         from the activity it will be finished and they will no longer be
         able to return to it. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int noHistory=0x0101022d;
        /**  Indicates whether an application supports the normal screen
             form-factors.  Traditionally this is an HVGA normal density
             screen, but WQVGA low density and WVGA high density are also
             considered to be normal.  This attribute is true by default,
             and applications currently should leave it that way. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int normalScreens=0x01010285;
        /** <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto_fit</code></td><td>-1</td><td></td></tr>
</table>
         */
        public static final int numColumns=0x01010118;
        /**  The number of stars (or rating items) to show. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int numStars=0x01010144;
        /**  If set, specifies that this TextView has a numeric input method.
             The default is false.
             {@deprecated Use inputType instead.} 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>integer</code></td><td>0x01</td><td> Input is numeric. </td></tr>
<tr><td><code>signed</code></td><td>0x003</td><td> Input is numeric, with sign allowed. </td></tr>
<tr><td><code>decimal</code></td><td>0x05</td><td> Input is numeric, with decimals allowed. </td></tr>
</table>
         */
        @Deprecated
        public static final int numeric=0x01010165;
        /**  The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
             keyboard. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int numericShortcut=0x010101e4;
        /**  Name of the method in this View's context to invoke when the view is
             clicked. This name must correspond to a public method that takes
             exactly one parameter of type View. For instance, if you specify
             <code>android:onClick="sayHello"</code>, you must declare a
             <code>public void sayHello(View v)</code> method of your context
             (typically, your Activity). 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int onClick=0x0101026f;
        /**  If true, the animation will only run a single time and then
             stop.  If false (the default), it will continually run,
             restarting at the first frame after the last has finished. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int oneshot=0x01010197;
        /**  The order for the Preference (lower values are to be ordered first). If this is not
             specified, the default orderin will be alphabetic. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int order=0x010101ea;
        /**  The order within the category applied to all items within this group.
             (This will be or'ed with the category attribute.) 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int orderInCategory=0x010101df;
        /**  Whether to order the Preference under this group as they appear in the XML file.
             If this is false, the ordering will follow the Preference order attribute and
             default to alphabetic for those without the order attribute. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int orderingFromXml=0x010101e7;
        /**  Standard orientation constant. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
<tr><td><code>none</code></td><td>2</td><td> no orientation (lockscreen hack only for gestures.) </td></tr>
</table>
         */
        public static final int orientation=0x010100c4;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int outAnimation=0x01010178;
        /**  Drawable to draw below list content. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int overScrollFooter=0x010102c3;
        /**  Drawable to draw above list content. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int overScrollHeader=0x010102c2;
        /**  Defines over-scrolling behavior. This property is used only if the
             View is scrollable. Over-scrolling is the ability for the user to
             receive feedback when attempting to scroll beyond meaningful content. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>always</code></td><td>0</td><td> Always show over-scroll effects, even if the content fits entirely
                 within the available space. </td></tr>
<tr><td><code>ifContentScrolls</code></td><td>1</td><td> Only show over-scroll effects if the content is large
                 enough to meaningfully scroll. </td></tr>
<tr><td><code>never</code></td><td>2</td><td> Never show over-scroll effects. </td></tr>
</table>
         */
        public static final int overScrollMode=0x010102c1;
        /**  Sets the padding, in pixels, of all four edges.  Padding is defined as
             space between the edges of the view and the view's content. A views size
             will include it's padding.  If a {@link android.R.attr#background}
             is provided, the padding will initially be set to that (0 if the
             drawable does not have padding).  Explicitly setting a padding value
             will override the corresponding padding found in the background. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int padding=0x010100d5;
        /**  Sets the padding, in pixels, of the bottom edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingBottom=0x010100d9;
        /**  Sets the padding, in pixels, of the left edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingLeft=0x010100d6;
        /**  Sets the padding, in pixels, of the right edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingRight=0x010100d8;
        /**  Sets the padding, in pixels, of the top edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingTop=0x010100d7;
        /**  The background of a panel when it is inset from the left and right edges of the screen. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int panelBackground=0x0101005e;
        /**  Color that matches (as closely as possible) the panel background. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int panelColorBackground=0x01010061;
        /**  Default color of foreground panel imagery. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int panelColorForeground=0x01010060;
        /**  The background of a panel when it extends to the left and right edges of the screen. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int panelFullBackground=0x0101005f;
        /**  Default appearance of panel text. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int panelTextAppearance=0x01010062;
        /**  Whether the characters of the field are displayed as
             password dots instead of themselves.
             {@deprecated Use inputType instead.} 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int password=0x0101015c;
        /**  Specify a URI path that must exactly match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_LITERAL}. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int path=0x0101002a;
        /**  Specify a URI path that matches a simple pattern, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_SIMPLE_GLOB}. 
             Note that because '\' is used as an escape character when
             reading the string from XML (before it is parsed as a pattern),
             you will need to double-escape: for example a literal "*" would
             be written as "\\*" and a literal "\" would be written as
             "\\\\".  This is basically the same as what you would need to
             write if constructing the string in Java code. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pathPattern=0x0101002c;
        /**  Specify a URI path that must be a prefix to match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_PREFIX}. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pathPrefix=0x0101002b;
        /**  Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int permission=0x01010006;
        /**  Specified the name of a group that this permission is associated
         with.  The group must have been defined with the
         {@link android.R.styleable#AndroidManifestPermissionGroup permission-group} tag. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int permissionGroup=0x0101000a;
        /**  Flag to control special persistent mode of an application.  This should
         not normally be used by applications; it requires that the system keep
         your application running at all times. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int persistent=0x0101000d;
        /**  Defines the persistence of the drawing cache. The drawing cache might be
             enabled by a ViewGroup for all its children in specific situations (for
             instance during a scrolling.) This property lets you persist the cache
             in memory after its initial usage. Persisting the cache consumes more
             memory but may prevent frequent garbage collection is the cache is created
             over and over again. By default the persistence is set to scrolling. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x0</td><td> The drawing cache is not persisted after use. </td></tr>
<tr><td><code>animation</code></td><td>0x1</td><td> The drawing cache is persisted after a layout animation. </td></tr>
<tr><td><code>scrolling</code></td><td>0x2</td><td> The drawing cache is persisted after a scroll. </td></tr>
<tr><td><code>all</code></td><td>0x3</td><td> The drawing cache is always persisted. </td></tr>
</table>
         */
        public static final int persistentDrawingCache=0x010100ee;
        /**  If set, specifies that this TextView has a phone number input
             method. The default is false.
             {@deprecated Use inputType instead.} 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int phoneNumber=0x01010167;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pivotX=0x010101b5;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pivotY=0x010101b6;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupAnimationStyle=0x010102c9;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int popupBackground=0x01010176;
        /**  The characters to display in the popup keyboard. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int popupCharacters=0x01010244;
        /**  The XML keyboard layout of any popup keyboard. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupKeyboard=0x01010243;
        /**  Layout resource for popup keyboards. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupLayout=0x0101023b;
        /**  Default PopupWindow style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupWindowStyle=0x01010076;
        /**  Specify a URI authority port that is handled, as per
             {@link android.content.IntentFilter#addDataAuthority
             IntentFilter.addDataAuthority()}.  If a host is supplied
             but not a port, any port is matched. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int port=0x01010029;
        /**  The positive button text for the dialog. Set to @null to hide the positive button. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int positiveButtonText=0x010101f5;
        /**  Default style for PreferenceCategory. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int preferenceCategoryStyle=0x0101008c;
        /**  Default style for informational Preference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int preferenceInformationStyle=0x0101008d;
        /**  The preference layout that has the child/tabbed effect. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int preferenceLayoutChild=0x01010094;
        /**  Default style for PreferenceScreen. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int preferenceScreenStyle=0x0101008b;
        /**  Default style for Preference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int preferenceStyle=0x0101008e;
        /**  Specify the relative importance or ability in handling a particular
         Intent.  For receivers, this controls the order in which they are
         executed to receive a broadcast (note that for
         asynchronous broadcasts, this order is ignored).  For activities,
         this provides information about how good an activity is handling an
         Intent; when multiple activities match an intent and have different
         priorities, only those with the higher priority value will be
         considered a match.
         
         <p>Only use if you really need to impose some specific
         order in which the broadcasts are received, or want to forcibly
         place an activity to always be preferred over others.  The value is a
         single integer, with higher numbers considered to be better. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int priority=0x0101001c;
        /**  An addition content type description to supply to the input
             method attached to the text view, which is private to the
             implementation of the input method.  This simply fills in
             the {@link android.view.inputmethod.EditorInfo#privateImeOptions
             EditorInfo.privateImeOptions} field when the input
             method is connected. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int privateImeOptions=0x01010223;
        /**  Specify a specific process that the associated code is to run in.
         Use with the application tag (to supply a default process for all
         application components), or with the activity, receiver, service,
         or provider tag (to supply a specific icon for that component).
    
         <p>Application components are normally run in a single process that
         is created for the entire application.  You can use this tag to modify
         where they run.  If the process name begins with a ':' character,
         a new process private to that application will be created when needed
         to run that component (allowing you to spread your application across
         multiple processes).  If the process name begins with a lower-case
         character, the component will be run in a global process of that name,
         provided that you have permission to do so, allowing multiple
         applications to share one process to reduce resource usage. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int process=0x01010011;
        /**  Defines the default progress value, between 0 and max. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int progress=0x01010137;
        /**  Default ProgressBar style. This is a medium circular progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyle=0x01010077;
        /**  Horizontal ProgressBar style. This is a horizontal progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyleHorizontal=0x01010078;
        /**  Inverse ProgressBar style. This is a medium circular progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyleInverse=0x01010287;
        /**  Large ProgressBar style. This is a large circular progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyleLarge=0x0101007a;
        /**  Large inverse ProgressBar style. This is a large circular progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyleLargeInverse=0x01010289;
        /**  Small ProgressBar style. This is a small circular progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyleSmall=0x01010079;
        /**  Small inverse ProgressBar style. This is a small circular progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyleSmallInverse=0x01010288;
        /**  Small ProgressBar in title style. This is a small circular progress bar that will be placed in title bars. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyleSmallTitle=0x0101020f;
        /**  Drawable used for the progress mode. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressDrawable=0x0101013c;
        /**  The prompt to display when the spinner's dialog is shown. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int prompt=0x0101017b;
        /**  Characterizes the potential risk implied in a permission and
         indicates the procedure the system should follow when determining
         whether to grant the permission to an application requesting it. {@link
         android.Manifest.permission Standard permissions} have a predefined and
         permanent protectionLevel. If you are creating a custom permission in an
         application, you can define a protectionLevel attribute with one of the
         values listed below. If no protectionLevel is defined for a custom
         permission, the system assigns the default ("normal"). 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> A lower-risk permission that gives an application access to isolated
             application-level features, with minimal risk to other applications,
             the system, or the user. The system automatically grants this type
             of permission to a requesting application at installation, without
             asking for the user's explicit approval (though the user always
             has the option to review these permissions before installing). </td></tr>
<tr><td><code>dangerous</code></td><td>1</td><td> A higher-risk permission that would give a requesting application
             access to private user data or control over the device that can
             negatively impact the user.  Because this type of permission
             introduces potential risk, the system may not automatically
             grant it to the requesting application.  For example, any dangerous
             permissions requested by an application may be displayed to the
             user and require confirmation before proceeding, or some other
             approach may be taken to avoid the user automatically allowing
             the use of such facilities.  </td></tr>
<tr><td><code>signature</code></td><td>2</td><td> A permission that the system is to grant only if the requesting
             application is signed with the same certificate as the application
             that declared the permission. If the certificates match, the system
             automatically grants the permission without notifying the user or
             asking for the user's explicit approval. </td></tr>
<tr><td><code>signatureOrSystem</code></td><td>3</td><td> A permission that the system is to grant only to packages in the
             Android system image <em>or</em> that are signed with the same
             certificates. Please avoid using this option, as the
             signature protection level should be sufficient for most needs and
             works regardless of exactly where applications are installed.  This
             permission is used for certain special situations where multiple
             vendors have applications built in to a system image which need
             to share specific features explicitly because they are being built
             together. </td></tr>
</table>
         */
        public static final int protectionLevel=0x01010009;
        /**  If you wish to handle an action key during normal search query entry, you
            must define an action string here.  This will be added to the
            {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} intent that is passed to your
            searchable activity.  To examine the string, use
            {@link android.content.Intent#getStringExtra getStringExtra(SearchManager.ACTION_MSG)}.
            <i>Optional attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int queryActionMsg=0x010101db;
        /**  If provided and <code>true</code>, this searchable activity will be invoked for all
             queries in a particular session. If set to <code>false</code> and the activity
             returned zero results for a query, it will not be invoked again in that session for
             supersets of that zero-results query. For example, if the activity returned zero
             results for "bo", it would not be queried again for "bob".
             The default value is <code>false</code>. <i>Optional attribute.</i>. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int queryAfterZeroResults=0x01010282;
        /**  Default quickcontact badge style with large quickcontact window. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int quickContactBadgeStyleSmallWindowLarge=0x010102b3;
        /**  Default quickcontact badge style with medium quickcontact window. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int quickContactBadgeStyleSmallWindowMedium=0x010102b2;
        /**  Default quickcontact badge style with small quickcontact window. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int quickContactBadgeStyleSmallWindowSmall=0x010102b1;
        /**  Default quickcontact badge style with large quickcontact window. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int quickContactBadgeStyleWindowLarge=0x010102b0;
        /**  Default quickcontact badge style with medium quickcontact window. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int quickContactBadgeStyleWindowMedium=0x010102af;
        /**  Default quickcontact badge style with small quickcontact window. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int quickContactBadgeStyleWindowSmall=0x010102ae;
        /**  Default RadioButton style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int radioButtonStyle=0x0101007e;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int radius=0x010101a8;
        /**  The rating to set by default. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rating=0x01010145;
        /**  Default RatingBar style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ratingBarStyle=0x0101007c;
        /**  Indicator RatingBar style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ratingBarStyleIndicator=0x01010210;
        /**  Small indicator RatingBar style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ratingBarStyleSmall=0x0101007d;
        /**  A specific {@link android.R.attr#permission} name for read-only
         access to a {@link android.content.ContentProvider}.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int readPermission=0x01010007;
        /**  Defines how many times the animation should repeat. The default value is 0. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>infinite</code></td><td>-1</td><td></td></tr>
</table>
         */
        public static final int repeatCount=0x010101bf;
        /**  Defines the animation behavior when it reaches the end and the repeat count is
             greater than 0 or infinite. The default value is restart. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>restart</code></td><td>1</td><td> The animation starts again from the beginning. </td></tr>
<tr><td><code>reverse</code></td><td>2</td><td> The animation plays backward. </td></tr>
</table>
         */
        public static final int repeatMode=0x010101c0;
        /**  Application's requirement for five way navigation 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int reqFiveWayNav=0x01010232;
        /**  Application's requirement for a hard keyboard 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int reqHardKeyboard=0x01010229;
        /**  The input method preferred by an application. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>undefined</code></td><td>0</td><td></td></tr>
<tr><td><code>nokeys</code></td><td>1</td><td></td></tr>
<tr><td><code>qwerty</code></td><td>2</td><td></td></tr>
<tr><td><code>twelvekey</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int reqKeyboardType=0x01010228;
        /**  The navigation device preferred by an application. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>undefined</code></td><td>0</td><td></td></tr>
<tr><td><code>nonav</code></td><td>1</td><td></td></tr>
<tr><td><code>dpad</code></td><td>2</td><td></td></tr>
<tr><td><code>trackball</code></td><td>3</td><td></td></tr>
<tr><td><code>wheel</code></td><td>4</td><td></td></tr>
</table>
         */
        public static final int reqNavigation=0x0101022a;
        /**  The touch screen type used by an application. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>undefined</code></td><td>0</td><td></td></tr>
<tr><td><code>notouch</code></td><td>1</td><td></td></tr>
<tr><td><code>stylus</code></td><td>2</td><td></td></tr>
<tr><td><code>finger</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int reqTouchScreen=0x01010227;
        /**   Specify whether this feature is required for the application.
              The default is true, meaning the application requires the
              feature, and does not want to be installed on devices that
              don't support it.  If you set this to false, then this will
              not impose a restriction on where the application can be
              installed. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int required=0x0101028e;
        /**  Indicates whether the application can resize itself to newer
             screen sizes.  This is mostly used to distinguish between old
             applications that may not be compatible with newly introduced
             screen sizes and newer applications that should be; it will be
             set for you automatically based on whether you are targeting
             a newer platform that supports more screens. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int resizeable=0x0101028d;
        /**  Resource identifier to assign to this piece of named meta-data.
             The resource identifier can later be retrieved from the meta data
             Bundle through {@link android.os.Bundle#getInt Bundle.getInt}. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int resource=0x01010025;
        /**  Indicate that the application is prepared to attempt a restore of any
         backed-up dataset, even if the backup is apparently from a newer version
         of the application than is currently installed on the device.  Setting
         this attribute to <code>true</code> will permit the Backup Manager to
         attempt restore even when a version mismatch suggests that the data are
         incompatible.  <em>Use with caution!</em>

         <p>The default value of this attribute is <code>false</code>. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int restoreAnyVersion=0x010102ba;
        /**  @deprecated This attribute is not used by the Android operating system. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int restoreNeedsApplication=0x0101029d;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int right=0x010101af;
        /**  Default style for RingtonePreference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ringtonePreferenceStyle=0x01010093;
        /**  Which ringtone type(s) to show in the picker. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ringtone</code></td><td>1</td><td> Ringtones. </td></tr>
<tr><td><code>notification</code></td><td>2</td><td> Notification sounds. </td></tr>
<tr><td><code>alarm</code></td><td>4</td><td> Alarm sounds. </td></tr>
<tr><td><code>all</code></td><td>7</td><td> All available ringtone sounds. </td></tr>
</table>
         */
        public static final int ringtoneType=0x010101f9;
        /**  Fraction of the animation duration used to delay the beginning of
         the animation of each row. 
         <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowDelay=0x010101d0;
        /**  Row edge flags. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>4</td><td> Row is anchored to the top of the keyboard. </td></tr>
<tr><td><code>bottom</code></td><td>8</td><td> Row is anchored to the bottom of the keyboard. </td></tr>
</table>
         */
        public static final int rowEdgeFlags=0x01010241;
        /**  Defines the height of each row. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowHeight=0x01010132;
        /**  If unset, no state will be saved for this view when it is being
             frozen. The default is true, allowing the view to be saved
             (however it also must have an ID assigned to it for its
             state to be saved).  Setting this to false only disables the
             state for this view, not for its children which may still
             be saved. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int saveEnabled=0x010100e7;
        /**  Specifies where the drawable is positioned after scaling. The default value is
             left. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the vertical gravity: a top gravity will clip the bottom
                 edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the horizontal gravity: a left gravity will clip the right
                 edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
         */
        public static final int scaleGravity=0x010101fe;
        /**  Scale height, expressed as a percentage of the drawable's bound. The value's
             format is XX%. For instance: 100%, 12.5%, etc.
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scaleHeight=0x010101fd;
        /**  Controls how the image should be resized or moved to match the size
             of this ImageView. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>matrix</code></td><td>0</td><td></td></tr>
<tr><td><code>fitXY</code></td><td>1</td><td></td></tr>
<tr><td><code>fitStart</code></td><td>2</td><td></td></tr>
<tr><td><code>fitCenter</code></td><td>3</td><td></td></tr>
<tr><td><code>fitEnd</code></td><td>4</td><td></td></tr>
<tr><td><code>center</code></td><td>5</td><td></td></tr>
<tr><td><code>centerCrop</code></td><td>6</td><td></td></tr>
<tr><td><code>centerInside</code></td><td>7</td><td></td></tr>
</table>
         */
        public static final int scaleType=0x0101011d;
        /**  Scale width, expressed as a percentage of the drawable's bound. The value's
             format is XX%. For instance: 100%, 12.5%, etc.
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scaleWidth=0x010101fc;
        /**  Specify a URI scheme that is handled, as per
             {@link android.content.IntentFilter#addDataScheme
             IntentFilter.addDataScheme()}.
             <p><em>Note: scheme matching in the Android framework is
             case-sensitive, unlike the formal RFC.  As a result,
             schemes here should always use lower case letters.</em></p> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scheme=0x01010027;
        /**  Specifies a compatible screen density, as per the device
             configuration screen density bins. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ldpi</code></td><td>120</td><td> A low density screen, approximately 120dpi. </td></tr>
<tr><td><code>mdpi</code></td><td>160</td><td> A medium density screen, approximately 160dpi. </td></tr>
<tr><td><code>hdpi</code></td><td>240</td><td> A high density screen, approximately 240dpi. </td></tr>
<tr><td><code>xhdpi</code></td><td>320</td><td> An extra high density screen, approximately 320dpi. </td></tr>
</table>
         */
        public static final int screenDensity=0x010102cb;
        /**  Specify the orientation an activity should be run in.  If not
         specified, it will run in the current preferred orientation
         of the screen. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>unspecified</code></td><td>-1</td><td> No preference specified: let the system decide the best
             orientation.  This will either be the orientation selected
             by the activity below, or the user's preferred orientation
             if this activity is the bottom of a task. If the user
             explicitly turned off sensor based orientation through settings
             sensor based device rotation will be ignored. If not by default
             sensor based orientation will be taken into account and the 
             orientation will changed based on how the user rotates the device </td></tr>
<tr><td><code>landscape</code></td><td>0</td><td> Would like to have the screen in a landscape orientation: that
             is, with the display wider than it is tall, ignoring sensor data. </td></tr>
<tr><td><code>portrait</code></td><td>1</td><td> Would like to have the screen in a portrait orientation: that
             is, with the display taller than it is wide, ignoring sensor data. </td></tr>
<tr><td><code>user</code></td><td>2</td><td> Use the user's current preferred orientation of the handset. </td></tr>
<tr><td><code>behind</code></td><td>3</td><td> Keep the screen in the same orientation as whatever is behind
             this activity. </td></tr>
<tr><td><code>sensor</code></td><td>4</td><td> Orientation is determined by a physical orientation sensor:
             the display will rotate based on how the user moves the device. </td></tr>
<tr><td><code>nosensor</code></td><td>5</td><td> Always ignore orientation determined by orientation sensor:
             the display will not rotate when the user moves the device. </td></tr>
<tr><td><code>sensorLandscape</code></td><td>6</td><td> Would like to have the screen in landscape orientation, but can
             use the sensor to change which direction the screen is facing. </td></tr>
<tr><td><code>sensorPortait</code></td><td>7</td><td> Would like to have the screen in portrait orientation, but can
             use the sensor to change which direction the screen is facing. </td></tr>
<tr><td><code>reverseLandscape</code></td><td>8</td><td> Would like to have the screen in landscape orientation, turned in
             the opposite direction from normal landscape. </td></tr>
<tr><td><code>reversePortait</code></td><td>9</td><td> Would like to have the screen in portrait orientation, turned in
             the opposite direction from normal portrait. </td></tr>
<tr><td><code>fullSensor</code></td><td>10</td><td> Orientation is determined by a physical orientation sensor:
             the display will rotate based on how the user moves the device.
             This allows any of the 4 possible rotations, regardless of what
             the device will normally do (for example some devices won't
             normally use 180 degree rotation). </td></tr>
</table>
         */
        public static final int screenOrientation=0x0101001e;
        /**  Specifies a compatible screen size, as per the device
             configuration screen size bins. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>small</code></td><td>200</td><td> A small screen configuration, at least 240x320db. </td></tr>
<tr><td><code>normal</code></td><td>300</td><td> A normal screen configuration, at least 320x480db. </td></tr>
<tr><td><code>large</code></td><td>400</td><td> A large screen configuration, at least 400x530db. </td></tr>
<tr><td><code>xlarge</code></td><td>500</td><td> An extra large screen configuration, at least 600x800db. </td></tr>
</table>
         */
        public static final int screenSize=0x010102ca;
        /**  Whether the text is allowed to be wider than the view (and
             therefore can be scrolled horizontally). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollHorizontally=0x0101015b;
        /**  Default ScrollView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollViewStyle=0x01010080;
        /**  The initial horizontal scroll offset, in pixels.
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollX=0x010100d2;
        /**  The initial vertical scroll offset, in pixels. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollY=0x010100d3;
        /**  Defines whether the horizontal scrollbar track should always be drawn. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarAlwaysDrawHorizontalTrack=0x01010068;
        /**  Defines whether the vertical scrollbar track should always be drawn. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarAlwaysDrawVerticalTrack=0x01010069;
        /**  Defines the delay in milliseconds that a scrollbar waits before fade out. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarDefaultDelayBeforeFade=0x010102a9;
        /**  Defines the delay in milliseconds that a scrollbar takes to fade out. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarFadeDuration=0x010102a8;
        /**  Sets the width of vertical scrollbars and height of horizontal scrollbars. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarSize=0x01010063;
        /**  Controls the scrollbar style and position. The scrollbars can be overlaid or
             inset. When inset, they add to the padding of the view. And the
             scrollbars can be drawn inside the padding area or on the edge of
             the view. For example, if a view has a background drawable and you
             want to draw the scrollbars inside the padding specified by the
             drawable, you can use insideOverlay or insideInset. If you want them
             to appear at the edge of the view, ignoring the padding, then you can
             use outsideOverlay or outsideInset.
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>insideOverlay</code></td><td>0x0</td><td> Inside the padding and overlaid </td></tr>
<tr><td><code>insideInset</code></td><td>0x01000000</td><td> Inside the padding and inset </td></tr>
<tr><td><code>outsideOverlay</code></td><td>0x02000000</td><td> Edge of the view and overlaid </td></tr>
<tr><td><code>outsideInset</code></td><td>0x03000000</td><td> Edge of the view and inset </td></tr>
</table>
         */
        public static final int scrollbarStyle=0x0101007f;
        /**  Defines the horizontal scrollbar thumb drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarThumbHorizontal=0x01010064;
        /**  Defines the vertical scrollbar thumb drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarThumbVertical=0x01010065;
        /**  Defines the horizontal scrollbar track drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarTrackHorizontal=0x01010066;
        /**  Defines the vertical scrollbar track drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarTrackVertical=0x01010067;
        /**  Defines which scrollbars should be displayed on scrolling or not. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No scrollbar is displayed. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00000100</td><td> Displays horizontal scrollbar only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00000200</td><td> Displays vertical scrollbar only. </td></tr>
</table>
         */
        public static final int scrollbars=0x010100de;
        /**  When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollingCache=0x010100fe;
        /**  If supplied, this string will be displayed as the text of the "Search" button.
          <i>Optional attribute.</i>
          {@deprecated This will create a non-standard UI appearance, because the search bar UI is
                       changing to use only icons for its buttons.}
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int searchButtonText=0x01010205;
        /**  Additional features are controlled by mode bits in this field.  Omitting
            this field, or setting to zero, provides default behavior.  <i>Optional attribute.</i>
        
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>showSearchLabelAsBadge</code></td><td>0x04</td><td> If set, this flag enables the display of the search target (label) within the
               search bar.  If neither bad mode is selected, no badge will be shown. </td></tr>
<tr><td><code>showSearchIconAsBadge</code></td><td>0x08</td><td><strong>This is deprecated.</strong><br/>The default
              application icon is now always used, so this option is
              obsolete.</td></tr>
<tr><td><code>queryRewriteFromData</code></td><td>0x10</td><td> If set, this flag causes the suggestion column SUGGEST_COLUMN_INTENT_DATA to
               be considered as the text for suggestion query rewriting.  This should only
               be used when the values in SUGGEST_COLUMN_INTENT_DATA are suitable for user
               inspection and editing - typically, HTTP/HTTPS Uri's. </td></tr>
<tr><td><code>queryRewriteFromText</code></td><td>0x20</td><td> If set, this flag causes the suggestion column SUGGEST_COLUMN_TEXT_1 to
               be considered as the text for suggestion query rewriting.  This should be used
               for suggestions in which no query text is provided and the SUGGEST_COLUMN_INTENT_DATA
               values are not suitable for user inspection and editing. </td></tr>
</table>
         */
        public static final int searchMode=0x010101d5;
        /**  If provided, this string will be used to describe the searchable item in the
             searchable items settings within system search settings. <i>Optional
             attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int searchSettingsDescription=0x0101028a;
        /**  If provided, this is the trigger indicating that the searchable activity
            provides suggestions as well.  The value must be a fully-qualified content provider
            authority (e.g. "com.example.android.apis.SuggestionProvider") and should match the
            "android:authorities" tag in your content provider's manifest entry.  <i>Optional
            attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int searchSuggestAuthority=0x010101d6;
        /**  If provided, and not overridden by an action in the selected suggestion, this
            string will be placed in the action field of the {@link android.content.Intent Intent}
            when the user clicks a suggestion.  <i>Optional attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int searchSuggestIntentAction=0x010101d9;
        /**  If provided, and not overridden by an action in the selected suggestion, this
            string will be placed in the data field of the {@link android.content.Intent Intent}
            when the user clicks a suggestion.  <i>Optional attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int searchSuggestIntentData=0x010101da;
        /**  If provided, this will be inserted in the suggestions query Uri, after the authority
            you have provide but before the standard suggestions path. <i>Optional attribute.</i>
            
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int searchSuggestPath=0x010101d7;
        /**  If provided, suggestion queries will be passed into your query function
            as the <i>selection</i> parameter.  Typically this will be a WHERE clause for your
            database, and will contain a single question mark, which represents the actual query
            string that has been typed by the user.  If not provided, then the user query text
            will be appended to the query Uri (after an additional "/".)  <i>Optional
            attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int searchSuggestSelection=0x010101d8;
        /**  If provided, this is the minimum number of characters needed to trigger
             search suggestions. The default value is 0. <i>Optional attribute.</i> 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int searchSuggestThreshold=0x0101026d;
        /**  Defines the secondary progress value, between 0 and max. This progress is drawn between
             the primary progress and the background.  It can be ideal for media scenarios such as
             showing the buffering progress while the default progress shows the play progress. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int secondaryProgress=0x01010138;
        /**  Default SeekBar style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int seekBarStyle=0x0101007b;
        /**  If the text is selectable, select it all when the view takes
             focus instead of moving the cursor to the start or end. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int selectAllOnFocus=0x0101015e;
        /**  Whether the Preference is selectable. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int selectable=0x010101e6;
        /**  Component name of an activity that allows the user to modify
             the settings for this service. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int settingsActivity=0x01010225;
        /**  Place a shadow of the specified color behind the text. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shadowColor=0x01010161;
        /**  Horizontal offset of the shadow. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shadowDx=0x01010162;
        /**  Vertical offset of the shadow. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shadowDy=0x01010163;
        /**  Radius of the shadow. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shadowRadius=0x01010164;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>rectangle</code></td><td>0</td><td></td></tr>
<tr><td><code>oval</code></td><td>1</td><td></td></tr>
<tr><td><code>line</code></td><td>2</td><td></td></tr>
<tr><td><code>ring</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int shape=0x0101019a;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shareInterpolator=0x010101bb;
        /**  Specify the name of a user ID that will be shared between multiple
         packages.  By default, each package gets its own unique user-id.
         By setting this value on two or more packages, each of these packages
         will be given a single shared user ID, so they can for example run
         in the same process.  Note that for them to actually get the same
         user ID, they must also be signed with the same signature. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int sharedUserId=0x0101000b;
        /**  Specify a label for the shared user UID of this package.  This is
         only used if you have also used android:sharedUserId.  This must
         be a reference to a string resource; it can not be an explicit
         string. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int sharedUserLabel=0x01010261;
        /**  Whether the view of this Preference should be disabled when
             this Preference is disabled. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shouldDisableView=0x010101ee;
        /**  Whether to show an item for a default sound. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int showDefault=0x010101fa;
        /**  Whether to show an item for 'Silent'. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int showSilent=0x010101fb;
        /**  The zero-based index of the columns to shrink. The column indices
             must be separated by a comma: 1, 2, 5. Illegal and duplicate
             indices are ignored. You can shrink all columns by using the
             value "*" instead. Note that a column can be marked stretchable
             and shrinkable at the same time. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shrinkColumns=0x0101014a;
        /**  Constrains the text to a single horizontally scrolling line
             instead of letting it wrap onto multiple lines, and advances
             focus instead of inserting a newline when you press the
             enter key.  Note: for editable text views, it is better
             to control this using the textMultiLine flag in the inputType
             attribute.  (If both singleLine and inputType are supplied,
             the inputType flags will override the value of singleLine.)
             {@deprecated This attribute is deprecated and is replaced by the textMultiLine flag
             in the inputType attribute.  Use caution when altering existing layouts, as the
             default value of singeLine is false (multi-line mode), but if you specify any
             value for inputType, the default is single-line mode.  (If both singleLine and
             inputType attributes are found,  the inputType flags will override the value of
             singleLine.) } 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int singleLine=0x0101015d;
        /**  Smaller icon of the authenticator. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int smallIcon=0x0101029e;
        /**  Indicates whether the application supports smaller screen form-factors.
             A small screen is defined as one with a smaller aspect ratio than
             the traditional HVGA screen; that is, for a portrait screen, less
             tall than an HVGA screen.  In practice, this means a QVGA low
             density or VGA high density screen.  An application that does
             not support small screens <em>will not be available</em> for
             small screen devices, since there is little the platform can do
             to make such an application work on a smaller screen. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int smallScreens=0x01010284;
        /**  When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int smoothScrollbar=0x01010231;
        /**  Boolean that controls whether a view should have sound effects
             enabled for events such as clicking and touching. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int soundEffectsEnabled=0x01010215;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int spacing=0x01010113;
        /**  Default style for spinner drop down items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int spinnerDropDownItemStyle=0x01010087;
        /**  Default spinner item style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int spinnerItemStyle=0x01010089;
        /**  Default Spinner style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int spinnerStyle=0x01010081;
        /**  Sets a drawable as the content of this ImageView. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int src=0x01010119;
        /**  Used by ListView and GridView to stack their content from the bottom. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stackFromBottom=0x010100fd;
        /**  Default Star style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int starStyle=0x01010082;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int startColor=0x0101019d;
        /**  Delay in milliseconds before the animation runs, once start time is reached. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int startOffset=0x010101be;
        /**  The first year (inclusive), for example "1940". 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int startYear=0x0101017c;
        /**  Indicates that an Activity does not need to have its freeze state
         (as returned by {@link android.app.Activity#onSaveInstanceState}
         retained in order to be restarted.  Generally you use this for activities
         that do not store any state.  When this flag is set, if for some reason
         the activity is killed before it has a chance to save its state,
         then the system will not remove it from the activity stack like
         it normally would.  Instead, the next time the user navigates to
         it its {@link android.app.Activity#onCreate} method will be called
         with a null icicle, just like it was starting for the first time.
         
         <p>This is used by the Home activity to make sure it does not get
         removed if it crashes for some reason. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stateNotNeeded=0x01010016;
        /**  State identifier indicating the popup will be above the anchor. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_above_anchor=0x010100aa;
        /**   State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_active=0x010100a2;
        /**   State identifier indicating that the object <var>may</var> display a check mark.
              See {@link R.attr#state_checked} for the identifier that indicates whether it is
              actually checked. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_checkable=0x0101009f;
        /**   State identifier indicating that the object is currently checked.  See
              {@link R.attr#state_checkable} for an additional identifier that can indicate if
              any object may ever display a check, regardless of whether state_checked is
              currently set. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_checked=0x010100a0;
        /**  State identifier indicating the group is empty (has no children). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_empty=0x010100a9;
        /**   State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_enabled=0x0101009e;
        /**  State identifier indicating the group is expanded. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_expanded=0x010100a8;
        /**   State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_first=0x010100a4;
        /**   State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_focused=0x0101009c;
        /**   State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_last=0x010100a6;
        /**  State for {@link android.inputmethodservice.KeyboardView KeyboardView}
                key preview background. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_long_pressable=0x0101023c;
        /**   State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_middle=0x010100a5;
        /**   State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_pressed=0x010100a7;
        /**   State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_selected=0x010100a1;
        /**   State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_single=0x010100a3;
        /**   State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_window_focused=0x0101009d;
        /**  The step size of the rating. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stepSize=0x01010146;
        /**  Different audio stream types. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>voice</code></td><td>0</td><td></td></tr>
<tr><td><code>system</code></td><td>1</td><td></td></tr>
<tr><td><code>ring</code></td><td>2</td><td></td></tr>
<tr><td><code>music</code></td><td>3</td><td></td></tr>
<tr><td><code>alarm</code></td><td>4</td><td></td></tr>
</table>
         */
        public static final int streamType=0x01010209;
        /**  The zero-based index of the columns to stretch. The column indices
             must be separated by a comma: 1, 2, 5. Illegal and duplicate
             indices are ignored. You can stretch all columns by using the
             value "*" instead. Note that a column can be marked stretchable
             and shrinkable at the same time. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stretchColumns=0x01010149;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>spacingWidth</code></td><td>1</td><td></td></tr>
<tr><td><code>columnWidth</code></td><td>2</td><td></td></tr>
<tr><td><code>spacingWidthUniform</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int stretchMode=0x01010116;
        /**  If you wish to handle an action key while a suggestion is being displayed <i>and
            selected</i>, there are two ways to handle this.  If <i>all</i> of your suggestions
            can handle the action key, you can simply define the action message using this
            attribute.  This will be added to the
            {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} intent that is passed to your
            searchable activity.  To examine the string, use
            {@link android.content.Intent#getStringExtra getStringExtra(SearchManager.ACTION_MSG)}.
            <i>Optional attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int suggestActionMsg=0x010101dc;
        /**  If you wish to handle an action key while a suggestion is being displayed <i>and
            selected</i>, but you do not wish to enable this action key for every suggestion,
            then you can use this attribute to control it on a suggestion-by-suggestion basis.
            First, you must define a column (and name it here) where your suggestions will include
            the action string.  Then, in your content provider, you must provide this column, and
            when desired, provide data in this column.
            The search manager will look at your suggestion cursor, using the string
            provided here in order to select a column, and will use that to select a string from
            the cursor.  That string will be added to the
            {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} intent that is passed to
            your searchable activity.  To examine the string, use
            {@link android.content.Intent#getStringExtra
            getStringExtra(SearchManager.ACTION_MSG)}.  <i>If the data does not exist for the
            selection suggestion, the action key will be ignored.</i><i>Optional attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int suggestActionMsgColumn=0x010101dd;
        /**  The summary for the Preference in a PreferenceActivity screen. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int summary=0x010101e9;
        /**  Column in data table that summarizes this data. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int summaryColumn=0x010102a2;
        /**  The summary for the Preference in a PreferenceActivity screen when the
             CheckBoxPreference is unchecked. If separate on/off summaries are not
             needed, the summary attribute can be used instead. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int summaryOff=0x010101f0;
        /**  The summary for the Preference in a PreferenceActivity screen when the
             CheckBoxPreference is checked. If separate on/off summaries are not
             needed, the summary attribute can be used instead. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int summaryOn=0x010101ef;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int supportsUploading=0x0101029b;
        /**  Flag indicating whether this content provider would like to
         participate in data synchronization. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int syncable=0x01010019;
        /**  Determines whether the strip under the tab indicators is drawn or not. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int tabStripEnabled=0x010102bd;
        /**  Drawable used to draw the left part of the strip underneath the tabs. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int tabStripLeft=0x010102bb;
        /**  Drawable used to draw the right part of the strip underneath the tabs. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int tabStripRight=0x010102bc;
        /**  Default TabWidget style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int tabWidgetStyle=0x01010083;
        /**  Supply a tag for this view containing a String, to be retrieved
             later with {@link android.view.View#getTag View.getTag()} or
             searched for with {@link android.view.View#findViewWithTag
             View.findViewWithTag()}.  It is generally preferable to use
             IDs (through the android:id attribute) instead of tags because
             they are faster and allow for compile-time type checking. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int tag=0x010100d1;
        /**  The name of the activity this alias should launch.  The activity
             must be in the same manifest as the alias, and have been defined
             in that manifest before the alias here.  This must use a Java-style
             naming convention to ensure the name is unique, for example
             "com.mycompany.MyName". 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int targetActivity=0x01010202;
        /**  The class part of the ComponentName to assign to the Intent, as per
            {@link android.content.Intent#setComponent Intent.setComponent()}. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int targetClass=0x0101002f;
        /**  The name of the application package that an Instrumentation object
         will run against. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int targetPackage=0x01010021;
        /**  This is the SDK version number that the application is targeting.
             It is able to run on older versions (down to minSdkVersion), but
             was explicitly tested to work with the version specified here.
             Specifying this version allows the platform to disable compatibility
             code that are not required or enable newer features that are not
             available to older applications.  This may also be a string
             (such as "Donut") if this is built against a development
             branch, in which case minSdkVersion is also forced to be that
             string. 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int targetSdkVersion=0x01010270;
        /**  Specify a task name that activities have an "affinity" to.
         Use with the application tag (to supply a default affinity for all
         activities in the application), or with the activity tag (to supply
         a specific affinity for that component).
    
         <p>The default value for this attribute is the same as the package
         name, indicating that all activities in the manifest should generally
         be considered a single "application" to the user.  You can use this
         attribute to modify that behavior: either giving them an affinity
         for another task, if the activities are intended to be part of that
         task from the user's perspective, or using an empty string for
         activities that have no affinity to a task. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int taskAffinity=0x01010012;
        /**   When closing the last activity of a task, this is the animation that is
              run on the activity of the next task (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskCloseEnterAnimation=0x010100be;
        /**   When opening an activity in a new task, this is the animation that is
              run on the activity of the old task (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskCloseExitAnimation=0x010100bf;
        /**   When opening an activity in a new task, this is the animation that is
              run on the activity of the new task (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskOpenEnterAnimation=0x010100bc;
        /**   When opening an activity in a new task, this is the animation that is
              run on the activity of the old task (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskOpenExitAnimation=0x010100bd;
        /**   When sending the current task to the background, this is the
              animation that is run on the top activity of the task behind
              it (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskToBackEnterAnimation=0x010100c2;
        /**   When sending the current task to the background, this is the
              animation that is run on the top activity of the current task
              (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskToBackExitAnimation=0x010100c3;
        /**   When bringing an existing task to the foreground, this is the
              animation that is run on the top activity of the task being brought
              to the foreground (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskToFrontEnterAnimation=0x010100c0;
        /**   When bringing an existing task to the foreground, this is the
              animation that is run on the current foreground activity
              (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskToFrontExitAnimation=0x010100c1;
        /**  This is the amount of tension. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int tension=0x0101026a;
        /**  Option to indicate this application is only for testing purposes.
         For example, it may expose functionality or data outside of itself
         that would cause a security hole, but is useful for testing.  This
         kind of application can not be installed without the
         INSTALL_ALLOW_TEST flag, which means only through adb install.  
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int testOnly=0x01010272;
        /**  Text to display. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int text=0x0101014f;
        /**  Default appearance of text: color, typeface, size, and style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearance=0x01010034;
        /**  Text color, typeface, size, and style for the text inside of a button. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceButton=0x01010207;
        /**  Default appearance of text against an inverted background:
             color, typeface, size, and style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceInverse=0x01010035;
        /**  Text color, typeface, size, and style for "large" text. Defaults to primary text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceLarge=0x01010040;
        /**  Text color, typeface, size, and style for "large" inverse text. Defaults to primary inverse text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceLargeInverse=0x01010043;
        /**  Text color, typeface, size, and style for "medium" text. Defaults to primary text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceMedium=0x01010041;
        /**  Text color, typeface, size, and style for "medium" inverse text. Defaults to primary inverse text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceMediumInverse=0x01010044;
        /**  Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSearchResultSubtitle=0x010102a0;
        /**  Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSearchResultTitle=0x010102a1;
        /**  Text color, typeface, size, and style for "small" text. Defaults to secondary text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSmall=0x01010042;
        /**  Text color, typeface, size, and style for "small" inverse text. Defaults to secondary inverse text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSmallInverse=0x01010045;
        /**  Drawable to use for check marks. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textCheckMark=0x01010046;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textCheckMarkInverse=0x01010047;
        /**  Color of text (usually same as colorForeground). 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColor=0x01010098;
        /**  Color of highlighted text. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorHighlight=0x01010099;
        /**  Color of hint text (displayed when the field is empty). 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorHint=0x0101009a;
        /**  Inverse hint text color. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorHintInverse=0x0101003f;
        /**  Color of link text (URLs). 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorLink=0x0101009b;
        /**  The most prominent text color.  
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorPrimary=0x01010036;
        /**  Bright text color. Only differentiates based on the disabled state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorPrimaryDisableOnly=0x01010037;
        /**  Primary inverse text color, useful for inverted backgrounds. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorPrimaryInverse=0x01010039;
        /**  Bright inverse text color. Only differentiates based on the disabled state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorPrimaryInverseDisableOnly=0x0101028b;
        /**  Bright inverse text color. This does not differentiate the disabled state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorPrimaryInverseNoDisable=0x0101003d;
        /**  Bright text color. This does not differentiate the disabled state. As an example,
             buttons use this since they display the disabled state via the background and not the
             foreground text color. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorPrimaryNoDisable=0x0101003b;
        /**  Secondary text color. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorSecondary=0x01010038;
        /**  Secondary inverse text color, useful for inverted backgrounds. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorSecondaryInverse=0x0101003a;
        /**  Dim inverse text color. This does not differentiate the disabled state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorSecondaryInverseNoDisable=0x0101003e;
        /**  Dim text color. This does not differentiate the disabled state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorSecondaryNoDisable=0x0101003c;
        /**  Tertiary text color. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorTertiary=0x01010212;
        /**  Tertiary inverse text color, useful for inverted backgrounds. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorTertiaryInverse=0x01010213;
        /**  When set to true, the list will filter results as the user types. The
             List's adapter must support the Filterable interface for this to work. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textFilterEnabled=0x010100ff;
        /**  The text for the button when it is not checked. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textOff=0x01010125;
        /**  The text for the button when it is checked. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textOn=0x01010124;
        /**  Sets the horizontal scaling factor for the text. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textScaleX=0x01010151;
        /**  Reference to a drawable that will be used to display a text selection
             anchor for positioning the cursor within text. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textSelectHandle=0x010102c7;
        /**  Reference to a drawable that will be used to display a text selection
             anchor on the left side of a selection region. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textSelectHandleLeft=0x010102c5;
        /**  Reference to a drawable that will be used to display a text selection
             anchor on the right side of a selection region. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textSelectHandleRight=0x010102c6;
        /**  Reference to a style that will be used for the window containing a text
             selection anchor. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textSelectHandleWindowStyle=0x010102c8;
        /**  Size of text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp).
         Supported values include the following:<p/>
    <ul>
        <li><b>px</b> Pixels</li>
        <li><b>sp</b> Scaled pixels (scaled to relative pixel size on screen). See {@link android.util.DisplayMetrics} for more information.</li>
        <li><b>pt</b> Points</li>
        <li><b>dip</b> Device independent pixels. See {@link android.util.DisplayMetrics} for more information.</li>
    </ul>
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textSize=0x01010095;
        /**  Default text typeface style. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
         */
        public static final int textStyle=0x01010097;
        /**  Default TextView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textViewStyle=0x01010084;
        /**  The overall theme to use for an activity.  Use with either the
         application tag (to supply a default theme for all activities) or
         the activity tag (to supply a specific theme for that activity).
    
         <p>This automatically sets
         your activity's Context to use this theme, and may also be used
         for "starting" animations prior to the activity being launched (to
         better match what the activity actually looks like).  It is a reference
         to a style resource defining the theme.  If not set, the default
         system theme will be used. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int theme=0x01010000;
        /**  Thickness of the ring. When defined, thicknessRatio is ignored. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thickness=0x01010260;
        /**  Thickness of the ring expressed as a ratio of the ring's width. For instance,
             if thicknessRatio=3, then the thickness equals the ring's width divided by 3.
             This value is ignored if innerRadius is defined. Default value is 3. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thicknessRatio=0x0101019c;
        /**  Draws the thumb on a seekbar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int thumb=0x01010142;
        /**  An offset for the thumb that allows it to extend out of the range of the track. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thumbOffset=0x01010143;
        /**  Reference to a the wallpaper's thumbnail bitmap. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int thumbnail=0x010102a5;
        /**  Defines the tile mode. When the tile mode is enabled, the bitmap is repeated.
             Gravity is ignored when the tile mode is enabled. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>-1</td><td> Do not tile the bitmap. This is the default value. </td></tr>
<tr><td><code>clamp</code></td><td>0</td><td> Replicates the edge color. </td></tr>
<tr><td><code>repeat</code></td><td>1</td><td> Repeats the bitmap in both direction. </td></tr>
<tr><td><code>mirror</code></td><td>2</td><td> Repeats the shader's image horizontally and vertically, alternating
                 mirror images so that adjacent images always seam. </td></tr>
</table>
         */
        public static final int tileMode=0x01010201;
        /**  Set a tinting color for the image. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int tint=0x01010121;
        /**  The title associated with the item. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int title=0x010101e1;
        /**  The condensed title associated with the item.  This is used in situations where the
             normal title may be too long to be displayed. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int titleCondensed=0x010101e2;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int toAlpha=0x010101cb;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int toDegrees=0x010101b4;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int toXDelta=0x010101c7;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int toXScale=0x010101c3;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int toYDelta=0x010101c9;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int toYScale=0x010101c5;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int top=0x010101ae;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int topBright=0x010100cb;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int topDark=0x010100c7;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int topLeftRadius=0x010101a9;
        /**  Extra offset for the handle at the top of the SlidingDrawer. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int topOffset=0x01010258;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int topRightRadius=0x010101aa;
        /**  Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0</td><td> Disables transcript mode. This is the default value. </td></tr>
<tr><td><code>normal</code></td><td>1</td><td> The list will automatically scroll to the bottom when
                 a data set change notification is received and only if the last item is
                 already visible on screen. </td></tr>
<tr><td><code>alwaysScroll</code></td><td>2</td><td> The list will automatically scroll to the bottom, no matter what items
                 are currently visible. </td></tr>
</table>
         */
        public static final int transcriptMode=0x01010100;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>linear</code></td><td>0</td><td></td></tr>
<tr><td><code>radial</code></td><td>1</td><td></td></tr>
<tr><td><code>sweep</code></td><td>2</td><td></td></tr>
</table>
         */
        public static final int type=0x010101a1;
        /**  Default text typeface. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>sans</code></td><td>1</td><td></td></tr>
<tr><td><code>serif</code></td><td>2</td><td></td></tr>
<tr><td><code>monospace</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int typeface=0x01010096;
        /**  Color used to draw the user's strokes until we are sure it's a gesture. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int uncertainGestureColor=0x01010276;
        /**  Sets the alpha on the items that are not selected. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int unselectedAlpha=0x0101020e;
        /**  Update period in milliseconds, or 0 if the AppWidget will update itself. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int updatePeriodMillis=0x01010250;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int useLevel=0x0101019f;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int userVisible=0x01010291;
        /**  Concrete value to assign to this piece of named meta-data.
             The data can later be retrieved from the meta data Bundle
             through {@link android.os.Bundle#getString Bundle.getString},
             {@link android.os.Bundle#getInt Bundle.getInt},
             {@link android.os.Bundle#getBoolean Bundle.getBoolean},
             or {@link android.os.Bundle#getFloat Bundle.getFloat} depending
             on the type used here. 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>May be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int value=0x01010024;
        /**  If true, allows the drawable's padding to change based on the
             current state that is selected.  If false, the padding will
             stay the same (based on the maximum padding of all the states).
             Enabling this feature requires that the owner of the drawable
             deal with performing layout when the state changes, which is
             often not supported. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int variablePadding=0x01010195;
        /**  Internal version code.  This is the number used to determine whether
         one version is more recent than another: it has no other meaning than
         that higher numbers are more recent.  You could use this number to
         encode a "x.y" in the lower and upper 16 bits, make it a build
         number, simply increase it by one each time a new version is
         released, or define it however else you want, as long as each
         successive version has a higher number.  This is not a version
         number generally shown to the user, that is usually supplied 
         with {@link android.R.attr#versionName}. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int versionCode=0x0101021b;
        /**  The text shown to the user to indicate the version they have.  This
         is used for no other purpose than display to the user; the actual
         significant version number is given by {@link android.R.attr#versionCode}. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int versionName=0x0101021c;
        /**  Amount to offset the touch Y coordinate by, for bias correction. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalCorrection=0x0101023a;
        /**  Default vertical divider between menu items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int verticalDivider=0x0101012e;
        /**  Default vertical gap between rows of keys. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalGap=0x01010240;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalSpacing=0x01010115;
        /**  Controls the initial visibility of the view.  
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>visible</code></td><td>0</td><td> Visible on screen; the default value. </td></tr>
<tr><td><code>invisible</code></td><td>1</td><td> Not displayed, but taken into account during layout (space is left for it). </td></tr>
<tr><td><code>gone</code></td><td>2</td><td> Completely hidden, as if the view had not been added. </td></tr>
</table>
         */
        public static final int visibility=0x010100dc;
        /**  Provides initial visibility state of the drawable; the default
             value is false.  See
             {@link android.graphics.drawable.Drawable#setVisible}. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int visible=0x01010194;
        /**  Flag indicating whether the application requests the VM to operate in
         the safe mode.  
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int vmSafeMode=0x010102b8;
        /**  If provided, this specifies the spoken language to be expected, and that it will be
             different than the one set in the {@link java.util.Locale#getDefault()}. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int voiceLanguage=0x01010255;
        /**  If provided, this specifies the language model that should be used by the
             voice recognition system.  See
             {@link android.speech.RecognizerIntent#EXTRA_LANGUAGE_MODEL } for more information.
             If not provided, the default value
             {@link android.speech.RecognizerIntent#LANGUAGE_MODEL_FREE_FORM } will be used. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int voiceLanguageModel=0x01010253;
        /**  If provided, enforces the maximum number of results to return, including the "best"
             result which will always be provided as the SEARCH intent's primary query.  Must be one
             or greater.  If not provided, the recognizer will choose how many results to return.
             
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int voiceMaxResults=0x01010256;
        /**  If provided, this specifies a prompt that will be displayed during voice input. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int voicePromptText=0x01010254;
        /**  Voice search features are controlled by mode bits in this field.  Omitting
            this field, or setting to zero, provides default behavior.
            If showVoiceSearchButton is set, then launchWebSearch or launchRecognizer must
            also be set.  <i>Optional attribute.</i>
        
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>showVoiceSearchButton</code></td><td>0x01</td><td> If set, display a voice search button.  This only takes effect if voice search is
               available on the device. </td></tr>
<tr><td><code>launchWebSearch</code></td><td>0x02</td><td> If set, the voice search button will take the user directly to a built-in
               voice web search activity.  Most applications will not use this flag, as it
               will take the user away from the activity in which search was invoked. </td></tr>
<tr><td><code>launchRecognizer</code></td><td>0x04</td><td> If set, the voice search button will take the user directly to a built-in
               voice recording activity.  This activity will prompt the user to speak,
               transcribe the spoken text, and forward the resulting query
               text to the searchable activity, just as if the user had typed it into
               the search UI and clicked the search button. </td></tr>
</table>
         */
        public static final int voiceSearchMode=0x01010252;
        /**   When opening a new activity that hides the wallpaper, while
              currently showing the wallpaper, this is the animation that
              is run on the new activity (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperCloseEnterAnimation=0x01010295;
        /**   When opening a new activity that hides the wallpaper, while
              currently showing the wallpaper, this is the animation that
              is run on the old wallpaper activity (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperCloseExitAnimation=0x01010296;
        /**   When closing a foreround activity that is on top of the wallpaper
              when the previous activity is also on top of the wallpaper,
              this is the animation that is run on the previous activity
              (which is entering the screen).  The wallpaper remains
              static behind the animation. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperIntraCloseEnterAnimation=0x01010299;
        /**   When closing a foreround activity that is on top of the wallpaper
              when the previous activity is also on top of the wallpaper,
              this is the animation that is run on the current activity
              (which is exiting the screen).  The wallpaper remains
              static behind the animation. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperIntraCloseExitAnimation=0x0101029a;
        /**   When opening a new activity that is on top of the wallpaper
              when the current activity is also on top of the wallpaper,
              this is the animation that is run on the new activity
              (which is entering the screen).  The wallpaper remains
              static behind the animation. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperIntraOpenEnterAnimation=0x01010297;
        /**   When opening a new activity that is on top of the wallpaper
              when the current activity is also on top of the wallpaper,
              this is the animation that is run on the current activity
              (which is exiting the screen).  The wallpaper remains
              static behind the animation. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperIntraOpenExitAnimation=0x01010298;
        /**   When opening a new activity that shows the wallpaper, while
              currently not showing the wallpaper, this is the animation that
              is run on the new wallpaper activity (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperOpenEnterAnimation=0x01010293;
        /**   When opening a new activity that shows the wallpaper, while
              currently not showing the wallpaper, this is the animation that
              is run on the current activity (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperOpenExitAnimation=0x01010294;
        /**  Default WebTextView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int webTextViewStyle=0x010102b9;
        /**  Default WebView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int webViewStyle=0x01010085;
        /**  Defines the maximum weight sum. If unspecified, the sum is computed
             by adding the layout_weight of all of the children. This can be
             used for instance to give a single child 50% of the total available
             space by giving it a layout_weight of 0.5 and setting the weightSum
             to 1.0. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int weightSum=0x01010128;
        /**  The layout for the controllable widget portion of a Preference. This is inflated
             into the layout for a Preference and should be used more frequently than
             the layout attribute. For example, a checkbox preference would specify
             a custom layout (consisting of just the CheckBox) here. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int widgetLayout=0x010101eb;
        /**  Makes the TextView be exactly this many pixels wide.
             You could get the same effect by specifying this number in the
             layout parameters. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int width=0x01010159;
        /**  Reference to a style resource holding
             the set of window animations to use, which can be
             any of the attributes defined by
             {@link android.R.styleable#WindowAnimation}. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowAnimationStyle=0x010100ae;
        /**  Drawable to use as the overall window background.  There are a
             few special considerations you should use when settings this
             drawable:
             <ul>
             <li> This information will be used to infer the pixel format
                  for your window's surface.  If the drawable has any
                  non-opaque pixels, your window will be translucent
                  (32 bpp).
             <li> If you want to draw the entire background
                  yourself, you should set this drawable to some solid
                  color that closely matches that background (so the
                  system's preview of your window will match), and
                  then in code manually set your window's background to
                  null so it will not be drawn.
             </ul> 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowBackground=0x01010054;
        /**  This Drawable is overlaid over the foreground of the Window's content area, usually
             to place a shadow below the title.  
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowContentOverlay=0x01010059;
        /**  Flag allowing you to disable the preview animation for a window.
             The default value is false; if set to true, the system can never
             use the window's theme to show a preview of it before your
             actual instance is shown to the user. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowDisablePreview=0x01010222;
        /**  The animation used when a window is being added. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowEnterAnimation=0x010100b4;
        /**  The animation used when a window is being removed. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowExitAnimation=0x010100b5;
        /**  Drawable to use as a frame around the window. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowFrame=0x01010055;
        /**  Flag indicating whether this window should fill the entire screen. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowFullscreen=0x0101020d;
        /**  The animation used when a window is going from VISIBLE to INVISIBLE. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowHideAnimation=0x010100b7;
        /**  Flag indicating whether this is a floating window. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowIsFloating=0x01010057;
        /**  Flag indicating whether this is a translucent window. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowIsTranslucent=0x01010058;
        /**  Flag indicating that this window should not be displayed at all.
             The default value is false; if set to true, and this window is
             the main window of an Activity, then it will never actually
             be added to the window manager.  This means that your activity
             must immediately quit without waiting for user interaction,
             because there will be no such interaction coming. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowNoDisplay=0x0101021e;
        /**  Flag indicating whether there should be no title on this window. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowNoTitle=0x01010056;
        /**  The animation used when a window is going from INVISIBLE to VISIBLE. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowShowAnimation=0x010100b6;
        /**  Flag indicating that this window's background should be the
        	 user's current wallpaper. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowShowWallpaper=0x01010292;
        /**  Defines the default soft input state that this window would
             like when it is displayed. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>stateUnspecified</code></td><td>0</td><td> Not specified, use what the system thinks is best.  This
                 is the default. </td></tr>
<tr><td><code>stateUnchanged</code></td><td>1</td><td> Leave the soft input window as-is, in whatever state it
                 last was. </td></tr>
<tr><td><code>stateHidden</code></td><td>2</td><td> Make the soft input area hidden when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysHidden</code></td><td>3</td><td> Always make the soft input area hidden when this window
                 has input focus. </td></tr>
<tr><td><code>stateVisible</code></td><td>4</td><td> Make the soft input area visible when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysVisible</code></td><td>5</td><td> Always make the soft input area visible when this window
                 has input focus. </td></tr>
<tr><td><code>adjustUnspecified</code></td><td>0x00</td><td> The window resize/pan adjustment has not been specified,
                 the system will automatically select between resize and pan
                 modes, depending
                 on whether the content of the window has any layout views
                 that can scroll their contents.  If there is such a view,
                 then the window will be resized, with the assumption being
                 that the resizeable area can be reduced to make room for
                 the input UI. </td></tr>
<tr><td><code>adjustResize</code></td><td>0x10</td><td> Always resize the window: the content area of the window is
                 reduced to make room for the soft input area. </td></tr>
<tr><td><code>adjustPan</code></td><td>0x20</td><td> Don't resize the window to make room for the soft input area;
                 instead pan the contents of the window as focus moves inside
                 of it so that the user can see what they are typing.  This is
                 generally less desireable than panning because the user may
                 need to close the input area to get at and interact with
                 parts of the window. </td></tr>
</table>
         */
        public static final int windowSoftInputMode=0x0101022b;
        /**  The style resource to use for a window's title area. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowTitleBackgroundStyle=0x0101005c;
        /**  The style resource to use for a window's title bar height. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowTitleSize=0x0101005a;
        /**  The style resource to use for a window's title text. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowTitleStyle=0x0101005b;
        /**  A specific {@link android.R.attr#permission} name for write
         access to a {@link android.content.ContentProvider}.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int writePermission=0x01010008;
        /**  A coordinate in the X dimension. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int x=0x010100ac;
        /**  Indicates whether the application supports extra large screen form-factors. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int xlargeScreens=0x010102bf;
        /**  A coordinate in the Y dimension. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int y=0x010100ad;
        /**  Default style for YesNoPreference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int yesNoPreferenceStyle=0x01010090;
        /**  Allows for an adjustment of the Z ordering of the content being
             animated for the duration of the animation.  The default value is normal. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> The content being animated be kept in its current Z order. </td></tr>
<tr><td><code>top</code></td><td>1</td><td> The content being animated is forced on top of all other
                 content for the duration of the animation. </td></tr>
<tr><td><code>bottom</code></td><td>-1</td><td> The content being animated is forced under all other
                 content for the duration of the animation. </td></tr>
</table>
         */
        public static final int zAdjustment=0x010101c1;
    }
    public static final class bool {
    }
    public static final class color {
        public static final int background_dark=0x0106000e;
        public static final int background_light=0x0106000f;
        public static final int black=0x0106000c;
        public static final int darker_gray=0x01060000;
        public static final int primary_text_dark=0x01060001;
        public static final int primary_text_dark_nodisable=0x01060002;
        public static final int primary_text_light=0x01060003;
        public static final int primary_text_light_nodisable=0x01060004;
        public static final int secondary_text_dark=0x01060005;
        public static final int secondary_text_dark_nodisable=0x01060006;
        public static final int secondary_text_light=0x01060007;
        public static final int secondary_text_light_nodisable=0x01060008;
        public static final int tab_indicator_text=0x01060009;
        public static final int tertiary_text_dark=0x01060010;
        public static final int tertiary_text_light=0x01060011;
        public static final int transparent=0x0106000d;
        public static final int white=0x0106000b;
        public static final int widget_edittext_dark=0x0106000a;
    }
    public static final class dimen {
        /**  The standard size (both width and height) of an application icon that
         will be displayed in the app launcher and elsewhere. 
         */
        public static final int app_icon_size=0x01050000;
        /**  The height that is used when creating thumbnails of applications. 
         */
        public static final int thumbnail_height=0x01050001;
        /**  The width that is used when creating thumbnails of applications. 
         */
        public static final int thumbnail_width=0x01050002;
    }
    public static final class drawable {
        public static final int alert_dark_frame=0x01080000;
        public static final int alert_light_frame=0x01080001;
        public static final int arrow_down_float=0x01080002;
        public static final int arrow_up_float=0x01080003;
        public static final int bottom_bar=0x0108009a;
        public static final int btn_default=0x01080004;
        public static final int btn_default_small=0x01080005;
        public static final int btn_dialog=0x01080017;
        public static final int btn_dropdown=0x01080006;
        public static final int btn_minus=0x01080007;
        public static final int btn_plus=0x01080008;
        public static final int btn_radio=0x01080009;
        public static final int btn_star=0x0108000a;
        public static final int btn_star_big_off=0x0108000b;
        public static final int btn_star_big_on=0x0108000c;
        public static final int button_onoff_indicator_off=0x0108000e;
        public static final int button_onoff_indicator_on=0x0108000d;
        public static final int checkbox_off_background=0x0108000f;
        public static final int checkbox_on_background=0x01080010;
        /**   Drawable to use as a background for separators on a list with a dark background 
         */
        public static final int dark_header=0x010800a5;
        public static final int dialog_frame=0x01080011;
        public static final int divider_horizontal_bright=0x01080012;
        public static final int divider_horizontal_dark=0x01080014;
        public static final int divider_horizontal_dim_dark=0x01080015;
        public static final int divider_horizontal_textfield=0x01080013;
        public static final int edit_text=0x01080016;
        public static final int editbox_background=0x01080018;
        public static final int editbox_background_normal=0x01080019;
        public static final int editbox_dropdown_dark_frame=0x0108001a;
        public static final int editbox_dropdown_light_frame=0x0108001b;
        public static final int gallery_thumb=0x0108001c;
        public static final int ic_btn_speak_now=0x010800a4;
        public static final int ic_delete=0x0108001d;
        public static final int ic_dialog_alert=0x01080027;
        public static final int ic_dialog_dialer=0x01080028;
        public static final int ic_dialog_email=0x01080029;
        public static final int ic_dialog_info=0x0108009b;
        public static final int ic_dialog_map=0x0108002a;
        public static final int ic_input_add=0x0108002b;
        public static final int ic_input_delete=0x0108002c;
        public static final int ic_input_get=0x0108002d;
        public static final int ic_lock_idle_alarm=0x0108002e;
        public static final int ic_lock_idle_charging=0x0108001e;
        public static final int ic_lock_idle_lock=0x0108001f;
        public static final int ic_lock_idle_low_battery=0x01080020;
        public static final int ic_lock_lock=0x0108002f;
        public static final int ic_lock_power_off=0x01080030;
        public static final int ic_lock_silent_mode=0x01080031;
        public static final int ic_lock_silent_mode_off=0x01080032;
        public static final int ic_media_ff=0x01080021;
        public static final int ic_media_next=0x01080022;
        public static final int ic_media_pause=0x01080023;
        public static final int ic_media_play=0x01080024;
        public static final int ic_media_previous=0x01080025;
        public static final int ic_media_rew=0x01080026;
        public static final int ic_menu_add=0x01080033;
        public static final int ic_menu_agenda=0x01080034;
        public static final int ic_menu_always_landscape_portrait=0x01080035;
        public static final int ic_menu_call=0x01080036;
        public static final int ic_menu_camera=0x01080037;
        public static final int ic_menu_close_clear_cancel=0x01080038;
        public static final int ic_menu_compass=0x01080039;
        public static final int ic_menu_crop=0x0108003a;
        public static final int ic_menu_day=0x0108003b;
        public static final int ic_menu_delete=0x0108003c;
        public static final int ic_menu_directions=0x0108003d;
        public static final int ic_menu_edit=0x0108003e;
        public static final int ic_menu_gallery=0x0108003f;
        public static final int ic_menu_help=0x01080040;
        public static final int ic_menu_info_details=0x01080041;
        public static final int ic_menu_manage=0x01080042;
        public static final int ic_menu_mapmode=0x01080043;
        public static final int ic_menu_month=0x01080044;
        public static final int ic_menu_more=0x01080045;
        public static final int ic_menu_my_calendar=0x01080046;
        public static final int ic_menu_mylocation=0x01080047;
        public static final int ic_menu_myplaces=0x01080048;
        public static final int ic_menu_preferences=0x01080049;
        public static final int ic_menu_recent_history=0x0108004a;
        public static final int ic_menu_report_image=0x0108004b;
        public static final int ic_menu_revert=0x0108004c;
        public static final int ic_menu_rotate=0x0108004d;
        public static final int ic_menu_save=0x0108004e;
        public static final int ic_menu_search=0x0108004f;
        public static final int ic_menu_send=0x01080050;
        public static final int ic_menu_set_as=0x01080051;
        public static final int ic_menu_share=0x01080052;
        public static final int ic_menu_slideshow=0x01080053;
        public static final int ic_menu_sort_alphabetically=0x0108009c;
        public static final int ic_menu_sort_by_size=0x0108009d;
        public static final int ic_menu_today=0x01080054;
        public static final int ic_menu_upload=0x01080055;
        public static final int ic_menu_upload_you_tube=0x01080056;
        public static final int ic_menu_view=0x01080057;
        public static final int ic_menu_week=0x01080058;
        public static final int ic_menu_zoom=0x01080059;
        public static final int ic_notification_clear_all=0x0108005a;
        public static final int ic_notification_overlay=0x0108005b;
        public static final int ic_partial_secure=0x0108005c;
        public static final int ic_popup_disk_full=0x0108005d;
        public static final int ic_popup_reminder=0x0108005e;
        public static final int ic_popup_sync=0x0108005f;
        public static final int ic_search_category_default=0x01080060;
        public static final int ic_secure=0x01080061;
        public static final int list_selector_background=0x01080062;
        public static final int menu_frame=0x01080063;
        public static final int menu_full_frame=0x01080064;
        public static final int menuitem_background=0x01080065;
        public static final int picture_frame=0x01080066;
        public static final int presence_audio_away=0x010800af;
        public static final int presence_audio_busy=0x010800b0;
        public static final int presence_audio_online=0x010800b1;
        public static final int presence_away=0x01080067;
        public static final int presence_busy=0x01080068;
        public static final int presence_invisible=0x01080069;
        public static final int presence_offline=0x0108006a;
        public static final int presence_online=0x0108006b;
        /**  presence drawables for videochat or audiochat capable contacts 
         */
        public static final int presence_video_away=0x010800ac;
        public static final int presence_video_busy=0x010800ad;
        public static final int presence_video_online=0x010800ae;
        public static final int progress_horizontal=0x0108006c;
        public static final int progress_indeterminate_horizontal=0x0108006d;
        public static final int radiobutton_off_background=0x0108006e;
        public static final int radiobutton_on_background=0x0108006f;
        public static final int screen_background_dark=0x01080098;
        /**  Semi-transparent background that can be used when placing a dark
       themed UI on top of some arbitrary background (such as the
       wallpaper).  This darkens the background sufficiently that the UI
       can be seen. 
 Background drawable that can be used for a transparent activity to
         be able to display a dark UI: this darkens its background to make
         a dark (default theme) UI more visible. 
         */
        public static final int screen_background_dark_transparent=0x010800a9;
        public static final int screen_background_light=0x01080099;
        /**  Background drawable that can be used for a transparent activity to
         be able to display a light UI: this lightens its background to make
         a light UI more visible. 
         */
        public static final int screen_background_light_transparent=0x010800aa;
        public static final int spinner_background=0x01080070;
        public static final int spinner_dropdown_background=0x01080071;
        public static final int star_big_off=0x01080073;
        public static final int star_big_on=0x01080072;
        public static final int star_off=0x01080075;
        public static final int star_on=0x01080074;
        public static final int stat_notify_call_mute=0x01080076;
        public static final int stat_notify_chat=0x01080077;
        public static final int stat_notify_error=0x01080078;
        public static final int stat_notify_missed_call=0x0108007f;
        public static final int stat_notify_more=0x01080079;
        public static final int stat_notify_sdcard=0x0108007a;
        public static final int stat_notify_sdcard_prepare=0x010800ab;
        public static final int stat_notify_sdcard_usb=0x0108007b;
        public static final int stat_notify_sync=0x0108007c;
        public static final int stat_notify_sync_noanim=0x0108007d;
        public static final int stat_notify_voicemail=0x0108007e;
        public static final int stat_sys_data_bluetooth=0x01080080;
        public static final int stat_sys_download=0x01080081;
        public static final int stat_sys_download_done=0x01080082;
        public static final int stat_sys_headset=0x01080083;
        /**  @deprecated Replaced by a private asset in the phone app. 
         */
        @Deprecated
        public static final int stat_sys_phone_call=0x01080084;
        /**  @deprecated Replaced by a private asset in the phone app. 
         */
        @Deprecated
        public static final int stat_sys_phone_call_forward=0x01080085;
        /**  @deprecated Replaced by a private asset in the phone app. 
         */
        @Deprecated
        public static final int stat_sys_phone_call_on_hold=0x01080086;
        public static final int stat_sys_speakerphone=0x01080087;
        public static final int stat_sys_upload=0x01080088;
        public static final int stat_sys_upload_done=0x01080089;
        /**  @deprecated Replaced by a private asset in the phone app. 
         */
        @Deprecated
        public static final int stat_sys_vp_phone_call=0x010800a7;
        /**  @deprecated Replaced by a private asset in the phone app. 
         */
        @Deprecated
        public static final int stat_sys_vp_phone_call_on_hold=0x010800a8;
        public static final int stat_sys_warning=0x0108008a;
        public static final int status_bar_item_app_background=0x0108008b;
        public static final int status_bar_item_background=0x0108008c;
        public static final int sym_action_call=0x0108008d;
        public static final int sym_action_chat=0x0108008e;
        public static final int sym_action_email=0x0108008f;
        public static final int sym_call_incoming=0x01080090;
        public static final int sym_call_missed=0x01080091;
        public static final int sym_call_outgoing=0x01080092;
        public static final int sym_contact_card=0x01080094;
        public static final int sym_def_app_icon=0x01080093;
        public static final int title_bar=0x01080095;
        /**   Drawable to use as a background for a taller version of the titlebar 
         */
        public static final int title_bar_tall=0x010800a6;
        public static final int toast_frame=0x01080096;
        public static final int zoom_plate=0x01080097;
    }
    public static final class id {
        /**  Menu ID to perform a "add to dictionary" operation. 
         */
        public static final int addToDictionary=0x0102002a;
        public static final int background=0x01020000;
        public static final int button1=0x01020019;
        public static final int button2=0x0102001a;
        public static final int button3=0x0102001b;
        /**  The part of the UI shown by an
       {@link android.inputmethodservice.InputMethodService} that contains the
       views for displaying candidates for what the user has entered. 
         */
        public static final int candidatesArea=0x0102001d;
        public static final int checkbox=0x01020001;
        /**  View ID of a {@link android.view.View} to close a popup keyboard 
         */
        public static final int closeButton=0x01020027;
        public static final int content=0x01020002;
        /**  Context menu ID for the "Copy" menu item to copy the currently
       selected (or all) text in a text view to the clipboard. 
         */
        public static final int copy=0x01020021;
        /**  Context menu ID for the "Copy URL" menu item to copy the currently
       selected URL from the text view to the clipboard. 
         */
        public static final int copyUrl=0x01020023;
        public static final int custom=0x0102002b;
        /**  Context menu ID for the "Cut" menu item to copy and delete the currently
       selected (or all) text in a text view to the clipboard. 
         */
        public static final int cut=0x01020020;
        public static final int edit=0x01020003;
        public static final int empty=0x01020004;
        /**  The part of the UI shown by an
       {@link android.inputmethodservice.InputMethodService} that contains the
       views for interacting with the user in extraction mode. 
         */
        public static final int extractArea=0x0102001c;
        public static final int hint=0x01020005;
        public static final int icon=0x01020006;
        public static final int icon1=0x01020007;
        public static final int icon2=0x01020008;
        public static final int input=0x01020009;
        /**  The part of the UI shown by an
       {@link android.inputmethodservice.InputMethodService} that contains the
       views for entering text using the screen. 
         */
        public static final int inputArea=0x0102001e;
        /**  View ID of the text editor inside of an extracted text layout. 
         */
        public static final int inputExtractEditText=0x01020025;
        /**  View ID of the {@link android.inputmethodservice.KeyboardView} within
        an input method's input area. 
         */
        public static final int keyboardView=0x01020026;
        public static final int list=0x0102000a;
        public static final int message=0x0102000b;
        /**  Context menu ID for the "Paste" menu item to copy the current contents
       of the clipboard into the text view. 
         */
        public static final int paste=0x01020022;
        public static final int primary=0x0102000c;
        public static final int progress=0x0102000d;
        public static final int secondaryProgress=0x0102000f;
        /**  Context menu ID for the "Select All" menu item to select all text
       in a text view. 
         */
        public static final int selectAll=0x0102001f;
        public static final int selectedIcon=0x0102000e;
        /**  Menu ID to perform a "start selecting text" operation. 
         */
        public static final int startSelectingText=0x01020028;
        /**  Menu ID to perform a "stop selecting text" operation. 
         */
        public static final int stopSelectingText=0x01020029;
        public static final int summary=0x01020010;
        /**  Context menu ID for the "Input Method" menu item to being up the
       input method picker dialog, allowing the user to switch to another
       input method. 
         */
        public static final int switchInputMethod=0x01020024;
        public static final int tabcontent=0x01020011;
        public static final int tabhost=0x01020012;
        public static final int tabs=0x01020013;
        public static final int text1=0x01020014;
        public static final int text2=0x01020015;
        public static final int title=0x01020016;
        public static final int toggle=0x01020017;
        public static final int widget_frame=0x01020018;
    }
    public static final class integer {
        /**  The duration (in milliseconds) of a long animation. 
         */
        public static final int config_longAnimTime=0x010e0002;
        /**  The duration (in milliseconds) of a medium-length animation. 
         */
        public static final int config_mediumAnimTime=0x010e0001;
        /**  The duration (in milliseconds) of a short animation. 
         */
        public static final int config_shortAnimTime=0x010e0000;
    }
    public static final class layout {
        public static final int activity_list_item=0x01090000;
        public static final int browser_link_context_header=0x0109000e;
        public static final int expandable_list_content=0x01090001;
        public static final int preference_category=0x01090002;
        public static final int select_dialog_item=0x01090011;
        public static final int select_dialog_multichoice=0x01090013;
        public static final int select_dialog_singlechoice=0x01090012;
        public static final int simple_dropdown_item_1line=0x0109000a;
        public static final int simple_expandable_list_item_1=0x01090006;
        public static final int simple_expandable_list_item_2=0x01090007;
        public static final int simple_gallery_item=0x0109000b;
        public static final int simple_list_item_1=0x01090003;
        public static final int simple_list_item_2=0x01090004;
        public static final int simple_list_item_checked=0x01090005;
        public static final int simple_list_item_multiple_choice=0x01090010;
        public static final int simple_list_item_single_choice=0x0109000f;
        public static final int simple_spinner_dropdown_item=0x01090009;
        public static final int simple_spinner_item=0x01090008;
        public static final int test_list_item=0x0109000c;
        public static final int two_line_list_item=0x0109000d;
    }
    public static final class plurals {
    }
    public static final class raw {
    }
    public static final class string {
        /**  Button to close error alert when a video cannot be played 
 Button to close error alert when a video cannot be played 
         */
        public static final int VideoView_error_button=0x01040010;
        /**  Text for error alert when a video container is not valid for progressive download/playback. 
 Text for error alert when a video container is not valid for progressive download/playback. 
         */
        public static final int VideoView_error_text_invalid_progressive_playback=0x01040015;
        /**  Text for error alert when a video cannot be played. it can be used by any app. 
 Text for error alert when a video cannot be played. it can be used by any app. 
         */
        public static final int VideoView_error_text_unknown=0x01040011;
        /**  Title for error alert when a video cannot be played.  it can be used by any app. 
 Title for error alert when a video cannot be played.  it can be used by any app. 
         */
        public static final int VideoView_error_title=0x01040012;
        /**  Preference framework strings. 
 Preference framework strings. 
         */
        public static final int cancel=0x01040000;
        /**  Item on EditText context menu. This action is used to cut selected the text into the clipboard. 
 Item on EditText context menu. This action is used to cut selected the text into the clipboard. 
         */
        public static final int copy=0x01040001;
        /**  Item on EditText context menu. This action is used to copy a URL from the edit field into the clipboard. 
 Item on EditText context menu. This action is used to copy a URL from the edit field into the clipboard. 
         */
        public static final int copyUrl=0x01040002;
        /**  Item on EditText context menu.  This action is used to cut selected the text into the clipboard.  
 Item on EditText context menu.  This action is used to cut selected the text into the clipboard.  
         */
        public static final int cut=0x01040003;
        /**  What the UI should display for "Msisdn" unless overridden by the SIM
 What the UI should display for "Msisdn" unless overridden by the SIM
         */
        public static final int defaultMsisdnAlphaTag=0x01040005;
        /**  What the UI should display for "voice mail" unless overridden by the SIM
 What the UI should display for "voice mail" unless overridden by the SIM
         */
        public static final int defaultVoiceMailAlphaTag=0x01040004;
        /**  This is the generic "attention" string to be used in attention dialogs.  Typically
         combined with setIcon(android.R.drawable.ic_dialog_alert) 
 This is the generic "attention" string to be used in attention dialogs.  Typically
         combined with setIcon(android.R.drawable.ic_dialog_alert) 
         */
        public static final int dialog_alert_title=0x01040014;
        /**  How to display the lack of a phone number 
 How to display the lack of a phone number 
         */
        public static final int emptyPhoneNumber=0x01040006;
        /**  Displayed when a web request failed because the URL isn't in a valid form. 
 Displayed when a web request failed because the URL isn't in a valid form. 
         */
        public static final int httpErrorBadUrl=0x01040007;
        /**  Displayed when a web request failed because the protocol of the server is not supported. 
 Displayed when a web request failed because the protocol of the server is not supported. 
         */
        public static final int httpErrorUnsupportedScheme=0x01040008;
        /**  Preference framework strings. 
 Preference framework strings. 
         */
        public static final int no=0x01040009;
        /**  Preference framework strings. 
 Preference framework strings. 
         */
        public static final int ok=0x0104000a;
        /**  Item on EditText context menu. This action is used t o paste from the clipboard into the eidt field 
 Item on EditText context menu. This action is used t o paste from the clipboard into the eidt field 
         */
        public static final int paste=0x0104000b;
        /**  This is the default button label in the system-wide search UI.
         It is also used by the home screen's search "widget". It should be short 
 This is the default button label in the system-wide search UI.
         It is also used by the home screen's search "widget". It should be short 
         */
        public static final int search_go=0x0104000c;
        /**  Item on EditText context menu. This action is used to select all text in the edit field. 
 Item on EditText context menu. This action is used to select all text in the edit field. 
         */
        public static final int selectAll=0x0104000d;
        /**  How to display the lack of a name 
 How to display the lack of a name 
         */
        public static final int unknownName=0x0104000e;
        /**  Used in Contacts for a field that has no label and in Note Pad
         for a note with no name. 
 Used in Contacts for a field that has no label and in Note Pad
         for a note with no name. 
         */
        public static final int untitled=0x0104000f;
        /**  Preference framework strings. 
 Preference framework strings. 
         */
        public static final int yes=0x01040013;
    }
    public static final class style {
        /**  Base style for animations.  This style specifies no animations. 
         */
        public static final int Animation=0x01030000;
        /**  Standard animations for a full-screen window or activity. 
         */
        public static final int Animation_Activity=0x01030001;
        /**  Standard animations for a non-full-screen window or activity. 
         */
        public static final int Animation_Dialog=0x01030002;
        /**  Window animations that are applied to input method overlay windows. 
         */
        public static final int Animation_InputMethod=0x01030056;
        public static final int Animation_Toast=0x01030004;
        /**  Standard animations for a translucent window or activity.  This
         style is <em>not<em> used by default for the translucent theme
         (since translucent activities are a special case that have no
         clear UI paradigm), but you can make your own specialized theme
         with this animation style if you would like to have the standard
         platform transition animation. 
         */
        public static final int Animation_Translucent=0x01030003;
        /**  Style you can use with a container (typically a horizontal
         LinearLayout) to get the standard "button bar" background and
         spacing. @hide 
         */
        public static final int ButtonBar=0x01030058;
        public static final int MediaButton=0x01030037;
        public static final int MediaButton_Ffwd=0x0103003b;
        public static final int MediaButton_Next=0x01030039;
        public static final int MediaButton_Pause=0x0103003d;
        public static final int MediaButton_Play=0x0103003a;
        public static final int MediaButton_Previous=0x01030038;
        public static final int MediaButton_Rew=0x0103003c;
        public static final int TextAppearance=0x0103003e;
        public static final int TextAppearance_DialogWindowTitle=0x01030041;
        public static final int TextAppearance_Inverse=0x0103003f;
        public static final int TextAppearance_Large=0x01030042;
        public static final int TextAppearance_Large_Inverse=0x01030043;
        public static final int TextAppearance_Medium=0x01030044;
        public static final int TextAppearance_Medium_Inverse=0x01030045;
        /**  @hide 
         */
        public static final int TextAppearance_SearchResult_Subtitle=0x01030064;
        /**  @hide 
         */
        public static final int TextAppearance_SearchResult_Title=0x01030063;
        public static final int TextAppearance_Small=0x01030046;
        public static final int TextAppearance_Small_Inverse=0x01030047;
        public static final int TextAppearance_StatusBar_EventContent=0x01030067;
        public static final int TextAppearance_StatusBar_EventContent_Title=0x01030068;
        public static final int TextAppearance_StatusBar_Icon=0x01030066;
        public static final int TextAppearance_StatusBar_Title=0x01030065;
        public static final int TextAppearance_Theme=0x01030040;
        public static final int TextAppearance_Theme_Dialog=0x01030048;
        public static final int TextAppearance_Widget=0x01030049;
        public static final int TextAppearance_Widget_Button=0x0103004a;
        public static final int TextAppearance_Widget_DropDownHint=0x01030050;
        public static final int TextAppearance_Widget_DropDownItem=0x01030051;
        public static final int TextAppearance_Widget_EditText=0x0103004c;
        public static final int TextAppearance_Widget_IconMenu_Item=0x0103004b;
        public static final int TextAppearance_Widget_TabWidget=0x0103004d;
        public static final int TextAppearance_Widget_TextView=0x0103004e;
        public static final int TextAppearance_Widget_TextView_PopupMenu=0x0103004f;
        public static final int TextAppearance_Widget_TextView_SpinnerItem=0x01030052;
        public static final int TextAppearance_WindowTitle=0x01030053;
        /**  The default system theme. This is the theme used for activities
         that have not explicitly set their own theme.
         
         <p>You can count on this being a dark
         background with light text on top, but should try to make no
         other assumptions about its appearance. In particular, the text
         inside of widgets using this theme may be completely different,
         with the widget container being a light color and the text on top
         of it a dark color.
    
         */
        public static final int Theme=0x01030005;
        /**  Special variation on the default theme that ensures the background is
         completely black.  This is useful for things like image viewers and
         media players.   If you want the normal (dark background) theme
         do <em>not</em> use this, use {@link #Theme}. 
         */
        public static final int Theme_Black=0x01030008;
        /**  Variant of the black theme with no title bar 
         */
        public static final int Theme_Black_NoTitleBar=0x01030009;
        /**  Variant of the black theme that has no title bar and
         fills the entire screen 
         */
        public static final int Theme_Black_NoTitleBar_Fullscreen=0x0103000a;
        /**  Default theme for dialog windows and activities, which is used by the
         {@link android.app.Dialog} class.  This changes the window to be
         floating (not fill the entire screen), and puts a frame around its
         contents.  You can set this theme on an activity if you would like to
         make an activity that looks like a Dialog. 
         */
        public static final int Theme_Dialog=0x0103000b;
        /**  Default theme for input methods, which is used by the
         {@link android.inputmethodservice.InputMethodService} class.
         this inherits from Theme.NoTitleBar, but makes the background
         transparent, the window floating and translucent, and ensures that
         it does not dim the UI behind it.  This also configures the window
         with the standard IME animations and visuals. 
         */
        public static final int Theme_InputMethod=0x01030054;
        /**  Theme for a light background with dark text on top.  Set your activity
         to this theme if you would like such an appearance.  As with the
         default theme, you should try to assume little more than that the
         background will be a light color. 
         */
        public static final int Theme_Light=0x0103000c;
        /**  Variant of the light theme with no title bar 
         */
        public static final int Theme_Light_NoTitleBar=0x0103000d;
        /**  Variant of the light theme that has no title bar and
         fills the entire screen 
         */
        public static final int Theme_Light_NoTitleBar_Fullscreen=0x0103000e;
        /**  Default light theme for panel windows.  This removes all extraneous
         window decorations, so you basically have an empty rectangle in which
         to place your content.  It makes the window floating, with a transparent
         background, and turns off dimming behind the window. 
         */
        public static final int Theme_Light_Panel=0x0103005a;
        /**  Theme for a wallpaper's setting activity that is designed to be on
         top of a light background. 
         */
        public static final int Theme_Light_WallpaperSettings=0x01030062;
        /**  Default theme for activities that don't actually display a UI; that
         is, they finish themselves before being resumed.  
         */
        public static final int Theme_NoDisplay=0x01030055;
        /**  Variant of the default (dark) theme with no title bar 
         */
        public static final int Theme_NoTitleBar=0x01030006;
        /**  Variant of the default (dark) theme that has no title bar and
         fills the entire screen 
         */
        public static final int Theme_NoTitleBar_Fullscreen=0x01030007;
        /**  Default dark theme for panel windows.  This removes all extraneous
         window decorations, so you basically have an empty rectangle in which
         to place your content.  It makes the window floating, with a transparent
         background, and turns off dimming behind the window. 
         */
        public static final int Theme_Panel=0x01030059;
        /**  Default theme for translucent activities, that is windows that allow you
         to see through them to the windows behind.  This sets up the translucent
         flag and appropriate animations for your windows.  
         */
        public static final int Theme_Translucent=0x0103000f;
        /**  Variant of the translucent theme with no title bar 
         */
        public static final int Theme_Translucent_NoTitleBar=0x01030010;
        /**  Variant of the translucent theme that has no title bar and
         fills the entire screen 
         */
        public static final int Theme_Translucent_NoTitleBar_Fullscreen=0x01030011;
        /**  Default theme for windows that want to have the user's selected
    	 wallpaper appear behind them.  
         */
        public static final int Theme_Wallpaper=0x0103005e;
        /**  Variant of the translucent theme with no title bar 
         */
        public static final int Theme_Wallpaper_NoTitleBar=0x0103005f;
        /**  Variant of the translucent theme that has no title bar and
         fills the entire screen 
         */
        public static final int Theme_Wallpaper_NoTitleBar_Fullscreen=0x01030060;
        /**  Theme for a wallpaper's setting activity that is designed to be on
         top of a dark background. 
         */
        public static final int Theme_WallpaperSettings=0x01030061;
        /**  Widget Styles 
         */
        public static final int Widget=0x01030012;
        public static final int Widget_AbsListView=0x01030013;
        public static final int Widget_AutoCompleteTextView=0x01030027;
        public static final int Widget_Button=0x01030014;
        public static final int Widget_Button_Inset=0x01030015;
        public static final int Widget_Button_Small=0x01030016;
        public static final int Widget_Button_Toggle=0x01030017;
        public static final int Widget_CompoundButton=0x01030018;
        public static final int Widget_CompoundButton_CheckBox=0x01030019;
        public static final int Widget_CompoundButton_RadioButton=0x0103001a;
        public static final int Widget_CompoundButton_Star=0x0103001b;
        public static final int Widget_DropDownItem=0x0103002b;
        public static final int Widget_DropDownItem_Spinner=0x0103002c;
        public static final int Widget_EditText=0x01030023;
        public static final int Widget_ExpandableListView=0x01030024;
        public static final int Widget_Gallery=0x01030035;
        public static final int Widget_GridView=0x01030032;
        public static final int Widget_ImageButton=0x01030026;
        public static final int Widget_ImageWell=0x01030025;
        public static final int Widget_KeyboardView=0x01030057;
        public static final int Widget_ListView=0x0103002e;
        public static final int Widget_ListView_DropDown=0x01030030;
        public static final int Widget_ListView_Menu=0x01030031;
        public static final int Widget_ListView_White=0x0103002f;
        public static final int Widget_PopupWindow=0x01030036;
        public static final int Widget_ProgressBar=0x0103001c;
        public static final int Widget_ProgressBar_Horizontal=0x0103001f;
        public static final int Widget_ProgressBar_Inverse=0x0103005b;
        public static final int Widget_ProgressBar_Large=0x0103001d;
        public static final int Widget_ProgressBar_Large_Inverse=0x0103005c;
        public static final int Widget_ProgressBar_Small=0x0103001e;
        public static final int Widget_ProgressBar_Small_Inverse=0x0103005d;
        public static final int Widget_RatingBar=0x01030021;
        public static final int Widget_ScrollView=0x0103002d;
        public static final int Widget_SeekBar=0x01030020;
        public static final int Widget_Spinner=0x01030028;
        public static final int Widget_TabWidget=0x01030034;
        public static final int Widget_TextView=0x01030022;
        public static final int Widget_TextView_PopupMenu=0x01030029;
        public static final int Widget_TextView_SpinnerItem=0x0103002a;
        public static final int Widget_WebView=0x01030033;
    }
    public static final class xml {
    }
    /** @doconly */
    public static final class styleable {
        /** Attributes that can be used with a AbsListView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AbsListView_cacheColorHint android:cacheColorHint}</code></td><td> Indicates that this list will always be drawn on top of solid, single-color
             opaque background.</td></tr>
           <tr><td><code>{@link #AbsListView_drawSelectorOnTop android:drawSelectorOnTop}</code></td><td> When set to true, the selector will be drawn over the selected item.</td></tr>
           <tr><td><code>{@link #AbsListView_fastScrollEnabled android:fastScrollEnabled}</code></td><td> Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.</td></tr>
           <tr><td><code>{@link #AbsListView_listSelector android:listSelector}</code></td><td> Drawable used to indicate the currently selected item in the list.</td></tr>
           <tr><td><code>{@link #AbsListView_scrollingCache android:scrollingCache}</code></td><td> When set to true, the list uses a drawing cache during scrolling.</td></tr>
           <tr><td><code>{@link #AbsListView_smoothScrollbar android:smoothScrollbar}</code></td><td> When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen.</td></tr>
           <tr><td><code>{@link #AbsListView_stackFromBottom android:stackFromBottom}</code></td><td> Used by ListView and GridView to stack their content from the bottom.</td></tr>
           <tr><td><code>{@link #AbsListView_textFilterEnabled android:textFilterEnabled}</code></td><td> When set to true, the list will filter results as the user types.</td></tr>
           <tr><td><code>{@link #AbsListView_transcriptMode android:transcriptMode}</code></td><td> Sets the transcript mode for the list.</td></tr>
           </table>
           @see #AbsListView_cacheColorHint
           @see #AbsListView_drawSelectorOnTop
           @see #AbsListView_fastScrollEnabled
           @see #AbsListView_listSelector
           @see #AbsListView_scrollingCache
           @see #AbsListView_smoothScrollbar
           @see #AbsListView_stackFromBottom
           @see #AbsListView_textFilterEnabled
           @see #AbsListView_transcriptMode
         */
        public static final int[] AbsListView = {
            0x010100fb, 0x010100fc, 0x010100fd, 0x010100fe,
            0x010100ff, 0x01010100, 0x01010101, 0x01010226,
            0x01010231
        };
        /**
          <p>
          @attr description
           Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#cacheColorHint}.
          @attr name android:cacheColorHint
        */
        public static final int AbsListView_cacheColorHint = 6;
        /**
          <p>
          @attr description
           When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#drawSelectorOnTop}.
          @attr name android:drawSelectorOnTop
        */
        public static final int AbsListView_drawSelectorOnTop = 1;
        /**
          <p>
          @attr description
           Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#fastScrollEnabled}.
          @attr name android:fastScrollEnabled
        */
        public static final int AbsListView_fastScrollEnabled = 7;
        /**
          <p>
          @attr description
           Drawable used to indicate the currently selected item in the list. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#listSelector}.
          @attr name android:listSelector
        */
        public static final int AbsListView_listSelector = 0;
        /**
          <p>
          @attr description
           When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollingCache}.
          @attr name android:scrollingCache
        */
        public static final int AbsListView_scrollingCache = 3;
        /**
          <p>
          @attr description
           When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#smoothScrollbar}.
          @attr name android:smoothScrollbar
        */
        public static final int AbsListView_smoothScrollbar = 8;
        /**
          <p>
          @attr description
           Used by ListView and GridView to stack their content from the bottom. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#stackFromBottom}.
          @attr name android:stackFromBottom
        */
        public static final int AbsListView_stackFromBottom = 2;
        /**
          <p>
          @attr description
           When set to true, the list will filter results as the user types. The
             List's adapter must support the Filterable interface for this to work. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textFilterEnabled}.
          @attr name android:textFilterEnabled
        */
        public static final int AbsListView_textFilterEnabled = 4;
        /**
          <p>
          @attr description
           Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0</td><td> Disables transcript mode. This is the default value. </td></tr>
<tr><td><code>normal</code></td><td>1</td><td> The list will automatically scroll to the bottom when
                 a data set change notification is received and only if the last item is
                 already visible on screen. </td></tr>
<tr><td><code>alwaysScroll</code></td><td>2</td><td> The list will automatically scroll to the bottom, no matter what items
                 are currently visible. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#transcriptMode}.
          @attr name android:transcriptMode
        */
        public static final int AbsListView_transcriptMode = 5;
        /** Attributes that can be used with a AbsSpinner.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AbsSpinner_entries android:entries}</code></td><td> Reference to an array resource that will populate the Spinner.</td></tr>
           </table>
           @see #AbsSpinner_entries
         */
        public static final int[] AbsSpinner = {
            0x010100b2
        };
        /**
          <p>
          @attr description
           Reference to an array resource that will populate the Spinner.  For static content,
             this is simpler than populating the Spinner programmatically. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#entries}.
          @attr name android:entries
        */
        public static final int AbsSpinner_entries = 0;
        /** Attributes that can be used with a AbsoluteLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AbsoluteLayout_Layout_layout_x android:layout_x}</code></td><td></td></tr>
           <tr><td><code>{@link #AbsoluteLayout_Layout_layout_y android:layout_y}</code></td><td></td></tr>
           </table>
           @see #AbsoluteLayout_Layout_layout_x
           @see #AbsoluteLayout_Layout_layout_y
         */
        public static final int[] AbsoluteLayout_Layout = {
            0x0101017f, 0x01010180
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_x}
          attribute's value can be found in the {@link #AbsoluteLayout_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:layout_x
        */
        public static final int AbsoluteLayout_Layout_layout_x = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_y}
          attribute's value can be found in the {@link #AbsoluteLayout_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:layout_y
        */
        public static final int AbsoluteLayout_Layout_layout_y = 1;
        /** Attributes that can be used with a AccelerateInterpolator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AccelerateInterpolator_factor android:factor}</code></td><td> This is the amount of deceleration to add when easing in.</td></tr>
           </table>
           @see #AccelerateInterpolator_factor
         */
        public static final int[] AccelerateInterpolator = {
            0x010101d3
        };
        /**
          <p>
          @attr description
           This is the amount of deceleration to add when easing in. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#factor}.
          @attr name android:factor
        */
        public static final int AccelerateInterpolator_factor = 0;
        /**  Use <code>account-authenticator</code> as the root tag of the XML resource that
         describes an account authenticator.
     
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AccountAuthenticator_accountPreferences android:accountPreferences}</code></td><td> A preferences.</td></tr>
           <tr><td><code>{@link #AccountAuthenticator_accountType android:accountType}</code></td><td> The account type this authenticator handles.</td></tr>
           <tr><td><code>{@link #AccountAuthenticator_icon android:icon}</code></td><td> The icon of the authenticator.</td></tr>
           <tr><td><code>{@link #AccountAuthenticator_label android:label}</code></td><td> The user-visible name of the authenticator.</td></tr>
           <tr><td><code>{@link #AccountAuthenticator_smallIcon android:smallIcon}</code></td><td> Smaller icon of the authenticator.</td></tr>
           </table>
           @see #AccountAuthenticator_accountPreferences
           @see #AccountAuthenticator_accountType
           @see #AccountAuthenticator_icon
           @see #AccountAuthenticator_label
           @see #AccountAuthenticator_smallIcon
         */
        public static final int[] AccountAuthenticator = {
            0x01010001, 0x01010002, 0x0101028f, 0x0101029e,
            0x0101029f
        };
        /**
          <p>
          @attr description
           A preferences.xml file for authenticator-specific settings. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#accountPreferences}.
          @attr name android:accountPreferences
        */
        public static final int AccountAuthenticator_accountPreferences = 4;
        /**
          <p>
          @attr description
           The account type this authenticator handles. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#accountType}.
          @attr name android:accountType
        */
        public static final int AccountAuthenticator_accountType = 2;
        /**
          <p>
          @attr description
           The icon of the authenticator. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int AccountAuthenticator_icon = 1;
        /**
          <p>
          @attr description
           The user-visible name of the authenticator. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#label}.
          @attr name android:label
        */
        public static final int AccountAuthenticator_label = 0;
        /**
          <p>
          @attr description
           Smaller icon of the authenticator. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#smallIcon}.
          @attr name android:smallIcon
        */
        public static final int AccountAuthenticator_smallIcon = 3;
        /**  The set of attributes that describe a AlertDialog's theme. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AlertDialog_bottomBright android:bottomBright}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_bottomDark android:bottomDark}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_bottomMedium android:bottomMedium}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_centerBright android:centerBright}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_centerDark android:centerDark}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_centerMedium android:centerMedium}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_fullBright android:fullBright}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_fullDark android:fullDark}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_topBright android:topBright}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_topDark android:topDark}</code></td><td></td></tr>
           </table>
           @see #AlertDialog_bottomBright
           @see #AlertDialog_bottomDark
           @see #AlertDialog_bottomMedium
           @see #AlertDialog_centerBright
           @see #AlertDialog_centerDark
           @see #AlertDialog_centerMedium
           @see #AlertDialog_fullBright
           @see #AlertDialog_fullDark
           @see #AlertDialog_topBright
           @see #AlertDialog_topDark
         */
        public static final int[] AlertDialog = {
            0x010100c6, 0x010100c7, 0x010100c8, 0x010100c9,
            0x010100ca, 0x010100cb, 0x010100cc, 0x010100cd,
            0x010100ce, 0x010100cf
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#bottomBright}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name android:bottomBright
        */
        public static final int AlertDialog_bottomBright = 7;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#bottomDark}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name android:bottomDark
        */
        public static final int AlertDialog_bottomDark = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#bottomMedium}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name android:bottomMedium
        */
        public static final int AlertDialog_bottomMedium = 8;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#centerBright}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name android:centerBright
        */
        public static final int AlertDialog_centerBright = 6;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#centerDark}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name android:centerDark
        */
        public static final int AlertDialog_centerDark = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#centerMedium}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name android:centerMedium
        */
        public static final int AlertDialog_centerMedium = 9;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#fullBright}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name android:fullBright
        */
        public static final int AlertDialog_fullBright = 4;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#fullDark}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name android:fullDark
        */
        public static final int AlertDialog_fullDark = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#topBright}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name android:topBright
        */
        public static final int AlertDialog_topBright = 5;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#topDark}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name android:topDark
        */
        public static final int AlertDialog_topDark = 1;
        /** Attributes that can be used with a AlphaAnimation.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AlphaAnimation_fromAlpha android:fromAlpha}</code></td><td></td></tr>
           <tr><td><code>{@link #AlphaAnimation_toAlpha android:toAlpha}</code></td><td></td></tr>
           </table>
           @see #AlphaAnimation_fromAlpha
           @see #AlphaAnimation_toAlpha
         */
        public static final int[] AlphaAnimation = {
            0x010101ca, 0x010101cb
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#fromAlpha}
          attribute's value can be found in the {@link #AlphaAnimation} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:fromAlpha
        */
        public static final int AlphaAnimation_fromAlpha = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#toAlpha}
          attribute's value can be found in the {@link #AlphaAnimation} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:toAlpha
        */
        public static final int AlphaAnimation_toAlpha = 1;
        /** Attributes that can be used with a AnalogClock.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnalogClock_dial android:dial}</code></td><td></td></tr>
           <tr><td><code>{@link #AnalogClock_hand_hour android:hand_hour}</code></td><td></td></tr>
           <tr><td><code>{@link #AnalogClock_hand_minute android:hand_minute}</code></td><td></td></tr>
           </table>
           @see #AnalogClock_dial
           @see #AnalogClock_hand_hour
           @see #AnalogClock_hand_minute
         */
        public static final int[] AnalogClock = {
            0x01010102, 0x01010103, 0x01010104
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#dial}
          attribute's value can be found in the {@link #AnalogClock} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:dial
        */
        public static final int AnalogClock_dial = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#hand_hour}
          attribute's value can be found in the {@link #AnalogClock} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:hand_hour
        */
        public static final int AnalogClock_hand_hour = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#hand_minute}
          attribute's value can be found in the {@link #AnalogClock} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:hand_minute
        */
        public static final int AnalogClock_hand_minute = 2;
        /**  The <code>manifest</code> tag is the root of an
         <code>AndroidManifest.xml</code> file,
         describing the contents of an Android package (.apk) file.  One
         attribute must always be supplied: <code>package</code> gives a
         unique name for the package, using a Java-style naming convention
         to avoid name collisions.  For example, applications published
         by Google could have names of the form
         <code>com.google.app.<em>appname</em></code>
         
         <p>Inside of the manifest tag, may appear the following tags
         in any order: {@link #AndroidManifestPermission permission},
         {@link #AndroidManifestPermissionGroup permission-group},
         {@link #AndroidManifestPermissionTree permission-tree},
         {@link #AndroidManifestUsesSdk uses-sdk},
         {@link #AndroidManifestUsesPermission uses-permission},
         {@link #AndroidManifestUsesConfiguration uses-configuration},
         {@link #AndroidManifestApplication application},
         {@link #AndroidManifestInstrumentation instrumentation},
         {@link #AndroidManifestUsesFeature uses-feature}.  
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifest_installLocation android:installLocation}</code></td><td> The default install location defined by an application.</td></tr>
           <tr><td><code>{@link #AndroidManifest_sharedUserId android:sharedUserId}</code></td><td> Specify the name of a user ID that will be shared between multiple
         packages.</td></tr>
           <tr><td><code>{@link #AndroidManifest_sharedUserLabel android:sharedUserLabel}</code></td><td> Specify a label for the shared user UID of this package.</td></tr>
           <tr><td><code>{@link #AndroidManifest_versionCode android:versionCode}</code></td><td> Internal version code.</td></tr>
           <tr><td><code>{@link #AndroidManifest_versionName android:versionName}</code></td><td> The text shown to the user to indicate the version they have.</td></tr>
           </table>
           @see #AndroidManifest_installLocation
           @see #AndroidManifest_sharedUserId
           @see #AndroidManifest_sharedUserLabel
           @see #AndroidManifest_versionCode
           @see #AndroidManifest_versionName
         */
        public static final int[] AndroidManifest = {
            0x0101000b, 0x0101021b, 0x0101021c, 0x01010261,
            0x010102b7
        };
        /**
          <p>
          @attr description
           The default install location defined by an application. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td> Let the system decide ideal install location </td></tr>
<tr><td><code>internalOnly</code></td><td>1</td><td> Explicitly request to be installed on internal phone storage
             only. </td></tr>
<tr><td><code>preferExternal</code></td><td>2</td><td> Prefer to be installed on SD card. There is no guarantee that
             the system will honor this request. The application might end
             up being installed on internal storage if external media
             is unavailable or too full. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#installLocation}.
          @attr name android:installLocation
        */
        public static final int AndroidManifest_installLocation = 4;
        /**
          <p>
          @attr description
           Specify the name of a user ID that will be shared between multiple
         packages.  By default, each package gets its own unique user-id.
         By setting this value on two or more packages, each of these packages
         will be given a single shared user ID, so they can for example run
         in the same process.  Note that for them to actually get the same
         user ID, they must also be signed with the same signature. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#sharedUserId}.
          @attr name android:sharedUserId
        */
        public static final int AndroidManifest_sharedUserId = 0;
        /**
          <p>
          @attr description
           Specify a label for the shared user UID of this package.  This is
         only used if you have also used android:sharedUserId.  This must
         be a reference to a string resource; it can not be an explicit
         string. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#sharedUserLabel}.
          @attr name android:sharedUserLabel
        */
        public static final int AndroidManifest_sharedUserLabel = 3;
        /**
          <p>
          @attr description
           Internal version code.  This is the number used to determine whether
         one version is more recent than another: it has no other meaning than
         that higher numbers are more recent.  You could use this number to
         encode a "x.y" in the lower and upper 16 bits, make it a build
         number, simply increase it by one each time a new version is
         released, or define it however else you want, as long as each
         successive version has a higher number.  This is not a version
         number generally shown to the user, that is usually supplied 
         with {@link android.R.attr#versionName}. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#versionCode}.
          @attr name android:versionCode
        */
        public static final int AndroidManifest_versionCode = 1;
        /**
          <p>
          @attr description
           The text shown to the user to indicate the version they have.  This
         is used for no other purpose than display to the user; the actual
         significant version number is given by {@link android.R.attr#versionCode}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#versionName}.
          @attr name android:versionName
        */
        public static final int AndroidManifest_versionName = 2;
        /**  Attributes that can be supplied in an AndroidManifest.xml
         <code>action</code> tag, a child of the
         {@link #AndroidManifestIntentFilter intent-filter} tag.
         See {@link android.content.IntentFilter#addAction} for
         more information. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestAction_name android:name}</code></td><td> The name of an action that is handled, using the Java-style
             naming convention.</td></tr>
           </table>
           @see #AndroidManifestAction_name
         */
        public static final int[] AndroidManifestAction = {
            0x01010003
        };
        /**
          <p>
          @attr description
           The name of an action that is handled, using the Java-style
             naming convention.  For example, to support
             {@link android.content.Intent#ACTION_VIEW Intent.ACTION_VIEW}
             you would put <code>android.intent.action.VIEW</code> here.
             Custom actions should generally use a prefix matching the
             package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestAction_name = 0;
        /**  The <code>activity</code> tag declares an
         {@link android.app.Activity} class that is available
         as part of the package's application components, implementing
         a part of the application's user interface.
         
         <p>Zero or more {@link #AndroidManifestIntentFilter intent-filter}
         tags can be included inside of an activity, to specify the Intents
         that it can handle.  If none are specified, the activity can
         only be started through direct specification of its class name.
         The activity tag appears as a child tag of the
         {@link #AndroidManifestApplication application} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestActivity_allowTaskReparenting android:allowTaskReparenting}</code></td><td> Specify that an activity can be moved out of a task it is in to
         the task it has an affinity for when appropriate.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_alwaysRetainTaskState android:alwaysRetainTaskState}</code></td><td> Specify whether an acitivty's task state should always be maintained
         by the system, or if it is allowed to reset the task to its initial
         state in certain situations.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_clearTaskOnLaunch android:clearTaskOnLaunch}</code></td><td> Specify whether an activity's task should be cleared when it
         is re-launched from the home screen.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_configChanges android:configChanges}</code></td><td> Specify one or more configuration changes that the activity will
         handle itself.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_description android:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_enabled android:enabled}</code></td><td> Specify whether the activity is enabled or not (that is, can be instantiated by the system).</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_excludeFromRecents android:excludeFromRecents}</code></td><td> Indicates that an Activity should be excluded from the list of
         recently launched activities.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_exported android:exported}</code></td><td> Flag indicating whether the given application component is available
         to other applications.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_finishOnCloseSystemDialogs android:finishOnCloseSystemDialogs}</code></td><td> Specify whether an activity should be finished when a "close system
         windows" request has been made.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_finishOnTaskLaunch android:finishOnTaskLaunch}</code></td><td> Specify whether an activity should be finished when its task is
         brought to the foreground by relaunching from the home screen.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_icon android:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_label android:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_launchMode android:launchMode}</code></td><td> Specify how an activity should be launched.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_multiprocess android:multiprocess}</code></td><td> Specify whether a component is allowed to have multiple instances
         of itself running in different processes.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_name android:name}</code></td><td> Required name of the class implementing the activity, deriving from
            {@link android.app.Activity}.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_noHistory android:noHistory}</code></td><td> Specify whether an activity should be kept in its history stack.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_permission android:permission}</code></td><td> Specify a permission that a client is required to have in order to
    	 use the associated object.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_process android:process}</code></td><td> Specify a specific process that the associated code is to run in.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_screenOrientation android:screenOrientation}</code></td><td> Specify the orientation an activity should be run in.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_stateNotNeeded android:stateNotNeeded}</code></td><td> Indicates that an Activity does not need to have its freeze state
         (as returned by {@link android.app.Activity#onSaveInstanceState}
         retained in order to be restarted.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_taskAffinity android:taskAffinity}</code></td><td> Specify a task name that activities have an "affinity" to.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_theme android:theme}</code></td><td> The overall theme to use for an activity.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_windowSoftInputMode android:windowSoftInputMode}</code></td><td> Specify the default soft-input mode for the main window of
             this activity.</td></tr>
           </table>
           @see #AndroidManifestActivity_allowTaskReparenting
           @see #AndroidManifestActivity_alwaysRetainTaskState
           @see #AndroidManifestActivity_clearTaskOnLaunch
           @see #AndroidManifestActivity_configChanges
           @see #AndroidManifestActivity_description
           @see #AndroidManifestActivity_enabled
           @see #AndroidManifestActivity_excludeFromRecents
           @see #AndroidManifestActivity_exported
           @see #AndroidManifestActivity_finishOnCloseSystemDialogs
           @see #AndroidManifestActivity_finishOnTaskLaunch
           @see #AndroidManifestActivity_icon
           @see #AndroidManifestActivity_label
           @see #AndroidManifestActivity_launchMode
           @see #AndroidManifestActivity_multiprocess
           @see #AndroidManifestActivity_name
           @see #AndroidManifestActivity_noHistory
           @see #AndroidManifestActivity_permission
           @see #AndroidManifestActivity_process
           @see #AndroidManifestActivity_screenOrientation
           @see #AndroidManifestActivity_stateNotNeeded
           @see #AndroidManifestActivity_taskAffinity
           @see #AndroidManifestActivity_theme
           @see #AndroidManifestActivity_windowSoftInputMode
         */
        public static final int[] AndroidManifestActivity = {
            0x01010000, 0x01010001, 0x01010002, 0x01010003,
            0x01010006, 0x0101000e, 0x01010010, 0x01010011,
            0x01010012, 0x01010013, 0x01010014, 0x01010015,
            0x01010016, 0x01010017, 0x0101001d, 0x0101001e,
            0x0101001f, 0x01010020, 0x01010203, 0x01010204,
            0x0101022b, 0x0101022d, 0x010102a7
        };
        /**
          <p>
          @attr description
           Specify that an activity can be moved out of a task it is in to
         the task it has an affinity for when appropriate.  Use with the
         application tag (to supply a default for all activities in the
         application), or with an activity tag (to supply a specific
         setting for that component).
    
         <p>Normally when an application is started, it is associated with
         the task of the activity that started it and stays there for its
         entire lifetime.  You can use the allowTaskReparenting feature to force an
         activity to be re-parented to a different task when the task it is
         in goes to the background.  Typically this is used to cause the
         activities of an application to move back to the main task associated
         with that application.  The activity is re-parented to the task
         with the same {@link android.R.attr#taskAffinity} as it has. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#allowTaskReparenting}.
          @attr name android:allowTaskReparenting
        */
        public static final int AndroidManifestActivity_allowTaskReparenting = 19;
        /**
          <p>
          @attr description
           Specify whether an acitivty's task state should always be maintained
         by the system, or if it is allowed to reset the task to its initial
         state in certain situations.
         
         <p>Normally the system will reset a task (remove all activities from
         the stack and reset the root activity) in certain situations when
         the user re-selects that task from the home screen.  Typically this
         will be done if the user hasn't visited that task for a certain
         amount of time, such as 30 minutes.
         
         <p>By setting this attribute, the user will always return to your
         task in its last state, regardless of how they get there.  This is
         useful, for example, in an application like the web browser where there
         is a lot of state (such as multiple open tabs) that the application
         would not like to lose. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#alwaysRetainTaskState}.
          @attr name android:alwaysRetainTaskState
        */
        public static final int AndroidManifestActivity_alwaysRetainTaskState = 18;
        /**
          <p>
          @attr description
           Specify whether an activity's task should be cleared when it
         is re-launched from the home screen.  As a result, every time the
         user starts the task, they will be brought to its root activity,
         regardless of whether they used BACK or HOME to last leave it.
         This flag only applies to activities that
         are used to start the root of a new task.
         
         <p>An example of the use of this flag would be for the case where
         a user launches activity A from home, and from there goes to
         activity B.  They now press home, and then return to activity A.
         Normally they would see activity B, since that is what they were
         last doing in A's task.  However, if A has set this flag to true,
         then upon going to the background all of the tasks on top of it (B
         in this case) are removed, so when the user next returns to A they
         will restart at its original activity.
         
         <p>When this option is used in conjunction with
         {@link android.R.attr#allowTaskReparenting}, the allowTaskReparenting trumps the
         clear.  That is, all activities above the root activity of the
         task will be removed: those that have an affinity will be moved
         to the task they are associated with, otherwise they will simply
         be dropped as described here. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#clearTaskOnLaunch}.
          @attr name android:clearTaskOnLaunch
        */
        public static final int AndroidManifestActivity_clearTaskOnLaunch = 11;
        /**
          <p>
          @attr description
           Specify one or more configuration changes that the activity will
         handle itself.  If not specified, the activity will be restarted
         if any of these configuration changes happen in the system.  Otherwise,
         the activity will remain running and its
         {@link android.app.Activity#onConfigurationChanged Activity.onConfigurationChanged}
         method called with the new configuration.
         
         <p>Note that all of these configuration changes can impact the
         resource values seen by the application, so you will generally need
         to re-retrieve all resources (including view layouts, drawables, etc)
         to correctly handle any configuration change.
         
         <p>These values must be kept in sync with those in
         {@link android.content.pm.ActivityInfo} and
         include/utils/ResourceTypes.h. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>mcc</code></td><td>0x0001</td><td> The IMSI MCC has changed, that is a SIM has been detected and
             updated the Mobile Country Code. </td></tr>
<tr><td><code>mnc</code></td><td>0x0002</td><td> The IMSI MNC has changed, that is a SIM has been detected and
             updated the Mobile Network Code. </td></tr>
<tr><td><code>locale</code></td><td>0x0004</td><td> The locale has changed, that is the user has selected a new
             language that text should be displayed in. </td></tr>
<tr><td><code>touchscreen</code></td><td>0x0008</td><td> The touchscreen has changed.  Should never normally happen. </td></tr>
<tr><td><code>keyboard</code></td><td>0x0010</td><td> The keyboard type has changed, for example the user has plugged
             in an external keyboard. </td></tr>
<tr><td><code>keyboardHidden</code></td><td>0x0020</td><td> The keyboard or navigation accessibility has changed, for example
             the user has slid the keyboard out to expose it.  Note that
             despite its name, this applied to any accessibility: keyboard
             or navigation. </td></tr>
<tr><td><code>navigation</code></td><td>0x0040</td><td> The navigation type has changed.  Should never normally happen. </td></tr>
<tr><td><code>orientation</code></td><td>0x0080</td><td> The screen orientation has changed, that is the user has
             rotated the device. </td></tr>
<tr><td><code>screenLayout</code></td><td>0x0100</td><td> The screen layout has changed.  This might be caused by a
             different display being activated. </td></tr>
<tr><td><code>uiMode</code></td><td>0x0200</td><td> The global user interface mode has changed.  For example,
             going in or out of car mode, night mode changing, etc. </td></tr>
<tr><td><code>fontScale</code></td><td>0x40000000</td><td> The font scaling factor has changed, that is the user has
             selected a new global font size. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#configChanges}.
          @attr name android:configChanges
        */
        public static final int AndroidManifestActivity_configChanges = 16;
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#description}.
          @attr name android:description
        */
        public static final int AndroidManifestActivity_description = 17;
        /**
          <p>
          @attr description
           Specify whether the activity is enabled or not (that is, can be instantiated by the system).
             It can also be specified for an application as a whole, in which case a value of "false"
             will override any component specific values (a value of "true" will not override the
             component specific values). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#enabled}.
          @attr name android:enabled
        */
        public static final int AndroidManifestActivity_enabled = 5;
        /**
          <p>
          @attr description
           Indicates that an Activity should be excluded from the list of
         recently launched activities. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#excludeFromRecents}.
          @attr name android:excludeFromRecents
        */
        public static final int AndroidManifestActivity_excludeFromRecents = 13;
        /**
          <p>
          @attr description
           Flag indicating whether the given application component is available
         to other applications.  If false, it can only be accessed by
         applications with its same user id (which usually means only by
         code in its own package).  If true, it can be invoked by external
         entities, though which ones can do so may be controlled through
         permissions.  The default value is false for activity, receiver,
         and service components that do not specify any intent filters; it
         is true for activity, receiver, and service components that do
         have intent filters (implying they expect to be invoked by others
         who do not know their particular component name) and for all
         content providers. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#exported}.
          @attr name android:exported
        */
        public static final int AndroidManifestActivity_exported = 6;
        /**
          <p>
          @attr description
           Specify whether an activity should be finished when a "close system
         windows" request has been made.  This happens, for example, when
         the home key is pressed, when the device is locked, when a system
         dialog showing recent applications is displayed, etc. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#finishOnCloseSystemDialogs}.
          @attr name android:finishOnCloseSystemDialogs
        */
        public static final int AndroidManifestActivity_finishOnCloseSystemDialogs = 22;
        /**
          <p>
          @attr description
           Specify whether an activity should be finished when its task is
         brought to the foreground by relaunching from the home screen.
         
         <p>If both this option and {@link android.R.attr#allowTaskReparenting} are
         specified, the finish trumps the affinity: the affinity will be
         ignored and the activity simply finished. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#finishOnTaskLaunch}.
          @attr name android:finishOnTaskLaunch
        */
        public static final int AndroidManifestActivity_finishOnTaskLaunch = 10;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int AndroidManifestActivity_icon = 2;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#label}.
          @attr name android:label
        */
        public static final int AndroidManifestActivity_label = 1;
        /**
          <p>
          @attr description
           Specify how an activity should be launched.  See the
         <a href="{@docRoot}guide/topics/fundamentals.html#acttask">Application Fundamentals</a>
         documentation for important information on how these options impact
         the behavior of your application.
         
         <p>If this attribute is not specified, <code>standard</code> launch
         mode will be used.  Note that the particular launch behavior can
         be changed in some ways at runtime through the
         {@link android.content.Intent} flags
         {@link android.content.Intent#FLAG_ACTIVITY_SINGLE_TOP},
         {@link android.content.Intent#FLAG_ACTIVITY_NEW_TASK}, and
         {@link android.content.Intent#FLAG_ACTIVITY_MULTIPLE_TASK}. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>standard</code></td><td>0</td><td> The default mode, which will usually create a new instance of
             the activity when it is started, though this behavior may change
             with the introduction of other options such as
             {@link android.content.Intent#FLAG_ACTIVITY_NEW_TASK
             Intent.FLAG_ACTIVITY_NEW_TASK}. </td></tr>
<tr><td><code>singleTop</code></td><td>1</td><td> If, when starting the activity, there is already an
            instance of the same activity class in the foreground that is
            interacting with the user, then
            re-use that instance.  This existing instance will receive a call to
            {@link android.app.Activity#onNewIntent Activity.onNewIntent()} with
            the new Intent that is being started. </td></tr>
<tr><td><code>singleTask</code></td><td>2</td><td> If, when starting the activity, there is already a task running
            that starts with this activity, then instead of starting a new
            instance the current task is brought to the front.  The existing
            instance will receive a call to {@link android.app.Activity#onNewIntent
            Activity.onNewIntent()}
            with the new Intent that is being started, and with the
            {@link android.content.Intent#FLAG_ACTIVITY_BROUGHT_TO_FRONT
            Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT} flag set.  This is a superset
            of the singleTop mode, where if there is already an instance
            of the activity being started at the top of the stack, it will
            receive the Intent as described there (without the
            FLAG_ACTIVITY_BROUGHT_TO_FRONT flag set).  See the
            <a href="{@docRoot}guide/topics/fundamentals.html#acttask">Application Fundamentals</a>
            documentation for more details on tasks.</td></tr>
<tr><td><code>singleInstance</code></td><td>3</td><td> Only allow one instance of this activity to ever be 
            running.  This activity gets a unique task with only itself running 
            in it; if it is ever launched again with the same Intent, then that 
            task will be brought forward and its 
            {@link android.app.Activity#onNewIntent Activity.onNewIntent()}
            method called.  If this 
            activity tries to start a new activity, that new activity will be 
            launched in a separate task.  See the
            <a href="{@docRoot}guide/topics/fundamentals.html#acttask">Application Fundamentals</a>
            documentation for more details on tasks. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#launchMode}.
          @attr name android:launchMode
        */
        public static final int AndroidManifestActivity_launchMode = 14;
        /**
          <p>
          @attr description
           Specify whether a component is allowed to have multiple instances
         of itself running in different processes.  Use with the activity
         and provider tags.
    
         <p>Normally the system will ensure that all instances of a particular
         component are only running in a single process.  You can use this
         attribute to disable that behavior, allowing the system to create
         instances wherever they are used (provided permissions allow it).
         This is most often used with content providers, so that instances
         of a provider can be created in each client process, allowing them
         to be used without performing IPC.  


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#multiprocess}.
          @attr name android:multiprocess
        */
        public static final int AndroidManifestActivity_multiprocess = 9;
        /**
          <p>
          @attr description
           Required name of the class implementing the activity, deriving from
            {@link android.app.Activity}.  This is a fully
            qualified class name (for example, com.mycompany.myapp.MyActivity); as a
            short-hand if the first character of the class
            is a period then it is appended to your package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestActivity_name = 3;
        /**
          <p>
          @attr description
           Specify whether an activity should be kept in its history stack.
         If this attribute is set, then as soon as the user navigates away
         from the activity it will be finished and they will no longer be
         able to return to it. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#noHistory}.
          @attr name android:noHistory
        */
        public static final int AndroidManifestActivity_noHistory = 21;
        /**
          <p>
          @attr description
           Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#permission}.
          @attr name android:permission
        */
        public static final int AndroidManifestActivity_permission = 4;
        /**
          <p>
          @attr description
           Specify a specific process that the associated code is to run in.
         Use with the application tag (to supply a default process for all
         application components), or with the activity, receiver, service,
         or provider tag (to supply a specific icon for that component).
    
         <p>Application components are normally run in a single process that
         is created for the entire application.  You can use this tag to modify
         where they run.  If the process name begins with a ':' character,
         a new process private to that application will be created when needed
         to run that component (allowing you to spread your application across
         multiple processes).  If the process name begins with a lower-case
         character, the component will be run in a global process of that name,
         provided that you have permission to do so, allowing multiple
         applications to share one process to reduce resource usage. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#process}.
          @attr name android:process
        */
        public static final int AndroidManifestActivity_process = 7;
        /**
          <p>
          @attr description
           Specify the orientation an activity should be run in.  If not
         specified, it will run in the current preferred orientation
         of the screen. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>unspecified</code></td><td>-1</td><td> No preference specified: let the system decide the best
             orientation.  This will either be the orientation selected
             by the activity below, or the user's preferred orientation
             if this activity is the bottom of a task. If the user
             explicitly turned off sensor based orientation through settings
             sensor based device rotation will be ignored. If not by default
             sensor based orientation will be taken into account and the 
             orientation will changed based on how the user rotates the device </td></tr>
<tr><td><code>landscape</code></td><td>0</td><td> Would like to have the screen in a landscape orientation: that
             is, with the display wider than it is tall, ignoring sensor data. </td></tr>
<tr><td><code>portrait</code></td><td>1</td><td> Would like to have the screen in a portrait orientation: that
             is, with the display taller than it is wide, ignoring sensor data. </td></tr>
<tr><td><code>user</code></td><td>2</td><td> Use the user's current preferred orientation of the handset. </td></tr>
<tr><td><code>behind</code></td><td>3</td><td> Keep the screen in the same orientation as whatever is behind
             this activity. </td></tr>
<tr><td><code>sensor</code></td><td>4</td><td> Orientation is determined by a physical orientation sensor:
             the display will rotate based on how the user moves the device. </td></tr>
<tr><td><code>nosensor</code></td><td>5</td><td> Always ignore orientation determined by orientation sensor:
             the display will not rotate when the user moves the device. </td></tr>
<tr><td><code>sensorLandscape</code></td><td>6</td><td> Would like to have the screen in landscape orientation, but can
             use the sensor to change which direction the screen is facing. </td></tr>
<tr><td><code>sensorPortait</code></td><td>7</td><td> Would like to have the screen in portrait orientation, but can
             use the sensor to change which direction the screen is facing. </td></tr>
<tr><td><code>reverseLandscape</code></td><td>8</td><td> Would like to have the screen in landscape orientation, turned in
             the opposite direction from normal landscape. </td></tr>
<tr><td><code>reversePortait</code></td><td>9</td><td> Would like to have the screen in portrait orientation, turned in
             the opposite direction from normal portrait. </td></tr>
<tr><td><code>fullSensor</code></td><td>10</td><td> Orientation is determined by a physical orientation sensor:
             the display will rotate based on how the user moves the device.
             This allows any of the 4 possible rotations, regardless of what
             the device will normally do (for example some devices won't
             normally use 180 degree rotation). </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#screenOrientation}.
          @attr name android:screenOrientation
        */
        public static final int AndroidManifestActivity_screenOrientation = 15;
        /**
          <p>
          @attr description
           Indicates that an Activity does not need to have its freeze state
         (as returned by {@link android.app.Activity#onSaveInstanceState}
         retained in order to be restarted.  Generally you use this for activities
         that do not store any state.  When this flag is set, if for some reason
         the activity is killed before it has a chance to save its state,
         then the system will not remove it from the activity stack like
         it normally would.  Instead, the next time the user navigates to
         it its {@link android.app.Activity#onCreate} method will be called
         with a null icicle, just like it was starting for the first time.
         
         <p>This is used by the Home activity to make sure it does not get
         removed if it crashes for some reason. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#stateNotNeeded}.
          @attr name android:stateNotNeeded
        */
        public static final int AndroidManifestActivity_stateNotNeeded = 12;
        /**
          <p>
          @attr description
           Specify a task name that activities have an "affinity" to.
         Use with the application tag (to supply a default affinity for all
         activities in the application), or with the activity tag (to supply
         a specific affinity for that component).
    
         <p>The default value for this attribute is the same as the package
         name, indicating that all activities in the manifest should generally
         be considered a single "application" to the user.  You can use this
         attribute to modify that behavior: either giving them an affinity
         for another task, if the activities are intended to be part of that
         task from the user's perspective, or using an empty string for
         activities that have no affinity to a task. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#taskAffinity}.
          @attr name android:taskAffinity
        */
        public static final int AndroidManifestActivity_taskAffinity = 8;
        /**
          <p>
          @attr description
           The overall theme to use for an activity.  Use with either the
         application tag (to supply a default theme for all activities) or
         the activity tag (to supply a specific theme for that activity).
    
         <p>This automatically sets
         your activity's Context to use this theme, and may also be used
         for "starting" animations prior to the activity being launched (to
         better match what the activity actually looks like).  It is a reference
         to a style resource defining the theme.  If not set, the default
         system theme will be used. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#theme}.
          @attr name android:theme
        */
        public static final int AndroidManifestActivity_theme = 0;
        /**
          <p>
          @attr description
           Specify the default soft-input mode for the main window of
             this activity.  A value besides "unspecified" here overrides
             any value in the theme. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>stateUnspecified</code></td><td>0</td><td> Not specified, use what the system thinks is best.  This
                 is the default. </td></tr>
<tr><td><code>stateUnchanged</code></td><td>1</td><td> Leave the soft input window as-is, in whatever state it
                 last was. </td></tr>
<tr><td><code>stateHidden</code></td><td>2</td><td> Make the soft input area hidden when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysHidden</code></td><td>3</td><td> Always make the soft input area hidden when this window
                 has input focus. </td></tr>
<tr><td><code>stateVisible</code></td><td>4</td><td> Make the soft input area visible when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysVisible</code></td><td>5</td><td> Always make the soft input area visible when this window
                 has input focus. </td></tr>
<tr><td><code>adjustUnspecified</code></td><td>0x00</td><td> The window resize/pan adjustment has not been specified,
                 the system will automatically select between resize and pan
                 modes, depending
                 on whether the content of the window has any layout views
                 that can scroll their contents.  If there is such a view,
                 then the window will be resized, with the assumption being
                 that the resizeable area can be reduced to make room for
                 the input UI. </td></tr>
<tr><td><code>adjustResize</code></td><td>0x10</td><td> Always resize the window: the content area of the window is
                 reduced to make room for the soft input area. </td></tr>
<tr><td><code>adjustPan</code></td><td>0x20</td><td> Don't resize the window to make room for the soft input area;
                 instead pan the contents of the window as focus moves inside
                 of it so that the user can see what they are typing.  This is
                 generally less desireable than panning because the user may
                 need to close the input area to get at and interact with
                 parts of the window. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowSoftInputMode}.
          @attr name android:windowSoftInputMode
        */
        public static final int AndroidManifestActivity_windowSoftInputMode = 20;
        /**  The <code>activity-alias</code> tag declares a new
         name for an existing {@link #AndroidManifestActivity activity}
         tag.
         
         <p>Zero or more {@link #AndroidManifestIntentFilter intent-filter}
         tags can be included inside of an activity-alias, to specify the Intents
         that it can handle.  If none are specified, the activity can
         only be started through direct specification of its class name.
         The activity-alias tag appears as a child tag of the
         {@link #AndroidManifestApplication application} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_description android:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_enabled android:enabled}</code></td><td> Specify whether the activity-alias is enabled or not (that is, can be instantiated by the system).</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_exported android:exported}</code></td><td> Flag indicating whether the given application component is available
         to other applications.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_icon android:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_label android:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_name android:name}</code></td><td> Required name of the class implementing the activity, deriving from
            {@link android.app.Activity}.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_permission android:permission}</code></td><td> Specify a permission that a client is required to have in order to
    	 use the associated object.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_targetActivity android:targetActivity}</code></td><td> The name of the activity this alias should launch.</td></tr>
           </table>
           @see #AndroidManifestActivityAlias_description
           @see #AndroidManifestActivityAlias_enabled
           @see #AndroidManifestActivityAlias_exported
           @see #AndroidManifestActivityAlias_icon
           @see #AndroidManifestActivityAlias_label
           @see #AndroidManifestActivityAlias_name
           @see #AndroidManifestActivityAlias_permission
           @see #AndroidManifestActivityAlias_targetActivity
         */
        public static final int[] AndroidManifestActivityAlias = {
            0x01010001, 0x01010002, 0x01010003, 0x01010006,
            0x0101000e, 0x01010010, 0x01010020, 0x01010202
        };
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#description}.
          @attr name android:description
        */
        public static final int AndroidManifestActivityAlias_description = 6;
        /**
          <p>
          @attr description
           Specify whether the activity-alias is enabled or not (that is, can be instantiated by the system).
             It can also be specified for an application as a whole, in which case a value of "false"
             will override any component specific values (a value of "true" will not override the
             component specific values). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#enabled}.
          @attr name android:enabled
        */
        public static final int AndroidManifestActivityAlias_enabled = 4;
        /**
          <p>
          @attr description
           Flag indicating whether the given application component is available
         to other applications.  If false, it can only be accessed by
         applications with its same user id (which usually means only by
         code in its own package).  If true, it can be invoked by external
         entities, though which ones can do so may be controlled through
         permissions.  The default value is false for activity, receiver,
         and service components that do not specify any intent filters; it
         is true for activity, receiver, and service components that do
         have intent filters (implying they expect to be invoked by others
         who do not know their particular component name) and for all
         content providers. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#exported}.
          @attr name android:exported
        */
        public static final int AndroidManifestActivityAlias_exported = 5;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int AndroidManifestActivityAlias_icon = 1;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#label}.
          @attr name android:label
        */
        public static final int AndroidManifestActivityAlias_label = 0;
        /**
          <p>
          @attr description
           Required name of the class implementing the activity, deriving from
            {@link android.app.Activity}.  This is a fully
            qualified class name (for example, com.mycompany.myapp.MyActivity); as a
            short-hand if the first character of the class
            is a period then it is appended to your package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestActivityAlias_name = 2;
        /**
          <p>
          @attr description
           Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#permission}.
          @attr name android:permission
        */
        public static final int AndroidManifestActivityAlias_permission = 3;
        /**
          <p>
          @attr description
           The name of the activity this alias should launch.  The activity
             must be in the same manifest as the alias, and have been defined
             in that manifest before the alias here.  This must use a Java-style
             naming convention to ensure the name is unique, for example
             "com.mycompany.MyName". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#targetActivity}.
          @attr name android:targetActivity
        */
        public static final int AndroidManifestActivityAlias_targetActivity = 7;
        /**  The <code>application</code> tag describes application-level components
         contained in the package, as well as general application
         attributes.  Many of the attributes you can supply here (such
         as theme, label, icon, permission, process, taskAffinity,
         and allowTaskReparenting) serve
         as default values for the corresponding attributes of components
         declared inside of the application.
         
         <p>Inside of this element you specify what the application contains,
         using the elements {@link #AndroidManifestProvider provider},
         {@link #AndroidManifestService service},
         {@link #AndroidManifestReceiver receiver},
         {@link #AndroidManifestActivity activity},
         {@link #AndroidManifestActivityAlias activity-alias}, and
         {@link #AndroidManifestUsesLibrary uses-library}.  The application tag
         appears as a child of the root {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestApplication_allowBackup android:allowBackup}</code></td><td> Whether to allow the application to participate in backup
         infrastructure.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_allowClearUserData android:allowClearUserData}</code></td><td> Option to let applications specify that user data can/cannot be 
         cleared.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_allowTaskReparenting android:allowTaskReparenting}</code></td><td> Specify that an activity can be moved out of a task it is in to
         the task it has an affinity for when appropriate.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_backupAgent android:backupAgent}</code></td><td> The name of the class subclassing <code>BackupAgent</code> to manage
         backup and restore of the application's data on external storage.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_debuggable android:debuggable}</code></td><td> Flag indicating whether the application can be debugged, even when
         running on a device that is running in user mode.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_description android:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_enabled android:enabled}</code></td><td> Specify whether the components in this application are enabled or not (that is, can be
             instantiated by the system).</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_hasCode android:hasCode}</code></td><td> Indicate whether this application contains code.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_icon android:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_killAfterRestore android:killAfterRestore}</code></td><td> Whether the application in question should be terminated after its
         settings have been restored during a full-system restore operation.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_label android:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_manageSpaceActivity android:manageSpaceActivity}</code></td><td> Name of activity to be launched for managing the application's space on the device.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_name android:name}</code></td><td> An optional name of a class implementing the overall
             {@link android.app.Application} for this package.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_permission android:permission}</code></td><td> Specify a permission that a client is required to have in order to
    	 use the associated object.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_persistent android:persistent}</code></td><td> Flag to control special persistent mode of an application.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_process android:process}</code></td><td> Specify a specific process that the associated code is to run in.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_restoreAnyVersion android:restoreAnyVersion}</code></td><td> Indicate that the application is prepared to attempt a restore of any
         backed-up dataset, even if the backup is apparently from a newer version
         of the application than is currently installed on the device.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_restoreNeedsApplication android:restoreNeedsApplication}</code></td><td> @deprecated This attribute is not used by the Android operating system.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_taskAffinity android:taskAffinity}</code></td><td> Specify a task name that activities have an "affinity" to.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_testOnly android:testOnly}</code></td><td> Option to indicate this application is only for testing purposes.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_theme android:theme}</code></td><td> The overall theme to use for an activity.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_vmSafeMode android:vmSafeMode}</code></td><td> Flag indicating whether the application requests the VM to operate in
         the safe mode.</td></tr>
           </table>
           @see #AndroidManifestApplication_allowBackup
           @see #AndroidManifestApplication_allowClearUserData
           @see #AndroidManifestApplication_allowTaskReparenting
           @see #AndroidManifestApplication_backupAgent
           @see #AndroidManifestApplication_debuggable
           @see #AndroidManifestApplication_description
           @see #AndroidManifestApplication_enabled
           @see #AndroidManifestApplication_hasCode
           @see #AndroidManifestApplication_icon
           @see #AndroidManifestApplication_killAfterRestore
           @see #AndroidManifestApplication_label
           @see #AndroidManifestApplication_manageSpaceActivity
           @see #AndroidManifestApplication_name
           @see #AndroidManifestApplication_permission
           @see #AndroidManifestApplication_persistent
           @see #AndroidManifestApplication_process
           @see #AndroidManifestApplication_restoreAnyVersion
           @see #AndroidManifestApplication_restoreNeedsApplication
           @see #AndroidManifestApplication_taskAffinity
           @see #AndroidManifestApplication_testOnly
           @see #AndroidManifestApplication_theme
           @see #AndroidManifestApplication_vmSafeMode
         */
        public static final int[] AndroidManifestApplication = {
            0x01010000, 0x01010001, 0x01010002, 0x01010003,
            0x01010004, 0x01010005, 0x01010006, 0x0101000c,
            0x0101000d, 0x0101000e, 0x0101000f, 0x01010011,
            0x01010012, 0x01010020, 0x01010204, 0x01010272,
            0x0101027f, 0x01010280, 0x0101029c, 0x0101029d,
            0x010102b8, 0x010102ba, 0x010102db, 0x010102dc
        };
        /**
          <p>
          @attr description
           Whether to allow the application to participate in backup
         infrastructure.  If this attribute is set to <code>false</code>, no backup
         of the application will ever be performed, even by a full-system backup that
         would otherwise cause all application data to be saved via adb.  The
         default value of this attribute is <code>true</code>. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#allowBackup}.
          @attr name android:allowBackup
        */
        public static final int AndroidManifestApplication_allowBackup = 17;
        /**
          <p>
          @attr description
           Option to let applications specify that user data can/cannot be 
         cleared. This flag is turned on by default.
         <em>This attribute is usable only by applications
         included in the system image. Third-party apps cannot use it.</em> 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#allowClearUserData}.
          @attr name android:allowClearUserData
        */
        public static final int AndroidManifestApplication_allowClearUserData = 5;
        /**
          <p>
          @attr description
           Specify that an activity can be moved out of a task it is in to
         the task it has an affinity for when appropriate.  Use with the
         application tag (to supply a default for all activities in the
         application), or with an activity tag (to supply a specific
         setting for that component).
    
         <p>Normally when an application is started, it is associated with
         the task of the activity that started it and stays there for its
         entire lifetime.  You can use the allowTaskReparenting feature to force an
         activity to be re-parented to a different task when the task it is
         in goes to the background.  Typically this is used to cause the
         activities of an application to move back to the main task associated
         with that application.  The activity is re-parented to the task
         with the same {@link android.R.attr#taskAffinity} as it has. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#allowTaskReparenting}.
          @attr name android:allowTaskReparenting
        */
        public static final int AndroidManifestApplication_allowTaskReparenting = 14;
        /**
          <p>
          @attr description
           The name of the class subclassing <code>BackupAgent</code> to manage
         backup and restore of the application's data on external storage. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#backupAgent}.
          @attr name android:backupAgent
        */
        public static final int AndroidManifestApplication_backupAgent = 16;
        /**
          <p>
          @attr description
           Flag indicating whether the application can be debugged, even when
         running on a device that is running in user mode. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#debuggable}.
          @attr name android:debuggable
        */
        public static final int AndroidManifestApplication_debuggable = 10;
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#description}.
          @attr name android:description
        */
        public static final int AndroidManifestApplication_description = 13;
        /**
          <p>
          @attr description
           Specify whether the components in this application are enabled or not (that is, can be
             instantiated by the system).
             If "false", it overrides any component specific values (a value of "true" will not
             override the component specific values). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#enabled}.
          @attr name android:enabled
        */
        public static final int AndroidManifestApplication_enabled = 9;
        /**
          <p>
          @attr description
           Indicate whether this application contains code.  If set to false,
             there is no code associated with it and thus the system will not
             try to load its code when launching components.  The default is true
             for normal behavior. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#hasCode}.
          @attr name android:hasCode
        */
        public static final int AndroidManifestApplication_hasCode = 7;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int AndroidManifestApplication_icon = 2;
        /**
          <p>
          @attr description
           Whether the application in question should be terminated after its
         settings have been restored during a full-system restore operation.
         Single-package restore operations will never cause the application to
         be shut down.  Full-system restore operations typically only occur once,
         when the phone is first set up.  Third-party applications will not usually
         need to use this attribute.

         <p>The default is <code>true</code>, which means that after the application
         has finished processing its data during a full-system restore, it will be
         terminated. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#killAfterRestore}.
          @attr name android:killAfterRestore
        */
        public static final int AndroidManifestApplication_killAfterRestore = 18;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#label}.
          @attr name android:label
        */
        public static final int AndroidManifestApplication_label = 1;
        /**
          <p>
          @attr description
           Name of activity to be launched for managing the application's space on the device. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#manageSpaceActivity}.
          @attr name android:manageSpaceActivity
        */
        public static final int AndroidManifestApplication_manageSpaceActivity = 4;
        /**
          <p>
          @attr description
           An optional name of a class implementing the overall
             {@link android.app.Application} for this package.  When the
             process for your package is started, this class is instantiated
             before any of the other application components.  Note that this
             is not required, and in fact most applications will probably
             not need it. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestApplication_name = 3;
        /**
          <p>
          @attr description
           Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#permission}.
          @attr name android:permission
        */
        public static final int AndroidManifestApplication_permission = 6;
        /**
          <p>
          @attr description
           Flag to control special persistent mode of an application.  This should
         not normally be used by applications; it requires that the system keep
         your application running at all times. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#persistent}.
          @attr name android:persistent
        */
        public static final int AndroidManifestApplication_persistent = 8;
        /**
          <p>
          @attr description
           Specify a specific process that the associated code is to run in.
         Use with the application tag (to supply a default process for all
         application components), or with the activity, receiver, service,
         or provider tag (to supply a specific icon for that component).
    
         <p>Application components are normally run in a single process that
         is created for the entire application.  You can use this tag to modify
         where they run.  If the process name begins with a ':' character,
         a new process private to that application will be created when needed
         to run that component (allowing you to spread your application across
         multiple processes).  If the process name begins with a lower-case
         character, the component will be run in a global process of that name,
         provided that you have permission to do so, allowing multiple
         applications to share one process to reduce resource usage. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#process}.
          @attr name android:process
        */
        public static final int AndroidManifestApplication_process = 11;
        /**
          <p>
          @attr description
           Indicate that the application is prepared to attempt a restore of any
         backed-up dataset, even if the backup is apparently from a newer version
         of the application than is currently installed on the device.  Setting
         this attribute to <code>true</code> will permit the Backup Manager to
         attempt restore even when a version mismatch suggests that the data are
         incompatible.  <em>Use with caution!</em>

         <p>The default value of this attribute is <code>false</code>. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#restoreAnyVersion}.
          @attr name android:restoreAnyVersion
        */
        public static final int AndroidManifestApplication_restoreAnyVersion = 21;
        /**
          <p>
          @attr description
           @deprecated This attribute is not used by the Android operating system. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#restoreNeedsApplication}.
          @attr name android:restoreNeedsApplication
        */
        @Deprecated
        public static final int AndroidManifestApplication_restoreNeedsApplication = 19;
        /**
          <p>
          @attr description
           Specify a task name that activities have an "affinity" to.
         Use with the application tag (to supply a default affinity for all
         activities in the application), or with the activity tag (to supply
         a specific affinity for that component).
    
         <p>The default value for this attribute is the same as the package
         name, indicating that all activities in the manifest should generally
         be considered a single "application" to the user.  You can use this
         attribute to modify that behavior: either giving them an affinity
         for another task, if the activities are intended to be part of that
         task from the user's perspective, or using an empty string for
         activities that have no affinity to a task. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#taskAffinity}.
          @attr name android:taskAffinity
        */
        public static final int AndroidManifestApplication_taskAffinity = 12;
        /**
          <p>
          @attr description
           Option to indicate this application is only for testing purposes.
         For example, it may expose functionality or data outside of itself
         that would cause a security hole, but is useful for testing.  This
         kind of application can not be installed without the
         INSTALL_ALLOW_TEST flag, which means only through adb install.  


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#testOnly}.
          @attr name android:testOnly
        */
        public static final int AndroidManifestApplication_testOnly = 15;
        /**
          <p>
          @attr description
           The overall theme to use for an activity.  Use with either the
         application tag (to supply a default theme for all activities) or
         the activity tag (to supply a specific theme for that activity).
    
         <p>This automatically sets
         your activity's Context to use this theme, and may also be used
         for "starting" animations prior to the activity being launched (to
         better match what the activity actually looks like).  It is a reference
         to a style resource defining the theme.  If not set, the default
         system theme will be used. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#theme}.
          @attr name android:theme
        */
        public static final int AndroidManifestApplication_theme = 0;
        /**
          <p>
          @attr description
           Flag indicating whether the application requests the VM to operate in
         the safe mode.  


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#vmSafeMode}.
          @attr name android:vmSafeMode
        */
        public static final int AndroidManifestApplication_vmSafeMode = 20;
        /**  Attributes that can be supplied in an AndroidManifest.xml
         <code>category</code> tag, a child of the
         {@link #AndroidManifestIntentFilter intent-filter} tag. 
         See {@link android.content.IntentFilter#addCategory} for
         more information. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestCategory_name android:name}</code></td><td> The name of category that is handled, using the Java-style
             naming convention.</td></tr>
           </table>
           @see #AndroidManifestCategory_name
         */
        public static final int[] AndroidManifestCategory = {
            0x01010003
        };
        /**
          <p>
          @attr description
           The name of category that is handled, using the Java-style
             naming convention.  For example, to support
             {@link android.content.Intent#CATEGORY_LAUNCHER Intent.CATEGORY_LAUNCHER}
             you would put <code>android.intent.category.LAUNCHER</code> here.
             Custom actions should generally use a prefix matching the
             package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestCategory_name = 0;
        /**  Attributes that can be supplied in an AndroidManifest.xml
         <code>screen</code> tag, a child of <code>compatible-screens</code>,
         which is itseld a child of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestCompatibleScreensScreen_screenDensity android:screenDensity}</code></td><td> Specifies a compatible screen density, as per the device
             configuration screen density bins.</td></tr>
           <tr><td><code>{@link #AndroidManifestCompatibleScreensScreen_screenSize android:screenSize}</code></td><td> Specifies a compatible screen size, as per the device
             configuration screen size bins.</td></tr>
           </table>
           @see #AndroidManifestCompatibleScreensScreen_screenDensity
           @see #AndroidManifestCompatibleScreensScreen_screenSize
         */
        public static final int[] AndroidManifestCompatibleScreensScreen = {
            0x010102ca, 0x010102cb
        };
        /**
          <p>
          @attr description
           Specifies a compatible screen density, as per the device
             configuration screen density bins. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ldpi</code></td><td>120</td><td> A low density screen, approximately 120dpi. </td></tr>
<tr><td><code>mdpi</code></td><td>160</td><td> A medium density screen, approximately 160dpi. </td></tr>
<tr><td><code>hdpi</code></td><td>240</td><td> A high density screen, approximately 240dpi. </td></tr>
<tr><td><code>xhdpi</code></td><td>320</td><td> An extra high density screen, approximately 320dpi. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#screenDensity}.
          @attr name android:screenDensity
        */
        public static final int AndroidManifestCompatibleScreensScreen_screenDensity = 1;
        /**
          <p>
          @attr description
           Specifies a compatible screen size, as per the device
             configuration screen size bins. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>small</code></td><td>200</td><td> A small screen configuration, at least 240x320db. </td></tr>
<tr><td><code>normal</code></td><td>300</td><td> A normal screen configuration, at least 320x480db. </td></tr>
<tr><td><code>large</code></td><td>400</td><td> A large screen configuration, at least 400x530db. </td></tr>
<tr><td><code>xlarge</code></td><td>500</td><td> An extra large screen configuration, at least 600x800db. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#screenSize}.
          @attr name android:screenSize
        */
        public static final int AndroidManifestCompatibleScreensScreen_screenSize = 0;
        /**  Attributes that can be supplied in an AndroidManifest.xml
         <code>data</code> tag, a child of the
         {@link #AndroidManifestIntentFilter intent-filter} tag, describing
         the types of data that match.  This tag can be specified multiple
         times to supply multiple data options, as described in the
         {@link android.content.IntentFilter} class.  Note that all such
         tags are adding options to the same IntentFilter so that, for example,
         <code>&lt;data android:scheme="myscheme" android:host="me.com" /&gt;</code>
         is equivalent to <code>&lt;data android:scheme="myscheme" /&gt;
         &lt;data android:host="me.com" /&gt;</code>. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestData_host android:host}</code></td><td> Specify a URI authority host that is handled, as per
             {@link android.content.IntentFilter#addDataAuthority
             IntentFilter.addDataAuthority()}.</td></tr>
           <tr><td><code>{@link #AndroidManifestData_mimeType android:mimeType}</code></td><td> Specify a MIME type that is handled, as per
             {@link android.content.IntentFilter#addDataType
             IntentFilter.addDataType()}.</td></tr>
           <tr><td><code>{@link #AndroidManifestData_path android:path}</code></td><td> Specify a URI path that must exactly match, as per
             {@link android.content.IntentFilter#addDataPath
             IntentFilter.addDataAuthority()} with
             {@link android.os.PatternMatcher#PATTERN_LITERAL}.</td></tr>
           <tr><td><code>{@link #AndroidManifestData_pathPattern android:pathPattern}</code></td><td> Specify a URI path that matches a simple pattern, as per
             {@link android.content.IntentFilter#addDataPath
             IntentFilter.addDataAuthority()} with
             {@link android.os.PatternMatcher#PATTERN_SIMPLE_GLOB}.</td></tr>
           <tr><td><code>{@link #AndroidManifestData_pathPrefix android:pathPrefix}</code></td><td> Specify a URI path that must be a prefix to match, as per
             {@link android.content.IntentFilter#addDataPath
             IntentFilter.addDataAuthority()} with
             {@link android.os.PatternMatcher#PATTERN_PREFIX}.</td></tr>
           <tr><td><code>{@link #AndroidManifestData_port android:port}</code></td><td> Specify a URI authority port that is handled, as per
             {@link android.content.IntentFilter#addDataAuthority
             IntentFilter.addDataAuthority()}.</td></tr>
           <tr><td><code>{@link #AndroidManifestData_scheme android:scheme}</code></td><td> Specify a URI scheme that is handled, as per
             {@link android.content.IntentFilter#addDataScheme
             IntentFilter.addDataScheme()}.</td></tr>
           </table>
           @see #AndroidManifestData_host
           @see #AndroidManifestData_mimeType
           @see #AndroidManifestData_path
           @see #AndroidManifestData_pathPattern
           @see #AndroidManifestData_pathPrefix
           @see #AndroidManifestData_port
           @see #AndroidManifestData_scheme
         */
        public static final int[] AndroidManifestData = {
            0x01010026, 0x01010027, 0x01010028, 0x01010029,
            0x0101002a, 0x0101002b, 0x0101002c
        };
        /**
          <p>
          @attr description
           Specify a URI authority host that is handled, as per
             {@link android.content.IntentFilter#addDataAuthority
             IntentFilter.addDataAuthority()}.
             <p><em>Note: host name matching in the Android framework is
             case-sensitive, unlike the formal RFC.  As a result,
             host names here should always use lower case letters.</em></p> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#host}.
          @attr name android:host
        */
        public static final int AndroidManifestData_host = 2;
        /**
          <p>
          @attr description
           Specify a MIME type that is handled, as per
             {@link android.content.IntentFilter#addDataType
             IntentFilter.addDataType()}.
             <p><em>Note: MIME type matching in the Android framework is
             case-sensitive, unlike formal RFC MIME types.  As a result,
             MIME types here should always use lower case letters.</em></p> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#mimeType}.
          @attr name android:mimeType
        */
        public static final int AndroidManifestData_mimeType = 0;
        /**
          <p>
          @attr description
           Specify a URI path that must exactly match, as per
             {@link android.content.IntentFilter#addDataPath
             IntentFilter.addDataAuthority()} with
             {@link android.os.PatternMatcher#PATTERN_LITERAL}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#path}.
          @attr name android:path
        */
        public static final int AndroidManifestData_path = 4;
        /**
          <p>
          @attr description
           Specify a URI path that matches a simple pattern, as per
             {@link android.content.IntentFilter#addDataPath
             IntentFilter.addDataAuthority()} with
             {@link android.os.PatternMatcher#PATTERN_SIMPLE_GLOB}. 
             Note that because '\' is used as an escape character when
             reading the string from XML (before it is parsed as a pattern),
             you will need to double-escape: for example a literal "*" would
             be written as "\\*" and a literal "\" would be written as
             "\\\\".  This is basically the same as what you would need to
             write if constructing the string in Java code. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#pathPattern}.
          @attr name android:pathPattern
        */
        public static final int AndroidManifestData_pathPattern = 6;
        /**
          <p>
          @attr description
           Specify a URI path that must be a prefix to match, as per
             {@link android.content.IntentFilter#addDataPath
             IntentFilter.addDataAuthority()} with
             {@link android.os.PatternMatcher#PATTERN_PREFIX}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#pathPrefix}.
          @attr name android:pathPrefix
        */
        public static final int AndroidManifestData_pathPrefix = 5;
        /**
          <p>
          @attr description
           Specify a URI authority port that is handled, as per
             {@link android.content.IntentFilter#addDataAuthority
             IntentFilter.addDataAuthority()}.  If a host is supplied
             but not a port, any port is matched. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#port}.
          @attr name android:port
        */
        public static final int AndroidManifestData_port = 3;
        /**
          <p>
          @attr description
           Specify a URI scheme that is handled, as per
             {@link android.content.IntentFilter#addDataScheme
             IntentFilter.addDataScheme()}.
             <p><em>Note: scheme matching in the Android framework is
             case-sensitive, unlike the formal RFC.  As a result,
             schemes here should always use lower case letters.</em></p> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scheme}.
          @attr name android:scheme
        */
        public static final int AndroidManifestData_scheme = 1;
        /**  Attributes that can be supplied in an AndroidManifest.xml
         <code>grant-uri-permission</code> tag, a child of the
         {@link #AndroidManifestProvider provider} tag, describing a specific
         URI path that can be granted as a permission.  This tag can be
         specified multiple time to supply multiple paths. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestGrantUriPermission_path android:path}</code></td><td> Specify a URI path that must exactly match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_LITERAL}.</td></tr>
           <tr><td><code>{@link #AndroidManifestGrantUriPermission_pathPattern android:pathPattern}</code></td><td> Specify a URI path that matches a simple pattern, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_SIMPLE_GLOB}.</td></tr>
           <tr><td><code>{@link #AndroidManifestGrantUriPermission_pathPrefix android:pathPrefix}</code></td><td> Specify a URI path that must be a prefix to match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_PREFIX}.</td></tr>
           </table>
           @see #AndroidManifestGrantUriPermission_path
           @see #AndroidManifestGrantUriPermission_pathPattern
           @see #AndroidManifestGrantUriPermission_pathPrefix
         */
        public static final int[] AndroidManifestGrantUriPermission = {
            0x0101002a, 0x0101002b, 0x0101002c
        };
        /**
          <p>
          @attr description
           Specify a URI path that must exactly match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_LITERAL}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#path}.
          @attr name android:path
        */
        public static final int AndroidManifestGrantUriPermission_path = 0;
        /**
          <p>
          @attr description
           Specify a URI path that matches a simple pattern, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_SIMPLE_GLOB}. 
             Note that because '\' is used as an escape character when
             reading the string from XML (before it is parsed as a pattern),
             you will need to double-escape: for example a literal "*" would
             be written as "\\*" and a literal "\" would be written as
             "\\\\".  This is basically the same as what you would need to
             write if constructing the string in Java code. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#pathPattern}.
          @attr name android:pathPattern
        */
        public static final int AndroidManifestGrantUriPermission_pathPattern = 2;
        /**
          <p>
          @attr description
           Specify a URI path that must be a prefix to match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_PREFIX}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#pathPrefix}.
          @attr name android:pathPrefix
        */
        public static final int AndroidManifestGrantUriPermission_pathPrefix = 1;
        /**  Attributes that can be supplied in an AndroidManifest.xml
         <code>instrumentation</code> tag, a child of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestInstrumentation_functionalTest android:functionalTest}</code></td><td> Flag indicating that an Instrumentation class should be run as a
         functional test.</td></tr>
           <tr><td><code>{@link #AndroidManifestInstrumentation_handleProfiling android:handleProfiling}</code></td><td> Flag indicating that an Instrumentation class wants to take care
         of starting/stopping profiling itself, rather than relying on
         the default behavior of profiling the complete time it is running.</td></tr>
           <tr><td><code>{@link #AndroidManifestInstrumentation_icon android:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestInstrumentation_label android:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestInstrumentation_name android:name}</code></td><td> Required name of the class implementing the instrumentation, deriving from
            {@link android.app.Instrumentation}.</td></tr>
           <tr><td><code>{@link #AndroidManifestInstrumentation_targetPackage android:targetPackage}</code></td><td> The name of the application package that an Instrumentation object
         will run against.</td></tr>
           </table>
           @see #AndroidManifestInstrumentation_functionalTest
           @see #AndroidManifestInstrumentation_handleProfiling
           @see #AndroidManifestInstrumentation_icon
           @see #AndroidManifestInstrumentation_label
           @see #AndroidManifestInstrumentation_name
           @see #AndroidManifestInstrumentation_targetPackage
         */
        public static final int[] AndroidManifestInstrumentation = {
            0x01010001, 0x01010002, 0x01010003, 0x01010021,
            0x01010022, 0x01010023
        };
        /**
          <p>
          @attr description
           Flag indicating that an Instrumentation class should be run as a
         functional test. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#functionalTest}.
          @attr name android:functionalTest
        */
        public static final int AndroidManifestInstrumentation_functionalTest = 5;
        /**
          <p>
          @attr description
           Flag indicating that an Instrumentation class wants to take care
         of starting/stopping profiling itself, rather than relying on
         the default behavior of profiling the complete time it is running.
         This allows it to target profiling data at a specific set of
         operations. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#handleProfiling}.
          @attr name android:handleProfiling
        */
        public static final int AndroidManifestInstrumentation_handleProfiling = 4;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int AndroidManifestInstrumentation_icon = 1;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#label}.
          @attr name android:label
        */
        public static final int AndroidManifestInstrumentation_label = 0;
        /**
          <p>
          @attr description
           Required name of the class implementing the instrumentation, deriving from
            {@link android.app.Instrumentation}.  This is a fully
            qualified class name (for example, com.mycompany.myapp.MyActivity); as a
            short-hand if the first character of the class
            is a period then it is appended to your package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestInstrumentation_name = 2;
        /**
          <p>
          @attr description
           The name of the application package that an Instrumentation object
         will run against. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#targetPackage}.
          @attr name android:targetPackage
        */
        public static final int AndroidManifestInstrumentation_targetPackage = 3;
        /**  The <code>intent-filter</code> tag is used to construct an
         {@link android.content.IntentFilter} object that will be used
         to determine which component can handle a particular
         {@link android.content.Intent} that has been given to the system.
         It can be used as a child of the
         {@link #AndroidManifestActivity activity},
         {@link #AndroidManifestReceiver receiver} and 
         {@link #AndroidManifestService service}
         tags.
         
         <p> Zero or more {@link #AndroidManifestAction action},
         {@link #AndroidManifestCategory category}, and/or
         {@link #AndroidManifestData data} tags should be
         included inside to describe the contents of the filter.
         
         <p> The optional label and icon attributes here are used with
         an activity to supply an alternative description of that activity
         when it is being started through an Intent matching this filter. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestIntentFilter_icon android:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestIntentFilter_label android:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestIntentFilter_priority android:priority}</code></td><td> Specify the relative importance or ability in handling a particular
         Intent.</td></tr>
           </table>
           @see #AndroidManifestIntentFilter_icon
           @see #AndroidManifestIntentFilter_label
           @see #AndroidManifestIntentFilter_priority
         */
        public static final int[] AndroidManifestIntentFilter = {
            0x01010001, 0x01010002, 0x0101001c
        };
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int AndroidManifestIntentFilter_icon = 1;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#label}.
          @attr name android:label
        */
        public static final int AndroidManifestIntentFilter_label = 0;
        /**
          <p>
          @attr description
           Specify the relative importance or ability in handling a particular
         Intent.  For receivers, this controls the order in which they are
         executed to receive a broadcast (note that for
         asynchronous broadcasts, this order is ignored).  For activities,
         this provides information about how good an activity is handling an
         Intent; when multiple activities match an intent and have different
         priorities, only those with the higher priority value will be
         considered a match.
         
         <p>Only use if you really need to impose some specific
         order in which the broadcasts are received, or want to forcibly
         place an activity to always be preferred over others.  The value is a
         single integer, with higher numbers considered to be better. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#priority}.
          @attr name android:priority
        */
        public static final int AndroidManifestIntentFilter_priority = 2;
        /**  The <code>meta-data</code> tag is used to attach additional
         arbitrary data to an application component.  The data can later
         be retrieved programmatically from the
         {@link android.content.pm.ComponentInfo#metaData
         ComponentInfo.metaData} field.  There is no meaning given to this
         data by the system.  You may supply the data through either the
         <code>value</code> or <code>resource</code> attribute; if both
         are given, then <code>resource</code> will be used.
         
         <p>It is highly recommended that you avoid supplying related data as
         multiple separate meta-data entries.  Instead, if you have complex
         data to associate with a component, then use the <code>resource</code>
         attribute to assign an XML resource that the client can parse to
         retrieve the complete data. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestMetaData_name android:name}</code></td><td> A unique name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestMetaData_resource android:resource}</code></td><td> Resource identifier to assign to this piece of named meta-data.</td></tr>
           <tr><td><code>{@link #AndroidManifestMetaData_value android:value}</code></td><td> Concrete value to assign to this piece of named meta-data.</td></tr>
           </table>
           @see #AndroidManifestMetaData_name
           @see #AndroidManifestMetaData_resource
           @see #AndroidManifestMetaData_value
         */
        public static final int[] AndroidManifestMetaData = {
            0x01010003, 0x01010024, 0x01010025
        };
        /**
          <p>
          @attr description
           A unique name for the given item.  This must use a Java-style naming
         convention to ensure the name is unique, for example
         "com.mycompany.MyName". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestMetaData_name = 0;
        /**
          <p>
          @attr description
           Resource identifier to assign to this piece of named meta-data.
             The resource identifier can later be retrieved from the meta data
             Bundle through {@link android.os.Bundle#getInt Bundle.getInt}. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#resource}.
          @attr name android:resource
        */
        public static final int AndroidManifestMetaData_resource = 2;
        /**
          <p>
          @attr description
           Concrete value to assign to this piece of named meta-data.
             The data can later be retrieved from the meta data Bundle
             through {@link android.os.Bundle#getString Bundle.getString},
             {@link android.os.Bundle#getInt Bundle.getInt},
             {@link android.os.Bundle#getBoolean Bundle.getBoolean},
             or {@link android.os.Bundle#getFloat Bundle.getFloat} depending
             on the type used here. 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>May be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#value}.
          @attr name android:value
        */
        public static final int AndroidManifestMetaData_value = 1;
        /**  Private tag to declare the original package name that this package is
         based on.  Only used for packages installed in the system image.  If
         given, and different than the actual package name, and the given
         original package was previously installed on the device but the new
         one was not, then the data for the old one will be renamed to be
         for the new package.

         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestOriginalPackage_name android:name}</code></td><td> A unique name for the given item.</td></tr>
           </table>
           @see #AndroidManifestOriginalPackage_name
         */
        public static final int[] AndroidManifestOriginalPackage = {
            0x01010003
        };
        /**
          <p>
          @attr description
           A unique name for the given item.  This must use a Java-style naming
         convention to ensure the name is unique, for example
         "com.mycompany.MyName". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestOriginalPackage_name = 0;
        /**  Attributes that can be supplied in an AndroidManifest.xml
         <code>path-permission</code> tag, a child of the
         {@link #AndroidManifestProvider provider} tag, describing a permission
         that allows access to a specific path in the provider.  This tag can be
         specified multiple time to supply multiple paths. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestPathPermission_path android:path}</code></td><td> Specify a URI path that must exactly match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_LITERAL}.</td></tr>
           <tr><td><code>{@link #AndroidManifestPathPermission_pathPattern android:pathPattern}</code></td><td> Specify a URI path that matches a simple pattern, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_SIMPLE_GLOB}.</td></tr>
           <tr><td><code>{@link #AndroidManifestPathPermission_pathPrefix android:pathPrefix}</code></td><td> Specify a URI path that must be a prefix to match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_PREFIX}.</td></tr>
           <tr><td><code>{@link #AndroidManifestPathPermission_permission android:permission}</code></td><td> Specify a permission that a client is required to have in order to
    	 use the associated object.</td></tr>
           <tr><td><code>{@link #AndroidManifestPathPermission_readPermission android:readPermission}</code></td><td> A specific {@link android.R.attr#permission} name for read-only
         access to a {@link android.content.ContentProvider}.</td></tr>
           <tr><td><code>{@link #AndroidManifestPathPermission_writePermission android:writePermission}</code></td><td> A specific {@link android.R.attr#permission} name for write
         access to a {@link android.content.ContentProvider}.</td></tr>
           </table>
           @see #AndroidManifestPathPermission_path
           @see #AndroidManifestPathPermission_pathPattern
           @see #AndroidManifestPathPermission_pathPrefix
           @see #AndroidManifestPathPermission_permission
           @see #AndroidManifestPathPermission_readPermission
           @see #AndroidManifestPathPermission_writePermission
         */
        public static final int[] AndroidManifestPathPermission = {
            0x01010006, 0x01010007, 0x01010008, 0x0101002a,
            0x0101002b, 0x0101002c
        };
        /**
          <p>
          @attr description
           Specify a URI path that must exactly match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_LITERAL}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#path}.
          @attr name android:path
        */
        public static final int AndroidManifestPathPermission_path = 3;
        /**
          <p>
          @attr description
           Specify a URI path that matches a simple pattern, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_SIMPLE_GLOB}. 
             Note that because '\' is used as an escape character when
             reading the string from XML (before it is parsed as a pattern),
             you will need to double-escape: for example a literal "*" would
             be written as "\\*" and a literal "\" would be written as
             "\\\\".  This is basically the same as what you would need to
             write if constructing the string in Java code. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#pathPattern}.
          @attr name android:pathPattern
        */
        public static final int AndroidManifestPathPermission_pathPattern = 5;
        /**
          <p>
          @attr description
           Specify a URI path that must be a prefix to match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_PREFIX}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#pathPrefix}.
          @attr name android:pathPrefix
        */
        public static final int AndroidManifestPathPermission_pathPrefix = 4;
        /**
          <p>
          @attr description
           Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#permission}.
          @attr name android:permission
        */
        public static final int AndroidManifestPathPermission_permission = 0;
        /**
          <p>
          @attr description
           A specific {@link android.R.attr#permission} name for read-only
         access to a {@link android.content.ContentProvider}.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#readPermission}.
          @attr name android:readPermission
        */
        public static final int AndroidManifestPathPermission_readPermission = 1;
        /**
          <p>
          @attr description
           A specific {@link android.R.attr#permission} name for write
         access to a {@link android.content.ContentProvider}.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#writePermission}.
          @attr name android:writePermission
        */
        public static final int AndroidManifestPathPermission_writePermission = 2;
        /**  The <code>permission</code> tag declares a security permission that can be
         used to control access from other packages to specific components or
         features in your package (or other packages).  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions.
         
         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestPermission_description android:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermission_icon android:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermission_label android:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermission_name android:name}</code></td><td> Required public name of the permission, which other components and
        packages will use when referring to this permission.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermission_permissionGroup android:permissionGroup}</code></td><td> Specified the name of a group that this permission is associated
         with.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermission_protectionLevel android:protectionLevel}</code></td><td> Characterizes the potential risk implied in a permission and
         indicates the procedure the system should follow when determining
         whether to grant the permission to an application requesting it.</td></tr>
           </table>
           @see #AndroidManifestPermission_description
           @see #AndroidManifestPermission_icon
           @see #AndroidManifestPermission_label
           @see #AndroidManifestPermission_name
           @see #AndroidManifestPermission_permissionGroup
           @see #AndroidManifestPermission_protectionLevel
         */
        public static final int[] AndroidManifestPermission = {
            0x01010001, 0x01010002, 0x01010003, 0x01010009,
            0x0101000a, 0x01010020
        };
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#description}.
          @attr name android:description
        */
        public static final int AndroidManifestPermission_description = 5;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int AndroidManifestPermission_icon = 1;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#label}.
          @attr name android:label
        */
        public static final int AndroidManifestPermission_label = 0;
        /**
          <p>
          @attr description
           Required public name of the permission, which other components and
        packages will use when referring to this permission.  This is a string using
        Java-style scoping to ensure it is unique.  The prefix will often
        be the same as our overall package name, for example
        "com.mycompany.android.myapp.SomePermission". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestPermission_name = 2;
        /**
          <p>
          @attr description
           Specified the name of a group that this permission is associated
         with.  The group must have been defined with the
         {@link android.R.styleable#AndroidManifestPermissionGroup permission-group} tag. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#permissionGroup}.
          @attr name android:permissionGroup
        */
        public static final int AndroidManifestPermission_permissionGroup = 4;
        /**
          <p>
          @attr description
           Characterizes the potential risk implied in a permission and
         indicates the procedure the system should follow when determining
         whether to grant the permission to an application requesting it. {@link
         android.Manifest.permission Standard permissions} have a predefined and
         permanent protectionLevel. If you are creating a custom permission in an
         application, you can define a protectionLevel attribute with one of the
         values listed below. If no protectionLevel is defined for a custom
         permission, the system assigns the default ("normal"). 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> A lower-risk permission that gives an application access to isolated
             application-level features, with minimal risk to other applications,
             the system, or the user. The system automatically grants this type
             of permission to a requesting application at installation, without
             asking for the user's explicit approval (though the user always
             has the option to review these permissions before installing). </td></tr>
<tr><td><code>dangerous</code></td><td>1</td><td> A higher-risk permission that would give a requesting application
             access to private user data or control over the device that can
             negatively impact the user.  Because this type of permission
             introduces potential risk, the system may not automatically
             grant it to the requesting application.  For example, any dangerous
             permissions requested by an application may be displayed to the
             user and require confirmation before proceeding, or some other
             approach may be taken to avoid the user automatically allowing
             the use of such facilities.  </td></tr>
<tr><td><code>signature</code></td><td>2</td><td> A permission that the system is to grant only if the requesting
             application is signed with the same certificate as the application
             that declared the permission. If the certificates match, the system
             automatically grants the permission without notifying the user or
             asking for the user's explicit approval. </td></tr>
<tr><td><code>signatureOrSystem</code></td><td>3</td><td> A permission that the system is to grant only to packages in the
             Android system image <em>or</em> that are signed with the same
             certificates. Please avoid using this option, as the
             signature protection level should be sufficient for most needs and
             works regardless of exactly where applications are installed.  This
             permission is used for certain special situations where multiple
             vendors have applications built in to a system image which need
             to share specific features explicitly because they are being built
             together. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#protectionLevel}.
          @attr name android:protectionLevel
        */
        public static final int AndroidManifestPermission_protectionLevel = 3;
        /**  The <code>permission-group</code> tag declares a logical grouping of
         related permissions.
         
         <p>Note that this tag does not declare a permission itself, only
         a namespace in which further permissions can be placed.  See
         the {@link #AndroidManifestPermission &lt;permission&gt;} tag for
         more information.
         
         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestPermissionGroup_description android:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermissionGroup_icon android:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermissionGroup_label android:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermissionGroup_name android:name}</code></td><td> Required public name of the permission group, permissions will use
        to specify the group they are in.</td></tr>
           </table>
           @see #AndroidManifestPermissionGroup_description
           @see #AndroidManifestPermissionGroup_icon
           @see #AndroidManifestPermissionGroup_label
           @see #AndroidManifestPermissionGroup_name
         */
        public static final int[] AndroidManifestPermissionGroup = {
            0x01010001, 0x01010002, 0x01010003, 0x01010020
        };
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#description}.
          @attr name android:description
        */
        public static final int AndroidManifestPermissionGroup_description = 3;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int AndroidManifestPermissionGroup_icon = 1;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#label}.
          @attr name android:label
        */
        public static final int AndroidManifestPermissionGroup_label = 0;
        /**
          <p>
          @attr description
           Required public name of the permission group, permissions will use
        to specify the group they are in.  This is a string using
        Java-style scoping to ensure it is unique.  The prefix will often
        be the same as our overall package name, for example
        "com.mycompany.android.myapp.SomePermission". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestPermissionGroup_name = 2;
        /**  The <code>permission-tree</code> tag declares the base of a tree of
         permission values: it declares that this package has ownership of
         the given permission name, as well as all names underneath it
         (separated by '.').  This allows you to use the
         {@link android.content.pm.PackageManager#addPermission
         PackageManager.addPermission()} method to dynamically add new
         permissions under this tree.
         
         <p>Note that this tag does not declare a permission itself, only
         a namespace in which further permissions can be placed.  See
         the {@link #AndroidManifestPermission &lt;permission&gt;} tag for
         more information.
         
         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestPermissionTree_icon android:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermissionTree_label android:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermissionTree_name android:name}</code></td><td> Required public name of the permission tree, which is the base name
        of all permissions under it.</td></tr>
           </table>
           @see #AndroidManifestPermissionTree_icon
           @see #AndroidManifestPermissionTree_label
           @see #AndroidManifestPermissionTree_name
         */
        public static final int[] AndroidManifestPermissionTree = {
            0x01010001, 0x01010002, 0x01010003
        };
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int AndroidManifestPermissionTree_icon = 1;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#label}.
          @attr name android:label
        */
        public static final int AndroidManifestPermissionTree_label = 0;
        /**
          <p>
          @attr description
           Required public name of the permission tree, which is the base name
        of all permissions under it.  This is a string using
        Java-style scoping to ensure it is unique.  The prefix will often
        be the same as our overall package name, for example
        "com.mycompany.android.myapp.SomePermission".  A permission tree name
        must have more than two segments in its path; that is,
        "com.me.foo" is okay, but not "com.me" or "com". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestPermissionTree_name = 2;
        /**  Private tag to declare system protected broadcast actions.

         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestProtectedBroadcast_name android:name}</code></td><td> A unique name for the given item.</td></tr>
           </table>
           @see #AndroidManifestProtectedBroadcast_name
         */
        public static final int[] AndroidManifestProtectedBroadcast = {
            0x01010003
        };
        /**
          <p>
          @attr description
           A unique name for the given item.  This must use a Java-style naming
         convention to ensure the name is unique, for example
         "com.mycompany.MyName". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestProtectedBroadcast_name = 0;
        /**  The <code>provider</code> tag declares a
         {@link android.content.ContentProvider} class that is available
         as part of the package's application components, supplying structured
         access to data managed by the application.
         
         <p>This appears as a child tag of the
         {@link #AndroidManifestApplication application} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestProvider_authorities android:authorities}</code></td><td> Specify the authorities under which this content provider can be
         found.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_description android:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_enabled android:enabled}</code></td><td> Specify whether this provider is enabled or not (that is, can be instantiated by the system).</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_exported android:exported}</code></td><td> Flag indicating whether the given application component is available
         to other applications.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_grantUriPermissions android:grantUriPermissions}</code></td><td> If true, the {@link android.content.Context#grantUriPermission
         Context.grantUriPermission} or corresponding Intent flags can
         be used to allow others to access specific URIs in the content
         provider, even if they do not have an explicit read or write
         permission.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_icon android:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_initOrder android:initOrder}</code></td><td> Specify the order in which content providers hosted by a process
         are instantiated when that process is created.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_label android:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_multiprocess android:multiprocess}</code></td><td> Specify whether a component is allowed to have multiple instances
         of itself running in different processes.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_name android:name}</code></td><td> Required name of the class implementing the provider, deriving from
            {@link android.content.ContentProvider}.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_permission android:permission}</code></td><td> Specify a permission that a client is required to have in order to
    	 use the associated object.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_process android:process}</code></td><td> Specify a specific process that the associated code is to run in.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_readPermission android:readPermission}</code></td><td> A specific {@link android.R.attr#permission} name for read-only
         access to a {@link android.content.ContentProvider}.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_syncable android:syncable}</code></td><td> Flag indicating whether this content provider would like to
         participate in data synchronization.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_writePermission android:writePermission}</code></td><td> A specific {@link android.R.attr#permission} name for write
         access to a {@link android.content.ContentProvider}.</td></tr>
           </table>
           @see #AndroidManifestProvider_authorities
           @see #AndroidManifestProvider_description
           @see #AndroidManifestProvider_enabled
           @see #AndroidManifestProvider_exported
           @see #AndroidManifestProvider_grantUriPermissions
           @see #AndroidManifestProvider_icon
           @see #AndroidManifestProvider_initOrder
           @see #AndroidManifestProvider_label
           @see #AndroidManifestProvider_multiprocess
           @see #AndroidManifestProvider_name
           @see #AndroidManifestProvider_permission
           @see #AndroidManifestProvider_process
           @see #AndroidManifestProvider_readPermission
           @see #AndroidManifestProvider_syncable
           @see #AndroidManifestProvider_writePermission
         */
        public static final int[] AndroidManifestProvider = {
            0x01010001, 0x01010002, 0x01010003, 0x01010006,
            0x01010007, 0x01010008, 0x0101000e, 0x01010010,
            0x01010011, 0x01010013, 0x01010018, 0x01010019,
            0x0101001a, 0x0101001b, 0x01010020
        };
        /**
          <p>
          @attr description
           Specify the authorities under which this content provider can be
         found.  Multiple authorities may be supplied by separating them
         with a semicolon.  Authority names should use a Java-style naming
         convention (such as <code>com.google.provider.MyProvider</code>)
         in order to avoid conflicts.  Typically this name is the same
         as the class implementation describing the provider's data structure. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#authorities}.
          @attr name android:authorities
        */
        public static final int AndroidManifestProvider_authorities = 10;
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#description}.
          @attr name android:description
        */
        public static final int AndroidManifestProvider_description = 14;
        /**
          <p>
          @attr description
           Specify whether this provider is enabled or not (that is, can be instantiated by the system).
             It can also be specified for an application as a whole, in which case a value of "false"
             will override any component specific values (a value of "true" will not override the
             component specific values). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#enabled}.
          @attr name android:enabled
        */
        public static final int AndroidManifestProvider_enabled = 6;
        /**
          <p>
          @attr description
           Flag indicating whether the given application component is available
         to other applications.  If false, it can only be accessed by
         applications with its same user id (which usually means only by
         code in its own package).  If true, it can be invoked by external
         entities, though which ones can do so may be controlled through
         permissions.  The default value is false for activity, receiver,
         and service components that do not specify any intent filters; it
         is true for activity, receiver, and service components that do
         have intent filters (implying they expect to be invoked by others
         who do not know their particular component name) and for all
         content providers. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#exported}.
          @attr name android:exported
        */
        public static final int AndroidManifestProvider_exported = 7;
        /**
          <p>
          @attr description
           If true, the {@link android.content.Context#grantUriPermission
         Context.grantUriPermission} or corresponding Intent flags can
         be used to allow others to access specific URIs in the content
         provider, even if they do not have an explicit read or write
         permission.  If you are supporting this feature, you must be
         sure to call {@link android.content.Context#revokeUriPermission
         Context.revokeUriPermission} when URIs are deleted from your
         provider.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#grantUriPermissions}.
          @attr name android:grantUriPermissions
        */
        public static final int AndroidManifestProvider_grantUriPermissions = 13;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int AndroidManifestProvider_icon = 1;
        /**
          <p>
          @attr description
           Specify the order in which content providers hosted by a process
         are instantiated when that process is created.  Not needed unless
         you have providers with dependencies between each other, to make
         sure that they are created in the order needed by those dependencies.
         The value is a simple integer, with higher numbers being
         initialized first. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#initOrder}.
          @attr name android:initOrder
        */
        public static final int AndroidManifestProvider_initOrder = 12;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#label}.
          @attr name android:label
        */
        public static final int AndroidManifestProvider_label = 0;
        /**
          <p>
          @attr description
           Specify whether a component is allowed to have multiple instances
         of itself running in different processes.  Use with the activity
         and provider tags.
    
         <p>Normally the system will ensure that all instances of a particular
         component are only running in a single process.  You can use this
         attribute to disable that behavior, allowing the system to create
         instances wherever they are used (provided permissions allow it).
         This is most often used with content providers, so that instances
         of a provider can be created in each client process, allowing them
         to be used without performing IPC.  


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#multiprocess}.
          @attr name android:multiprocess
        */
        public static final int AndroidManifestProvider_multiprocess = 9;
        /**
          <p>
          @attr description
           Required name of the class implementing the provider, deriving from
            {@link android.content.ContentProvider}.  This is a fully
            qualified class name (for example, com.mycompany.myapp.MyProvider); as a
            short-hand if the first character of the class
            is a period then it is appended to your package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestProvider_name = 2;
        /**
          <p>
          @attr description
           Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#permission}.
          @attr name android:permission
        */
        public static final int AndroidManifestProvider_permission = 3;
        /**
          <p>
          @attr description
           Specify a specific process that the associated code is to run in.
         Use with the application tag (to supply a default process for all
         application components), or with the activity, receiver, service,
         or provider tag (to supply a specific icon for that component).
    
         <p>Application components are normally run in a single process that
         is created for the entire application.  You can use this tag to modify
         where they run.  If the process name begins with a ':' character,
         a new process private to that application will be created when needed
         to run that component (allowing you to spread your application across
         multiple processes).  If the process name begins with a lower-case
         character, the component will be run in a global process of that name,
         provided that you have permission to do so, allowing multiple
         applications to share one process to reduce resource usage. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#process}.
          @attr name android:process
        */
        public static final int AndroidManifestProvider_process = 8;
        /**
          <p>
          @attr description
           A specific {@link android.R.attr#permission} name for read-only
         access to a {@link android.content.ContentProvider}.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#readPermission}.
          @attr name android:readPermission
        */
        public static final int AndroidManifestProvider_readPermission = 4;
        /**
          <p>
          @attr description
           Flag indicating whether this content provider would like to
         participate in data synchronization. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#syncable}.
          @attr name android:syncable
        */
        public static final int AndroidManifestProvider_syncable = 11;
        /**
          <p>
          @attr description
           A specific {@link android.R.attr#permission} name for write
         access to a {@link android.content.ContentProvider}.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#writePermission}.
          @attr name android:writePermission
        */
        public static final int AndroidManifestProvider_writePermission = 5;
        /**  The <code>receiver</code> tag declares an
         {@link android.content.BroadcastReceiver} class that is available
         as part of the package's application components, allowing the
         application to receive actions or data broadcast by other
         applications even if it is not currently running.
         
         <p>Zero or more {@link #AndroidManifestIntentFilter intent-filter}
         tags can be included inside of a receiver, to specify the Intents
         it will receive.  If none are specified, the receiver will only
         be run when an Intent is broadcast that is directed at its specific
         class name.  The receiver tag appears as a child tag of the
         {@link #AndroidManifestApplication application} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_description android:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_enabled android:enabled}</code></td><td> Specify whether the receiver is enabled or not (that is, can be instantiated by the system).</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_exported android:exported}</code></td><td> Flag indicating whether the given application component is available
         to other applications.</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_icon android:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_label android:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_name android:name}</code></td><td> Required name of the class implementing the receiver, deriving from
            {@link android.content.BroadcastReceiver}.</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_permission android:permission}</code></td><td> Specify a permission that a client is required to have in order to
    	 use the associated object.</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_process android:process}</code></td><td> Specify a specific process that the associated code is to run in.</td></tr>
           </table>
           @see #AndroidManifestReceiver_description
           @see #AndroidManifestReceiver_enabled
           @see #AndroidManifestReceiver_exported
           @see #AndroidManifestReceiver_icon
           @see #AndroidManifestReceiver_label
           @see #AndroidManifestReceiver_name
           @see #AndroidManifestReceiver_permission
           @see #AndroidManifestReceiver_process
         */
        public static final int[] AndroidManifestReceiver = {
            0x01010001, 0x01010002, 0x01010003, 0x01010006,
            0x0101000e, 0x01010010, 0x01010011, 0x01010020
        };
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#description}.
          @attr name android:description
        */
        public static final int AndroidManifestReceiver_description = 7;
        /**
          <p>
          @attr description
           Specify whether the receiver is enabled or not (that is, can be instantiated by the system).
             It can also be specified for an application as a whole, in which case a value of "false"
             will override any component specific values (a value of "true" will not override the
             component specific values). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#enabled}.
          @attr name android:enabled
        */
        public static final int AndroidManifestReceiver_enabled = 4;
        /**
          <p>
          @attr description
           Flag indicating whether the given application component is available
         to other applications.  If false, it can only be accessed by
         applications with its same user id (which usually means only by
         code in its own package).  If true, it can be invoked by external
         entities, though which ones can do so may be controlled through
         permissions.  The default value is false for activity, receiver,
         and service components that do not specify any intent filters; it
         is true for activity, receiver, and service components that do
         have intent filters (implying they expect to be invoked by others
         who do not know their particular component name) and for all
         content providers. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#exported}.
          @attr name android:exported
        */
        public static final int AndroidManifestReceiver_exported = 5;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int AndroidManifestReceiver_icon = 1;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#label}.
          @attr name android:label
        */
        public static final int AndroidManifestReceiver_label = 0;
        /**
          <p>
          @attr description
           Required name of the class implementing the receiver, deriving from
            {@link android.content.BroadcastReceiver}.  This is a fully
            qualified class name (for example, com.mycompany.myapp.MyReceiver); as a
            short-hand if the first character of the class
            is a period then it is appended to your package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestReceiver_name = 2;
        /**
          <p>
          @attr description
           Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#permission}.
          @attr name android:permission
        */
        public static final int AndroidManifestReceiver_permission = 3;
        /**
          <p>
          @attr description
           Specify a specific process that the associated code is to run in.
         Use with the application tag (to supply a default process for all
         application components), or with the activity, receiver, service,
         or provider tag (to supply a specific icon for that component).
    
         <p>Application components are normally run in a single process that
         is created for the entire application.  You can use this tag to modify
         where they run.  If the process name begins with a ':' character,
         a new process private to that application will be created when needed
         to run that component (allowing you to spread your application across
         multiple processes).  If the process name begins with a lower-case
         character, the component will be run in a global process of that name,
         provided that you have permission to do so, allowing multiple
         applications to share one process to reduce resource usage. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#process}.
          @attr name android:process
        */
        public static final int AndroidManifestReceiver_process = 6;
        /**  The <code>service</code> tag declares a
         {@link android.app.Service} class that is available
         as part of the package's application components, implementing
         long-running background operations or a rich communication API
         that can be called by other packages.
         
         <p>Zero or more {@link #AndroidManifestIntentFilter intent-filter}
         tags can be included inside of a service, to specify the Intents
         that can connect with it.  If none are specified, the service can
         only be accessed by direct specification of its class name.
         The service tag appears as a child tag of the
         {@link #AndroidManifestApplication application} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestService_description android:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_enabled android:enabled}</code></td><td> Specify whether the service is enabled or not (that is, can be instantiated by the system).</td></tr>
           <tr><td><code>{@link #AndroidManifestService_exported android:exported}</code></td><td> Flag indicating whether the given application component is available
         to other applications.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_icon android:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_label android:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_name android:name}</code></td><td> Required name of the class implementing the service, deriving from
            {@link android.app.Service}.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_permission android:permission}</code></td><td> Specify a permission that a client is required to have in order to
    	 use the associated object.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_process android:process}</code></td><td> Specify a specific process that the associated code is to run in.</td></tr>
           </table>
           @see #AndroidManifestService_description
           @see #AndroidManifestService_enabled
           @see #AndroidManifestService_exported
           @see #AndroidManifestService_icon
           @see #AndroidManifestService_label
           @see #AndroidManifestService_name
           @see #AndroidManifestService_permission
           @see #AndroidManifestService_process
         */
        public static final int[] AndroidManifestService = {
            0x01010001, 0x01010002, 0x01010003, 0x01010006,
            0x0101000e, 0x01010010, 0x01010011, 0x01010020
        };
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#description}.
          @attr name android:description
        */
        public static final int AndroidManifestService_description = 7;
        /**
          <p>
          @attr description
           Specify whether the service is enabled or not (that is, can be instantiated by the system).
             It can also be specified for an application as a whole, in which case a value of "false"
             will override any component specific values (a value of "true" will not override the
             component specific values). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#enabled}.
          @attr name android:enabled
        */
        public static final int AndroidManifestService_enabled = 4;
        /**
          <p>
          @attr description
           Flag indicating whether the given application component is available
         to other applications.  If false, it can only be accessed by
         applications with its same user id (which usually means only by
         code in its own package).  If true, it can be invoked by external
         entities, though which ones can do so may be controlled through
         permissions.  The default value is false for activity, receiver,
         and service components that do not specify any intent filters; it
         is true for activity, receiver, and service components that do
         have intent filters (implying they expect to be invoked by others
         who do not know their particular component name) and for all
         content providers. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#exported}.
          @attr name android:exported
        */
        public static final int AndroidManifestService_exported = 5;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int AndroidManifestService_icon = 1;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#label}.
          @attr name android:label
        */
        public static final int AndroidManifestService_label = 0;
        /**
          <p>
          @attr description
           Required name of the class implementing the service, deriving from
            {@link android.app.Service}.  This is a fully
            qualified class name (for example, com.mycompany.myapp.MyService); as a
            short-hand if the first character of the class
            is a period then it is appended to your package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestService_name = 2;
        /**
          <p>
          @attr description
           Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#permission}.
          @attr name android:permission
        */
        public static final int AndroidManifestService_permission = 3;
        /**
          <p>
          @attr description
           Specify a specific process that the associated code is to run in.
         Use with the application tag (to supply a default process for all
         application components), or with the activity, receiver, service,
         or provider tag (to supply a specific icon for that component).
    
         <p>Application components are normally run in a single process that
         is created for the entire application.  You can use this tag to modify
         where they run.  If the process name begins with a ':' character,
         a new process private to that application will be created when needed
         to run that component (allowing you to spread your application across
         multiple processes).  If the process name begins with a lower-case
         character, the component will be run in a global process of that name,
         provided that you have permission to do so, allowing multiple
         applications to share one process to reduce resource usage. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#process}.
          @attr name android:process
        */
        public static final int AndroidManifestService_process = 6;
        /**  The <code>supports-screens</code> specifies the screen dimensions an
         application supports.  By default a modern application supports all
         screen sizes and must explicitly disable certain screen sizes here;
         older applications are assumed to only support the traditional normal
         (HVGA) screen size.  Note that screen size is a separate axis from
         density, and is determined as the available pixels to an application
         after density scaling has been applied.
         
         <p>This appears as a child tag of the
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestSupportsScreens_anyDensity android:anyDensity}</code></td><td> Indicates whether the application can accommodate any screen
             density.</td></tr>
           <tr><td><code>{@link #AndroidManifestSupportsScreens_largeScreens android:largeScreens}</code></td><td> Indicates whether the application supports larger screen form-factors.</td></tr>
           <tr><td><code>{@link #AndroidManifestSupportsScreens_normalScreens android:normalScreens}</code></td><td> Indicates whether an application supports the normal screen
             form-factors.</td></tr>
           <tr><td><code>{@link #AndroidManifestSupportsScreens_resizeable android:resizeable}</code></td><td> Indicates whether the application can resize itself to newer
             screen sizes.</td></tr>
           <tr><td><code>{@link #AndroidManifestSupportsScreens_smallScreens android:smallScreens}</code></td><td> Indicates whether the application supports smaller screen form-factors.</td></tr>
           <tr><td><code>{@link #AndroidManifestSupportsScreens_xlargeScreens android:xlargeScreens}</code></td><td> Indicates whether the application supports extra large screen form-factors.</td></tr>
           </table>
           @see #AndroidManifestSupportsScreens_anyDensity
           @see #AndroidManifestSupportsScreens_largeScreens
           @see #AndroidManifestSupportsScreens_normalScreens
           @see #AndroidManifestSupportsScreens_resizeable
           @see #AndroidManifestSupportsScreens_smallScreens
           @see #AndroidManifestSupportsScreens_xlargeScreens
         */
        public static final int[] AndroidManifestSupportsScreens = {
            0x0101026c, 0x01010284, 0x01010285, 0x01010286,
            0x0101028d, 0x010102bf
        };
        /**
          <p>
          @attr description
           Indicates whether the application can accommodate any screen
             density.  Older applications are assumed to not be able to,
             new ones able to.  You can explicitly supply your abilities
             here. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#anyDensity}.
          @attr name android:anyDensity
        */
        public static final int AndroidManifestSupportsScreens_anyDensity = 0;
        /**
          <p>
          @attr description
           Indicates whether the application supports larger screen form-factors.
             A large screen is defined as a screen that is significantly larger
             than a normal phone screen, and thus may require some special care
             on the application's part to make good use of it.  An example would
             be a VGA <em>normal density</em> screen, though even larger screens
             are certainly possible.  An application that does not support
             large screens will be placed as a postage stamp on such a
             screen, so that it retains the dimensions it was originally
             designed for. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#largeScreens}.
          @attr name android:largeScreens
        */
        public static final int AndroidManifestSupportsScreens_largeScreens = 3;
        /**
          <p>
          @attr description
           Indicates whether an application supports the normal screen
             form-factors.  Traditionally this is an HVGA normal density
             screen, but WQVGA low density and WVGA high density are also
             considered to be normal.  This attribute is true by default,
             and applications currently should leave it that way. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#normalScreens}.
          @attr name android:normalScreens
        */
        public static final int AndroidManifestSupportsScreens_normalScreens = 2;
        /**
          <p>
          @attr description
           Indicates whether the application can resize itself to newer
             screen sizes.  This is mostly used to distinguish between old
             applications that may not be compatible with newly introduced
             screen sizes and newer applications that should be; it will be
             set for you automatically based on whether you are targeting
             a newer platform that supports more screens. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#resizeable}.
          @attr name android:resizeable
        */
        public static final int AndroidManifestSupportsScreens_resizeable = 4;
        /**
          <p>
          @attr description
           Indicates whether the application supports smaller screen form-factors.
             A small screen is defined as one with a smaller aspect ratio than
             the traditional HVGA screen; that is, for a portrait screen, less
             tall than an HVGA screen.  In practice, this means a QVGA low
             density or VGA high density screen.  An application that does
             not support small screens <em>will not be available</em> for
             small screen devices, since there is little the platform can do
             to make such an application work on a smaller screen. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#smallScreens}.
          @attr name android:smallScreens
        */
        public static final int AndroidManifestSupportsScreens_smallScreens = 1;
        /**
          <p>
          @attr description
           Indicates whether the application supports extra large screen form-factors. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#xlargeScreens}.
          @attr name android:xlargeScreens
        */
        public static final int AndroidManifestSupportsScreens_xlargeScreens = 5;
        /**  The <code>uses-configuration</code> tag specifies
         a specific hardware configuration value used by the application.
         For example an application might specify that it requires
         a physical keyboard or a particular navigation method like
         trackball. Multiple such attribute values can be specified by the
         application.

         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestUsesConfiguration_reqFiveWayNav android:reqFiveWayNav}</code></td><td> Application's requirement for five way navigation </td></tr>
           <tr><td><code>{@link #AndroidManifestUsesConfiguration_reqHardKeyboard android:reqHardKeyboard}</code></td><td> Application's requirement for a hard keyboard </td></tr>
           <tr><td><code>{@link #AndroidManifestUsesConfiguration_reqKeyboardType android:reqKeyboardType}</code></td><td> The input method preferred by an application.</td></tr>
           <tr><td><code>{@link #AndroidManifestUsesConfiguration_reqNavigation android:reqNavigation}</code></td><td> The navigation device preferred by an application.</td></tr>
           <tr><td><code>{@link #AndroidManifestUsesConfiguration_reqTouchScreen android:reqTouchScreen}</code></td><td> The type of touch screen used by an application.</td></tr>
           </table>
           @see #AndroidManifestUsesConfiguration_reqFiveWayNav
           @see #AndroidManifestUsesConfiguration_reqHardKeyboard
           @see #AndroidManifestUsesConfiguration_reqKeyboardType
           @see #AndroidManifestUsesConfiguration_reqNavigation
           @see #AndroidManifestUsesConfiguration_reqTouchScreen
         */
        public static final int[] AndroidManifestUsesConfiguration = {
            0x01010227, 0x01010228, 0x01010229, 0x0101022a,
            0x01010232
        };
        /**
          <p>
          @attr description
           Application's requirement for five way navigation 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#reqFiveWayNav}.
          @attr name android:reqFiveWayNav
        */
        public static final int AndroidManifestUsesConfiguration_reqFiveWayNav = 4;
        /**
          <p>
          @attr description
           Application's requirement for a hard keyboard 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#reqHardKeyboard}.
          @attr name android:reqHardKeyboard
        */
        public static final int AndroidManifestUsesConfiguration_reqHardKeyboard = 2;
        /**
          <p>
          @attr description
           The input method preferred by an application. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>undefined</code></td><td>0</td><td></td></tr>
<tr><td><code>nokeys</code></td><td>1</td><td></td></tr>
<tr><td><code>qwerty</code></td><td>2</td><td></td></tr>
<tr><td><code>twelvekey</code></td><td>3</td><td></td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#reqKeyboardType}.
          @attr name android:reqKeyboardType
        */
        public static final int AndroidManifestUsesConfiguration_reqKeyboardType = 1;
        /**
          <p>
          @attr description
           The navigation device preferred by an application. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>undefined</code></td><td>0</td><td></td></tr>
<tr><td><code>nonav</code></td><td>1</td><td></td></tr>
<tr><td><code>dpad</code></td><td>2</td><td></td></tr>
<tr><td><code>trackball</code></td><td>3</td><td></td></tr>
<tr><td><code>wheel</code></td><td>4</td><td></td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#reqNavigation}.
          @attr name android:reqNavigation
        */
        public static final int AndroidManifestUsesConfiguration_reqNavigation = 3;
        /**
          <p>
          @attr description
           The type of touch screen used by an application. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>undefined</code></td><td>0</td><td></td></tr>
<tr><td><code>notouch</code></td><td>1</td><td></td></tr>
<tr><td><code>stylus</code></td><td>2</td><td></td></tr>
<tr><td><code>finger</code></td><td>3</td><td></td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#reqTouchScreen}.
          @attr name android:reqTouchScreen
        */
        public static final int AndroidManifestUsesConfiguration_reqTouchScreen = 0;
        /**  The <code>uses-feature</code> tag specifies
         a specific feature used by the application.
         For example an application might specify that it requires
         specific version of OpenGL. Multiple such attribute
         values can be specified by the application.

         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestUsesFeature_glEsVersion android:glEsVersion}</code></td><td> The GLES driver version number needed by an application.</td></tr>
           <tr><td><code>{@link #AndroidManifestUsesFeature_name android:name}</code></td><td>  The name of the feature that is being used.</td></tr>
           <tr><td><code>{@link #AndroidManifestUsesFeature_required android:required}</code></td><td>  Specify whether this feature is required for the application.</td></tr>
           </table>
           @see #AndroidManifestUsesFeature_glEsVersion
           @see #AndroidManifestUsesFeature_name
           @see #AndroidManifestUsesFeature_required
         */
        public static final int[] AndroidManifestUsesFeature = {
            0x01010003, 0x01010281, 0x0101028e
        };
        /**
          <p>
          @attr description
           The GLES driver version number needed by an application.
             The higher 16 bits represent the major number and the lower 16 bits
             represent the minor number. For example for GL 1.2 referring to
             0x00000102, the actual value should be set as 0x00010002. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#glEsVersion}.
          @attr name android:glEsVersion
        */
        public static final int AndroidManifestUsesFeature_glEsVersion = 1;
        /**
          <p>
          @attr description
            The name of the feature that is being used. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestUsesFeature_name = 0;
        /**
          <p>
          @attr description
            Specify whether this feature is required for the application.
              The default is true, meaning the application requires the
              feature, and does not want to be installed on devices that
              don't support it.  If you set this to false, then this will
              not impose a restriction on where the application can be
              installed. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#required}.
          @attr name android:required
        */
        public static final int AndroidManifestUsesFeature_required = 2;
        /**  The <code>uses-libraries</code> specifies a shared library that this
         package requires to be linked against.  Specifying this flag tells the
         system to include this library's code in your class loader.
         
         <p>This appears as a child tag of the
         {@link #AndroidManifestApplication application} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestUsesLibrary_name android:name}</code></td><td> Required name of the library you use.</td></tr>
           <tr><td><code>{@link #AndroidManifestUsesLibrary_required android:required}</code></td><td>  Specify whether this library is required for the application.</td></tr>
           </table>
           @see #AndroidManifestUsesLibrary_name
           @see #AndroidManifestUsesLibrary_required
         */
        public static final int[] AndroidManifestUsesLibrary = {
            0x01010003, 0x0101028e
        };
        /**
          <p>
          @attr description
           Required name of the library you use. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestUsesLibrary_name = 0;
        /**
          <p>
          @attr description
            Specify whether this library is required for the application.
              The default is true, meaning the application requires the
              library, and does not want to be installed on devices that
              don't support it.  If you set this to false, then this will
              allow the application to be installed even if the library
              doesn't exist, and you will need to check for its presence
              dynamically at runtime. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#required}.
          @attr name android:required
        */
        public static final int AndroidManifestUsesLibrary_required = 1;
        /**  The <code>uses-permission</code> tag requests a
         {@link #AndroidManifestPermission &lt;permission&gt;} that the containing
         package must be granted in order for it to operate correctly.
         See the <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions.  Also available is a
         {@link android.Manifest.permission list of permissions} included
         with the base platform.
         
         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestUsesPermission_name android:name}</code></td><td> Required name of the permission you use, as published with the
        corresponding name attribute of a
        {@link android.R.styleable#AndroidManifestPermission &lt;permission&gt;}
        tag; often this is one of the {@link android.Manifest.permission standard
        system permissions}.</td></tr>
           </table>
           @see #AndroidManifestUsesPermission_name
         */
        public static final int[] AndroidManifestUsesPermission = {
            0x01010003
        };
        /**
          <p>
          @attr description
           Required name of the permission you use, as published with the
        corresponding name attribute of a
        {@link android.R.styleable#AndroidManifestPermission &lt;permission&gt;}
        tag; often this is one of the {@link android.Manifest.permission standard
        system permissions}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int AndroidManifestUsesPermission_name = 0;
        /**  The <code>uses-sdk</code> tag describes the SDK features that the
         containing package must be running on to operate correctly.
         
         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestUsesSdk_maxSdkVersion android:maxSdkVersion}</code></td><td> This is the maximum SDK version number that an application works
             on.</td></tr>
           <tr><td><code>{@link #AndroidManifestUsesSdk_minSdkVersion android:minSdkVersion}</code></td><td> This is the minimum SDK version number that the application
             requires.</td></tr>
           <tr><td><code>{@link #AndroidManifestUsesSdk_targetSdkVersion android:targetSdkVersion}</code></td><td> This is the SDK version number that the application is targeting.</td></tr>
           </table>
           @see #AndroidManifestUsesSdk_maxSdkVersion
           @see #AndroidManifestUsesSdk_minSdkVersion
           @see #AndroidManifestUsesSdk_targetSdkVersion
         */
        public static final int[] AndroidManifestUsesSdk = {
            0x0101020c, 0x01010270, 0x01010271
        };
        /**
          <p>
          @attr description
           This is the maximum SDK version number that an application works
             on.  You can use this to ensure your application is filtered out
             of later versions of the platform when you know you have
             incompatibility with them. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#maxSdkVersion}.
          @attr name android:maxSdkVersion
        */
        public static final int AndroidManifestUsesSdk_maxSdkVersion = 2;
        /**
          <p>
          @attr description
           This is the minimum SDK version number that the application
             requires.  This number is an abstract integer, from the list
             in {@link android.os.Build.VERSION_CODES}  If
             not supplied, the application will work on any SDK.  This
             may also be string (such as "Donut") if the application was built
             against a development branch, in which case it will only work against
             the development builds. 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#minSdkVersion}.
          @attr name android:minSdkVersion
        */
        public static final int AndroidManifestUsesSdk_minSdkVersion = 0;
        /**
          <p>
          @attr description
           This is the SDK version number that the application is targeting.
             It is able to run on older versions (down to minSdkVersion), but
             was explicitly tested to work with the version specified here.
             Specifying this version allows the platform to disable compatibility
             code that are not required or enable newer features that are not
             available to older applications.  This may also be a string
             (such as "Donut") if this is built against a development
             branch, in which case minSdkVersion is also forced to be that
             string. 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#targetSdkVersion}.
          @attr name android:targetSdkVersion
        */
        public static final int AndroidManifestUsesSdk_targetSdkVersion = 1;
        /** Attributes that can be used with a AnimatedRotateDrawable.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnimatedRotateDrawable_drawable android:drawable}</code></td><td> Reference to a drawable resource to use for the frame.</td></tr>
           <tr><td><code>{@link #AnimatedRotateDrawable_pivotX android:pivotX}</code></td><td></td></tr>
           <tr><td><code>{@link #AnimatedRotateDrawable_pivotY android:pivotY}</code></td><td></td></tr>
           <tr><td><code>{@link #AnimatedRotateDrawable_visible android:visible}</code></td><td> Provides initial visibility state of the drawable; the default
             value is false.</td></tr>
           </table>
           @see #AnimatedRotateDrawable_drawable
           @see #AnimatedRotateDrawable_pivotX
           @see #AnimatedRotateDrawable_pivotY
           @see #AnimatedRotateDrawable_visible
         */
        public static final int[] AnimatedRotateDrawable = {
            0x01010194, 0x01010199, 0x010101b5, 0x010101b6,
            0x010102d7, 0x010102d8
        };
        /**
          <p>
          @attr description
           Reference to a drawable resource to use for the frame.  If not
             given, the drawable must be defined by the first child tag. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#drawable}.
          @attr name android:drawable
        */
        public static final int AnimatedRotateDrawable_drawable = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#pivotX}
          attribute's value can be found in the {@link #AnimatedRotateDrawable} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:pivotX
        */
        public static final int AnimatedRotateDrawable_pivotX = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#pivotY}
          attribute's value can be found in the {@link #AnimatedRotateDrawable} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:pivotY
        */
        public static final int AnimatedRotateDrawable_pivotY = 3;
        /**
          <p>
          @attr description
           Provides initial visibility state of the drawable; the default
             value is false.  See
             {@link android.graphics.drawable.Drawable#setVisible}. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#visible}.
          @attr name android:visible
        */
        public static final int AnimatedRotateDrawable_visible = 0;
        /** Attributes that can be used with a Animation.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Animation_detachWallpaper android:detachWallpaper}</code></td><td> Special option for window animations: if this window is on top
             of a wallpaper, don't animate the wallpaper with it.</td></tr>
           <tr><td><code>{@link #Animation_duration android:duration}</code></td><td> Amount of time (in milliseconds) for the animation to run.</td></tr>
           <tr><td><code>{@link #Animation_fillAfter android:fillAfter}</code></td><td> When set to true, the animation transformation is applied after the animation is
             over.</td></tr>
           <tr><td><code>{@link #Animation_fillBefore android:fillBefore}</code></td><td> When set to true, the animation transformation is applied before the animation has
             started.</td></tr>
           <tr><td><code>{@link #Animation_fillEnabled android:fillEnabled}</code></td><td> When set to true, fillAfter is taken into account.</td></tr>
           <tr><td><code>{@link #Animation_interpolator android:interpolator}</code></td><td> Defines the interpolator used to smooth the animation movement in time.</td></tr>
           <tr><td><code>{@link #Animation_repeatCount android:repeatCount}</code></td><td> Defines how many times the animation should repeat.</td></tr>
           <tr><td><code>{@link #Animation_repeatMode android:repeatMode}</code></td><td> Defines the animation behavior when it reaches the end and the repeat count is
             greater than 0 or infinite.</td></tr>
           <tr><td><code>{@link #Animation_startOffset android:startOffset}</code></td><td> Delay in milliseconds before the animation runs, once start time is reached.</td></tr>
           <tr><td><code>{@link #Animation_zAdjustment android:zAdjustment}</code></td><td> Allows for an adjustment of the Z ordering of the content being
             animated for the duration of the animation.</td></tr>
           </table>
           @see #Animation_detachWallpaper
           @see #Animation_duration
           @see #Animation_fillAfter
           @see #Animation_fillBefore
           @see #Animation_fillEnabled
           @see #Animation_interpolator
           @see #Animation_repeatCount
           @see #Animation_repeatMode
           @see #Animation_startOffset
           @see #Animation_zAdjustment
         */
        public static final int[] Animation = {
            0x01010141, 0x01010198, 0x010101bc, 0x010101bd,
            0x010101be, 0x010101bf, 0x010101c0, 0x010101c1,
            0x0101024f, 0x010102a6
        };
        /**
          <p>
          @attr description
           Special option for window animations: if this window is on top
             of a wallpaper, don't animate the wallpaper with it. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#detachWallpaper}.
          @attr name android:detachWallpaper
        */
        public static final int Animation_detachWallpaper = 9;
        /**
          <p>
          @attr description
           Amount of time (in milliseconds) for the animation to run. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#duration}.
          @attr name android:duration
        */
        public static final int Animation_duration = 1;
        /**
          <p>
          @attr description
           When set to true, the animation transformation is applied after the animation is
             over. The default value is false. If fillEnabled is not set to true and the animation
             is not set on a View, fillAfter is assumed to be true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#fillAfter}.
          @attr name android:fillAfter
        */
        public static final int Animation_fillAfter = 3;
        /**
          <p>
          @attr description
           When set to true, the animation transformation is applied before the animation has
             started. The default value is true. If fillEnabled is not set to true, fillBefore
             is assumed to be true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#fillBefore}.
          @attr name android:fillBefore
        */
        public static final int Animation_fillBefore = 2;
        /**
          <p>
          @attr description
           When set to true, fillAfter is taken into account. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#fillEnabled}.
          @attr name android:fillEnabled
        */
        public static final int Animation_fillEnabled = 8;
        /**
          <p>
          @attr description
           Defines the interpolator used to smooth the animation movement in time. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#interpolator}.
          @attr name android:interpolator
        */
        public static final int Animation_interpolator = 0;
        /**
          <p>
          @attr description
           Defines how many times the animation should repeat. The default value is 0. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>infinite</code></td><td>-1</td><td></td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#repeatCount}.
          @attr name android:repeatCount
        */
        public static final int Animation_repeatCount = 5;
        /**
          <p>
          @attr description
           Defines the animation behavior when it reaches the end and the repeat count is
             greater than 0 or infinite. The default value is restart. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>restart</code></td><td>1</td><td> The animation starts again from the beginning. </td></tr>
<tr><td><code>reverse</code></td><td>2</td><td> The animation plays backward. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#repeatMode}.
          @attr name android:repeatMode
        */
        public static final int Animation_repeatMode = 6;
        /**
          <p>
          @attr description
           Delay in milliseconds before the animation runs, once start time is reached. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#startOffset}.
          @attr name android:startOffset
        */
        public static final int Animation_startOffset = 4;
        /**
          <p>
          @attr description
           Allows for an adjustment of the Z ordering of the content being
             animated for the duration of the animation.  The default value is normal. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> The content being animated be kept in its current Z order. </td></tr>
<tr><td><code>top</code></td><td>1</td><td> The content being animated is forced on top of all other
                 content for the duration of the animation. </td></tr>
<tr><td><code>bottom</code></td><td>-1</td><td> The content being animated is forced under all other
                 content for the duration of the animation. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#zAdjustment}.
          @attr name android:zAdjustment
        */
        public static final int Animation_zAdjustment = 7;
        /** Attributes that can be used with a AnimationDrawable.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnimationDrawable_oneshot android:oneshot}</code></td><td> If true, the animation will only run a single time and then
             stop.</td></tr>
           <tr><td><code>{@link #AnimationDrawable_variablePadding android:variablePadding}</code></td><td> If true, allows the drawable's padding to change based on the
             current state that is selected.</td></tr>
           <tr><td><code>{@link #AnimationDrawable_visible android:visible}</code></td><td> Provides initial visibility state of the drawable; the default
             value is false.</td></tr>
           </table>
           @see #AnimationDrawable_oneshot
           @see #AnimationDrawable_variablePadding
           @see #AnimationDrawable_visible
         */
        public static final int[] AnimationDrawable = {
            0x01010194, 0x01010195, 0x01010197
        };
        /**
          <p>
          @attr description
           If true, the animation will only run a single time and then
             stop.  If false (the default), it will continually run,
             restarting at the first frame after the last has finished. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#oneshot}.
          @attr name android:oneshot
        */
        public static final int AnimationDrawable_oneshot = 2;
        /**
          <p>
          @attr description
           If true, allows the drawable's padding to change based on the
             current state that is selected.  If false, the padding will
             stay the same (based on the maximum padding of all the states).
             Enabling this feature requires that the owner of the drawable
             deal with performing layout when the state changes, which is
             often not supported. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#variablePadding}.
          @attr name android:variablePadding
        */
        public static final int AnimationDrawable_variablePadding = 1;
        /**
          <p>
          @attr description
           Provides initial visibility state of the drawable; the default
             value is false.  See
             {@link android.graphics.drawable.Drawable#setVisible}. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#visible}.
          @attr name android:visible
        */
        public static final int AnimationDrawable_visible = 0;
        /** Attributes that can be used with a AnimationDrawableItem.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnimationDrawableItem_drawable android:drawable}</code></td><td> Reference to a drawable resource to use for the frame.</td></tr>
           <tr><td><code>{@link #AnimationDrawableItem_duration android:duration}</code></td><td> Amount of time (in milliseconds) to display this frame.</td></tr>
           </table>
           @see #AnimationDrawableItem_drawable
           @see #AnimationDrawableItem_duration
         */
        public static final int[] AnimationDrawableItem = {
            0x01010198, 0x01010199
        };
        /**
          <p>
          @attr description
           Reference to a drawable resource to use for the frame.  If not
             given, the drawable must be defined by the first child tag. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#drawable}.
          @attr name android:drawable
        */
        public static final int AnimationDrawableItem_drawable = 1;
        /**
          <p>
          @attr description
           Amount of time (in milliseconds) to display this frame. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#duration}.
          @attr name android:duration
        */
        public static final int AnimationDrawableItem_duration = 0;
        /** Attributes that can be used with a AnimationSet.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnimationSet_shareInterpolator android:shareInterpolator}</code></td><td></td></tr>
           </table>
           @see #AnimationSet_shareInterpolator
         */
        public static final int[] AnimationSet = {
            0x010101bb
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#shareInterpolator}
          attribute's value can be found in the {@link #AnimationSet} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shareInterpolator
        */
        public static final int AnimationSet_shareInterpolator = 0;
        /** Attributes that can be used with a AnticipateInterpolator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnticipateInterpolator_tension android:tension}</code></td><td> This is the amount of tension.</td></tr>
           </table>
           @see #AnticipateInterpolator_tension
         */
        public static final int[] AnticipateInterpolator = {
            0x0101026a
        };
        /**
          <p>
          @attr description
           This is the amount of tension. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#tension}.
          @attr name android:tension
        */
        public static final int AnticipateInterpolator_tension = 0;
        /** Attributes that can be used with a AnticipateOvershootInterpolator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnticipateOvershootInterpolator_extraTension android:extraTension}</code></td><td> This is the amount by which to multiply the tension.</td></tr>
           <tr><td><code>{@link #AnticipateOvershootInterpolator_tension android:tension}</code></td><td> This is the amount of tension.</td></tr>
           </table>
           @see #AnticipateOvershootInterpolator_extraTension
           @see #AnticipateOvershootInterpolator_tension
         */
        public static final int[] AnticipateOvershootInterpolator = {
            0x0101026a, 0x0101026b
        };
        /**
          <p>
          @attr description
           This is the amount by which to multiply the tension. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#extraTension}.
          @attr name android:extraTension
        */
        public static final int AnticipateOvershootInterpolator_extraTension = 1;
        /**
          <p>
          @attr description
           This is the amount of tension. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#tension}.
          @attr name android:tension
        */
        public static final int AnticipateOvershootInterpolator_tension = 0;
        /**  Use <code>appwidget-provider</code> as the root tag of the XML resource that
         describes an AppWidget provider.  See {@link android.appwidget android.appwidget}
         package for more info.
     
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_configure android:configure}</code></td><td> A class name in the AppWidget's package to be launched to configure.</td></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_initialLayout android:initialLayout}</code></td><td> A resource id of a layout.</td></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_minHeight android:minHeight}</code></td><td> Minimum height of the AppWidget.</td></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_minWidth android:minWidth}</code></td><td> Minimum width of the AppWidget.</td></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_updatePeriodMillis android:updatePeriodMillis}</code></td><td> Update period in milliseconds, or 0 if the AppWidget will update itself.</td></tr>
           </table>
           @see #AppWidgetProviderInfo_configure
           @see #AppWidgetProviderInfo_initialLayout
           @see #AppWidgetProviderInfo_minHeight
           @see #AppWidgetProviderInfo_minWidth
           @see #AppWidgetProviderInfo_updatePeriodMillis
         */
        public static final int[] AppWidgetProviderInfo = {
            0x0101013f, 0x01010140, 0x01010250, 0x01010251,
            0x0101025d
        };
        /**
          <p>
          @attr description
           A class name in the AppWidget's package to be launched to configure.
             If not supplied, then no activity will be launched. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#configure}.
          @attr name android:configure
        */
        public static final int AppWidgetProviderInfo_configure = 4;
        /**
          <p>
          @attr description
           A resource id of a layout. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#initialLayout}.
          @attr name android:initialLayout
        */
        public static final int AppWidgetProviderInfo_initialLayout = 3;
        /**
          <p>
          @attr description
           Minimum height of the AppWidget. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#minHeight}.
          @attr name android:minHeight
        */
        public static final int AppWidgetProviderInfo_minHeight = 1;
        /**
          <p>
          @attr description
           Minimum width of the AppWidget. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#minWidth}.
          @attr name android:minWidth
        */
        public static final int AppWidgetProviderInfo_minWidth = 0;
        /**
          <p>
          @attr description
           Update period in milliseconds, or 0 if the AppWidget will update itself. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#updatePeriodMillis}.
          @attr name android:updatePeriodMillis
        */
        public static final int AppWidgetProviderInfo_updatePeriodMillis = 2;
        /** Attributes that can be used with a AutoCompleteTextView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AutoCompleteTextView_completionHint android:completionHint}</code></td><td> Defines the hint displayed in the drop down menu.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_completionHintView android:completionHintView}</code></td><td> Defines the hint view displayed in the drop down menu.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_completionThreshold android:completionThreshold}</code></td><td> Defines the number of characters that the user must type before
         completion suggestions are displayed in a drop down menu.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_dropDownAnchor android:dropDownAnchor}</code></td><td> View to anchor the auto-complete dropdown to.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_dropDownHeight android:dropDownHeight}</code></td><td> Specifies the basic height of the dropdown.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td> Amount of pixels by which the drop down should be offset horizontally.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_dropDownSelector android:dropDownSelector}</code></td><td> Selector in a drop down list.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td> Amount of pixels by which the drop down should be offset vertically.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_dropDownWidth android:dropDownWidth}</code></td><td> Specifies the basic width of the dropdown.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_inputType android:inputType}</code></td><td> The type of data being placed in a text field, used to help an
         input method decide how to let the user enter text.</td></tr>
           </table>
           @see #AutoCompleteTextView_completionHint
           @see #AutoCompleteTextView_completionHintView
           @see #AutoCompleteTextView_completionThreshold
           @see #AutoCompleteTextView_dropDownAnchor
           @see #AutoCompleteTextView_dropDownHeight
           @see #AutoCompleteTextView_dropDownHorizontalOffset
           @see #AutoCompleteTextView_dropDownSelector
           @see #AutoCompleteTextView_dropDownVerticalOffset
           @see #AutoCompleteTextView_dropDownWidth
           @see #AutoCompleteTextView_inputType
         */
        public static final int[] AutoCompleteTextView = {
            0x01010172, 0x01010173, 0x01010174, 0x01010175,
            0x01010220, 0x01010262, 0x01010263, 0x01010283,
            0x010102ac, 0x010102ad
        };
        /**
          <p>
          @attr description
           Defines the hint displayed in the drop down menu. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#completionHint}.
          @attr name android:completionHint
        */
        public static final int AutoCompleteTextView_completionHint = 0;
        /**
          <p>
          @attr description
           Defines the hint view displayed in the drop down menu. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#completionHintView}.
          @attr name android:completionHintView
        */
        public static final int AutoCompleteTextView_completionHintView = 1;
        /**
          <p>
          @attr description
           Defines the number of characters that the user must type before
         completion suggestions are displayed in a drop down menu. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#completionThreshold}.
          @attr name android:completionThreshold
        */
        public static final int AutoCompleteTextView_completionThreshold = 2;
        /**
          <p>
          @attr description
           View to anchor the auto-complete dropdown to. If not specified, the text view itself
             is used. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dropDownAnchor}.
          @attr name android:dropDownAnchor
        */
        public static final int AutoCompleteTextView_dropDownAnchor = 6;
        /**
          <p>
          @attr description
           Specifies the basic height of the dropdown. Its value may
             be a dimension (such as "12dip") for a constant height,
             fill_parent or match_parent to fill the height of the
             screen, or wrap_content to match the height of
             the content of the drop down. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The dropdown should fit the height of the screen.
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The dropdown should fit the height of the screen.
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The dropdown should fit the height of the content. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dropDownHeight}.
          @attr name android:dropDownHeight
        */
        public static final int AutoCompleteTextView_dropDownHeight = 7;
        /**
          <p>
          @attr description
           Amount of pixels by which the drop down should be offset horizontally. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dropDownHorizontalOffset}.
          @attr name android:dropDownHorizontalOffset
        */
        public static final int AutoCompleteTextView_dropDownHorizontalOffset = 8;
        /**
          <p>
          @attr description
           Selector in a drop down list. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dropDownSelector}.
          @attr name android:dropDownSelector
        */
        public static final int AutoCompleteTextView_dropDownSelector = 3;
        /**
          <p>
          @attr description
           Amount of pixels by which the drop down should be offset vertically. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dropDownVerticalOffset}.
          @attr name android:dropDownVerticalOffset
        */
        public static final int AutoCompleteTextView_dropDownVerticalOffset = 9;
        /**
          <p>
          @attr description
           Specifies the basic width of the dropdown. Its value may
             be a dimension (such as "12dip") for a constant width,
             fill_parent or match_parent to match the width of the 
             screen, or wrap_content to match the width of
             the anchored view. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The dropdown should fill the width of the screen.
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The dropdown should fit the width of the screen.
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The dropdown should fit the width of its anchor. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dropDownWidth}.
          @attr name android:dropDownWidth
        */
        public static final int AutoCompleteTextView_dropDownWidth = 5;
        /**
          <p>
          @attr description
           The type of data being placed in a text field, used to help an
         input method decide how to let the user enter text.  The constants
         here correspond to those defined by
         {@link android.text.InputType}.  Generally you can select
         a single value, though some can be combined together as
         indicated.  Setting this attribute to anything besides
         <var>none</var> also implies that the text is editable. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> There is no content type.  The text is not editable. </td></tr>
<tr><td><code>text</code></td><td>0x00000001</td><td> Just plain old text.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_NORMAL}. </td></tr>
<tr><td><code>textCapCharacters</code></td><td>0x00001001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of all characters.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_CHARACTERS}. </td></tr>
<tr><td><code>textCapWords</code></td><td>0x00002001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every word.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_WORDS}. </td></tr>
<tr><td><code>textCapSentences</code></td><td>0x00004001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every sentence.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_SENTENCES}. </td></tr>
<tr><td><code>textAutoCorrect</code></td><td>0x00008001</td><td> Can be combined with <var>text</var> and its variations to
             request auto-correction of text being input.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_CORRECT}. </td></tr>
<tr><td><code>textAutoComplete</code></td><td>0x00010001</td><td> Can be combined with <var>text</var> and its variations to
             specify that this field will be doing its own auto-completion and
             talking with the input method appropriately.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_COMPLETE}. </td></tr>
<tr><td><code>textMultiLine</code></td><td>0x00020001</td><td> Can be combined with <var>text</var> and its variations to
             allow multiple lines of text in the field.  If this flag is not set,
             the text field will be constrained to a single line.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_MULTI_LINE}. </td></tr>
<tr><td><code>textImeMultiLine</code></td><td>0x00040001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that though the regular text view should not be multiple
             lines, the IME should provide multiple lines if it can.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_IME_MULTI_LINE}. </td></tr>
<tr><td><code>textNoSuggestions</code></td><td>0x00080001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that the IME should not show any
             dictionary-based word suggestions.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_NO_SUGGESTIONS}. </td></tr>
<tr><td><code>textUri</code></td><td>0x00000011</td><td> Text that will be used as a URI.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_URI}. </td></tr>
<tr><td><code>textEmailAddress</code></td><td>0x00000021</td><td> Text that will be used as an e-mail address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textEmailSubject</code></td><td>0x00000031</td><td> Text that is being supplied as the subject of an e-mail.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_SUBJECT}. </td></tr>
<tr><td><code>textShortMessage</code></td><td>0x00000041</td><td> Text that is the content of a short message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_SHORT_MESSAGE}. </td></tr>
<tr><td><code>textLongMessage</code></td><td>0x00000051</td><td> Text that is the content of a long message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_LONG_MESSAGE}. </td></tr>
<tr><td><code>textPersonName</code></td><td>0x00000061</td><td> Text that is the name of a person.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PERSON_NAME}. </td></tr>
<tr><td><code>textPostalAddress</code></td><td>0x00000071</td><td> Text that is being supplied as a postal mailing address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_POSTAL_ADDRESS}. </td></tr>
<tr><td><code>textPassword</code></td><td>0x00000081</td><td> Text that is a password.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>textVisiblePassword</code></td><td>0x00000091</td><td> Text that is a password that should be visible.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_VISIBLE_PASSWORD}. </td></tr>
<tr><td><code>textWebEditText</code></td><td>0x000000a1</td><td> Text that is being supplied as text in a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EDIT_TEXT}. </td></tr>
<tr><td><code>textFilter</code></td><td>0x000000b1</td><td> Text that is filtering some other data.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_FILTER}. </td></tr>
<tr><td><code>textPhonetic</code></td><td>0x000000c1</td><td> Text that is for phonetic pronunciation, such as a phonetic name
             field in a contact entry.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PHONETIC}. </td></tr>
<tr><td><code>number</code></td><td>0x00000002</td><td> A numeric only field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER}. </td></tr>
<tr><td><code>numberSigned</code></td><td>0x00001002</td><td> Can be combined with <var>number</var> and its other options to
             allow a signed number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_SIGNED}. </td></tr>
<tr><td><code>numberDecimal</code></td><td>0x00002002</td><td> Can be combined with <var>number</var> and its other options to
             allow a decimal (fractional) number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_DECIMAL}. </td></tr>
<tr><td><code>phone</code></td><td>0x00000003</td><td> For entering a phone number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_PHONE}. </td></tr>
<tr><td><code>datetime</code></td><td>0x00000004</td><td> For entering a date and time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_NORMAL}. </td></tr>
<tr><td><code>date</code></td><td>0x00000014</td><td> For entering a date.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_DATE}. </td></tr>
<tr><td><code>time</code></td><td>0x00000024</td><td> For entering a time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_TIME}. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#inputType}.
          @attr name android:inputType
        */
        public static final int AutoCompleteTextView_inputType = 4;
        /**  Drawable used to draw bitmaps. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #BitmapDrawable_antialias android:antialias}</code></td><td> Enables or disables antialiasing.</td></tr>
           <tr><td><code>{@link #BitmapDrawable_dither android:dither}</code></td><td> Enables or disables dithering of the bitmap if the bitmap does not have the
             same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
             an RGB 565 screen).</td></tr>
           <tr><td><code>{@link #BitmapDrawable_filter android:filter}</code></td><td> Enables or disables bitmap filtering.</td></tr>
           <tr><td><code>{@link #BitmapDrawable_gravity android:gravity}</code></td><td> Defines the gravity for the bitmap.</td></tr>
           <tr><td><code>{@link #BitmapDrawable_src android:src}</code></td><td> Identifier of the bitmap file.</td></tr>
           <tr><td><code>{@link #BitmapDrawable_tileMode android:tileMode}</code></td><td> Defines the tile mode.</td></tr>
           </table>
           @see #BitmapDrawable_antialias
           @see #BitmapDrawable_dither
           @see #BitmapDrawable_filter
           @see #BitmapDrawable_gravity
           @see #BitmapDrawable_src
           @see #BitmapDrawable_tileMode
         */
        public static final int[] BitmapDrawable = {
            0x010100af, 0x01010119, 0x0101011a, 0x0101011b,
            0x0101011c, 0x01010201
        };
        /**
          <p>
          @attr description
           Enables or disables antialiasing. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#antialias}.
          @attr name android:antialias
        */
        public static final int BitmapDrawable_antialias = 2;
        /**
          <p>
          @attr description
           Enables or disables dithering of the bitmap if the bitmap does not have the
             same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
             an RGB 565 screen). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dither}.
          @attr name android:dither
        */
        public static final int BitmapDrawable_dither = 4;
        /**
          <p>
          @attr description
           Enables or disables bitmap filtering. Filtering is used when the bitmap is
             shrunk or stretched to smooth its apperance. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#filter}.
          @attr name android:filter
        */
        public static final int BitmapDrawable_filter = 3;
        /**
          <p>
          @attr description
           Defines the gravity for the bitmap. The gravity indicates where to position
             the drawable in its container if the bitmap is smaller than the container. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#gravity}.
          @attr name android:gravity
        */
        public static final int BitmapDrawable_gravity = 0;
        /**
          <p>
          @attr description
           Identifier of the bitmap file. This attribute is mandatory. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#src}.
          @attr name android:src
        */
        public static final int BitmapDrawable_src = 1;
        /**
          <p>
          @attr description
           Defines the tile mode. When the tile mode is enabled, the bitmap is repeated.
             Gravity is ignored when the tile mode is enabled. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>-1</td><td> Do not tile the bitmap. This is the default value. </td></tr>
<tr><td><code>clamp</code></td><td>0</td><td> Replicates the edge color. </td></tr>
<tr><td><code>repeat</code></td><td>1</td><td> Repeats the bitmap in both direction. </td></tr>
<tr><td><code>mirror</code></td><td>2</td><td> Repeats the shader's image horizontally and vertically, alternating
                 mirror images so that adjacent images always seam. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#tileMode}.
          @attr name android:tileMode
        */
        public static final int BitmapDrawable_tileMode = 5;
        /** Attributes that can be used with a Button.
         */
        public static final int[] Button = {
            
        };
        /**  Base attributes available to CheckBoxPreference. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CheckBoxPreference_disableDependentsState android:disableDependentsState}</code></td><td> The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
           <tr><td><code>{@link #CheckBoxPreference_summaryOff android:summaryOff}</code></td><td> The summary for the Preference in a PreferenceActivity screen when the
             CheckBoxPreference is unchecked.</td></tr>
           <tr><td><code>{@link #CheckBoxPreference_summaryOn android:summaryOn}</code></td><td> The summary for the Preference in a PreferenceActivity screen when the
             CheckBoxPreference is checked.</td></tr>
           </table>
           @see #CheckBoxPreference_disableDependentsState
           @see #CheckBoxPreference_summaryOff
           @see #CheckBoxPreference_summaryOn
         */
        public static final int[] CheckBoxPreference = {
            0x010101ef, 0x010101f0, 0x010101f1
        };
        /**
          <p>
          @attr description
           The state (true for on, or false for off) that causes dependents to be disabled. By default,
             dependents will be disabled when this is unchecked, so the value of this preference is false. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#disableDependentsState}.
          @attr name android:disableDependentsState
        */
        public static final int CheckBoxPreference_disableDependentsState = 2;
        /**
          <p>
          @attr description
           The summary for the Preference in a PreferenceActivity screen when the
             CheckBoxPreference is unchecked. If separate on/off summaries are not
             needed, the summary attribute can be used instead. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#summaryOff}.
          @attr name android:summaryOff
        */
        public static final int CheckBoxPreference_summaryOff = 1;
        /**
          <p>
          @attr description
           The summary for the Preference in a PreferenceActivity screen when the
             CheckBoxPreference is checked. If separate on/off summaries are not
             needed, the summary attribute can be used instead. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#summaryOn}.
          @attr name android:summaryOn
        */
        public static final int CheckBoxPreference_summaryOn = 0;
        /** Attributes that can be used with a CheckedTextView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CheckedTextView_checkMark android:checkMark}</code></td><td> Drawable used for the check mark graphic.</td></tr>
           <tr><td><code>{@link #CheckedTextView_checked android:checked}</code></td><td> Indicates the initial checked state of this text.</td></tr>
           </table>
           @see #CheckedTextView_checkMark
           @see #CheckedTextView_checked
         */
        public static final int[] CheckedTextView = {
            0x01010106, 0x01010108
        };
        /**
          <p>
          @attr description
           Drawable used for the check mark graphic. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#checkMark}.
          @attr name android:checkMark
        */
        public static final int CheckedTextView_checkMark = 1;
        /**
          <p>
          @attr description
           Indicates the initial checked state of this text. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#checked}.
          @attr name android:checked
        */
        public static final int CheckedTextView_checked = 0;
        /** Attributes that can be used with a Chronometer.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Chronometer_format android:format}</code></td><td> Format string: if specified, the Chronometer will display this
             string, with the first "%s" replaced by the current timer value
             in "MM:SS" or "H:MM:SS" form.</td></tr>
           </table>
           @see #Chronometer_format
         */
        public static final int[] Chronometer = {
            0x01010105
        };
        /**
          <p>
          @attr description
           Format string: if specified, the Chronometer will display this
             string, with the first "%s" replaced by the current timer value
             in "MM:SS" or "H:MM:SS" form.
             If no format string is specified, the Chronometer will simply display
             "MM:SS" or "H:MM:SS". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#format}.
          @attr name android:format
        */
        public static final int Chronometer_format = 0;
        /** Attributes that can be used with a ClipDrawable.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ClipDrawable_clipOrientation android:clipOrientation}</code></td><td> The orientation for the clip.</td></tr>
           <tr><td><code>{@link #ClipDrawable_drawable android:drawable}</code></td><td> Reference to a drawable resource to draw with the specified scale.</td></tr>
           <tr><td><code>{@link #ClipDrawable_gravity android:gravity}</code></td><td> Specifies where to clip within the drawable.</td></tr>
           </table>
           @see #ClipDrawable_clipOrientation
           @see #ClipDrawable_drawable
           @see #ClipDrawable_gravity
         */
        public static final int[] ClipDrawable = {
            0x010100af, 0x01010199, 0x0101020a
        };
        /**
          <p>
          @attr description
           The orientation for the clip. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> Clip the drawable horizontally. </td></tr>
<tr><td><code>vertical</code></td><td>2</td><td> Clip the drawable vertically. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#clipOrientation}.
          @attr name android:clipOrientation
        */
        public static final int ClipDrawable_clipOrientation = 2;
        /**
          <p>
          @attr description
           Reference to a drawable resource to draw with the specified scale. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#drawable}.
          @attr name android:drawable
        */
        public static final int ClipDrawable_drawable = 1;
        /**
          <p>
          @attr description
           Specifies where to clip within the drawable. The default value is
             left. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#gravity}.
          @attr name android:gravity
        */
        public static final int ClipDrawable_gravity = 0;
        /**  Drawable used to draw a single color. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ColorDrawable_color android:color}</code></td><td> The color to use.</td></tr>
           </table>
           @see #ColorDrawable_color
         */
        public static final int[] ColorDrawable = {
            0x010101a5
        };
        /**
          <p>
          @attr description
           The color to use. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#color}.
          @attr name android:color
        */
        public static final int ColorDrawable_color = 0;
        /** Attributes that can be used with a CompoundButton.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CompoundButton_button android:button}</code></td><td> Drawable used for the button graphic (e.</td></tr>
           <tr><td><code>{@link #CompoundButton_checked android:checked}</code></td><td> Indicates the initial checked state of this button.</td></tr>
           </table>
           @see #CompoundButton_button
           @see #CompoundButton_checked
         */
        public static final int[] CompoundButton = {
            0x01010106, 0x01010107
        };
        /**
          <p>
          @attr description
           Drawable used for the button graphic (e.g. checkbox, radio button, etc). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#button}.
          @attr name android:button
        */
        public static final int CompoundButton_button = 1;
        /**
          <p>
          @attr description
           Indicates the initial checked state of this button. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#checked}.
          @attr name android:checked
        */
        public static final int CompoundButton_checked = 0;
        /**  Maps a specific contact data MIME-type to styling information. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ContactsDataKind_detailColumn android:detailColumn}</code></td><td> Column in data table that contains details for this data.</td></tr>
           <tr><td><code>{@link #ContactsDataKind_detailSocialSummary android:detailSocialSummary}</code></td><td> Flag indicating that detail should be built from SocialProvider.</td></tr>
           <tr><td><code>{@link #ContactsDataKind_icon android:icon}</code></td><td> Icon used to represent data of this kind.</td></tr>
           <tr><td><code>{@link #ContactsDataKind_mimeType android:mimeType}</code></td><td> Mime-type handled by this mapping.</td></tr>
           <tr><td><code>{@link #ContactsDataKind_summaryColumn android:summaryColumn}</code></td><td> Column in data table that summarizes this data.</td></tr>
           </table>
           @see #ContactsDataKind_detailColumn
           @see #ContactsDataKind_detailSocialSummary
           @see #ContactsDataKind_icon
           @see #ContactsDataKind_mimeType
           @see #ContactsDataKind_summaryColumn
         */
        public static final int[] ContactsDataKind = {
            0x01010002, 0x01010026, 0x010102a2, 0x010102a3,
            0x010102a4
        };
        /**
          <p>
          @attr description
           Column in data table that contains details for this data. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#detailColumn}.
          @attr name android:detailColumn
        */
        public static final int ContactsDataKind_detailColumn = 3;
        /**
          <p>
          @attr description
           Flag indicating that detail should be built from SocialProvider. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#detailSocialSummary}.
          @attr name android:detailSocialSummary
        */
        public static final int ContactsDataKind_detailSocialSummary = 4;
        /**
          <p>
          @attr description
           Icon used to represent data of this kind. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int ContactsDataKind_icon = 0;
        /**
          <p>
          @attr description
           Mime-type handled by this mapping. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#mimeType}.
          @attr name android:mimeType
        */
        public static final int ContactsDataKind_mimeType = 1;
        /**
          <p>
          @attr description
           Column in data table that summarizes this data. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#summaryColumn}.
          @attr name android:summaryColumn
        */
        public static final int ContactsDataKind_summaryColumn = 2;
        /** Attributes that can be used with a CycleInterpolator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CycleInterpolator_cycles android:cycles}</code></td><td></td></tr>
           </table>
           @see #CycleInterpolator_cycles
         */
        public static final int[] CycleInterpolator = {
            0x010101d4
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#cycles}
          attribute's value can be found in the {@link #CycleInterpolator} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:cycles
        */
        public static final int CycleInterpolator_cycles = 0;
        /** Attributes that can be used with a DatePicker.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DatePicker_endYear android:endYear}</code></td><td> The last year (inclusive), for example "2010".</td></tr>
           <tr><td><code>{@link #DatePicker_startYear android:startYear}</code></td><td> The first year (inclusive), for example "1940".</td></tr>
           </table>
           @see #DatePicker_endYear
           @see #DatePicker_startYear
         */
        public static final int[] DatePicker = {
            0x0101017c, 0x0101017d
        };
        /**
          <p>
          @attr description
           The last year (inclusive), for example "2010". 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#endYear}.
          @attr name android:endYear
        */
        public static final int DatePicker_endYear = 1;
        /**
          <p>
          @attr description
           The first year (inclusive), for example "1940". 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#startYear}.
          @attr name android:startYear
        */
        public static final int DatePicker_startYear = 0;
        /** Attributes that can be used with a DecelerateInterpolator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DecelerateInterpolator_factor android:factor}</code></td><td> This is the amount of acceleration to add when easing out.</td></tr>
           </table>
           @see #DecelerateInterpolator_factor
         */
        public static final int[] DecelerateInterpolator = {
            0x010101d3
        };
        /**
          <p>
          @attr description
           This is the amount of acceleration to add when easing out. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#factor}.
          @attr name android:factor
        */
        public static final int DecelerateInterpolator_factor = 0;
        /**  Use <code>device-admin</code> as the root tag of the XML resource that
         describes a
         {@link android.app.admin.DeviceAdminReceiver}, which is
         referenced from its
         {@link android.app.admin.DeviceAdminReceiver#DEVICE_ADMIN_META_DATA}
         meta-data entry.  Described here are the attributes that can be
         included in that tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DeviceAdmin_visible android:visible}</code></td><td> Control whether the admin is visible to the user, even when it
             is not enabled.</td></tr>
           </table>
           @see #DeviceAdmin_visible
         */
        public static final int[] DeviceAdmin = {
            0x01010194
        };
        /**
          <p>
          @attr description
           Control whether the admin is visible to the user, even when it
             is not enabled.  This is true by default.  You may want to make
             it false if your admin does not make sense to be turned on
             unless some explicit action happens in your app. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#visible}.
          @attr name android:visible
        */
        public static final int DeviceAdmin_visible = 0;
        /**  Base attributes available to DialogPreference. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DialogPreference_dialogIcon android:dialogIcon}</code></td><td> The icon for the dialog.</td></tr>
           <tr><td><code>{@link #DialogPreference_dialogLayout android:dialogLayout}</code></td><td> A layout to be used as the content View for the dialog.</td></tr>
           <tr><td><code>{@link #DialogPreference_dialogMessage android:dialogMessage}</code></td><td> The message in the dialog.</td></tr>
           <tr><td><code>{@link #DialogPreference_dialogTitle android:dialogTitle}</code></td><td> The title in the dialog.</td></tr>
           <tr><td><code>{@link #DialogPreference_negativeButtonText android:negativeButtonText}</code></td><td> The negative button text for the dialog.</td></tr>
           <tr><td><code>{@link #DialogPreference_positiveButtonText android:positiveButtonText}</code></td><td> The positive button text for the dialog.</td></tr>
           </table>
           @see #DialogPreference_dialogIcon
           @see #DialogPreference_dialogLayout
           @see #DialogPreference_dialogMessage
           @see #DialogPreference_dialogTitle
           @see #DialogPreference_negativeButtonText
           @see #DialogPreference_positiveButtonText
         */
        public static final int[] DialogPreference = {
            0x010101f2, 0x010101f3, 0x010101f4, 0x010101f5,
            0x010101f6, 0x010101f7
        };
        /**
          <p>
          @attr description
           The icon for the dialog. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dialogIcon}.
          @attr name android:dialogIcon
        */
        public static final int DialogPreference_dialogIcon = 2;
        /**
          <p>
          @attr description
           A layout to be used as the content View for the dialog. By default, this shouldn't
             be needed. If a custom DialogPreference is required, this should be set. For example,
             the EditTextPreference uses a layout with an EditText as this attribute. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dialogLayout}.
          @attr name android:dialogLayout
        */
        public static final int DialogPreference_dialogLayout = 5;
        /**
          <p>
          @attr description
           The message in the dialog. If a dialogLayout is provided and contains
             a TextView with ID android:id/message, this message will be placed in there. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dialogMessage}.
          @attr name android:dialogMessage
        */
        public static final int DialogPreference_dialogMessage = 1;
        /**
          <p>
          @attr description
           The title in the dialog. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dialogTitle}.
          @attr name android:dialogTitle
        */
        public static final int DialogPreference_dialogTitle = 0;
        /**
          <p>
          @attr description
           The negative button text for the dialog. Set to @null to hide the negative button. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#negativeButtonText}.
          @attr name android:negativeButtonText
        */
        public static final int DialogPreference_negativeButtonText = 4;
        /**
          <p>
          @attr description
           The positive button text for the dialog. Set to @null to hide the positive button. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#positiveButtonText}.
          @attr name android:positiveButtonText
        */
        public static final int DialogPreference_positiveButtonText = 3;
        /**  Base attributes that are available to all Drawable objects. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Drawable_visible android:visible}</code></td><td> Provides initial visibility state of the drawable; the default
             value is false.</td></tr>
           </table>
           @see #Drawable_visible
         */
        public static final int[] Drawable = {
            0x01010194
        };
        /**
          <p>
          @attr description
           Provides initial visibility state of the drawable; the default
             value is false.  See
             {@link android.graphics.drawable.Drawable#setVisible}. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#visible}.
          @attr name android:visible
        */
        public static final int Drawable_visible = 0;
        /** Attributes that can be used with a DrawableCorners.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DrawableCorners_bottomLeftRadius android:bottomLeftRadius}</code></td><td></td></tr>
           <tr><td><code>{@link #DrawableCorners_bottomRightRadius android:bottomRightRadius}</code></td><td></td></tr>
           <tr><td><code>{@link #DrawableCorners_radius android:radius}</code></td><td></td></tr>
           <tr><td><code>{@link #DrawableCorners_topLeftRadius android:topLeftRadius}</code></td><td></td></tr>
           <tr><td><code>{@link #DrawableCorners_topRightRadius android:topRightRadius}</code></td><td></td></tr>
           </table>
           @see #DrawableCorners_bottomLeftRadius
           @see #DrawableCorners_bottomRightRadius
           @see #DrawableCorners_radius
           @see #DrawableCorners_topLeftRadius
           @see #DrawableCorners_topRightRadius
         */
        public static final int[] DrawableCorners = {
            0x010101a8, 0x010101a9, 0x010101aa, 0x010101ab,
            0x010101ac
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#bottomLeftRadius}
          attribute's value can be found in the {@link #DrawableCorners} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:bottomLeftRadius
        */
        public static final int DrawableCorners_bottomLeftRadius = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#bottomRightRadius}
          attribute's value can be found in the {@link #DrawableCorners} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:bottomRightRadius
        */
        public static final int DrawableCorners_bottomRightRadius = 4;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#radius}
          attribute's value can be found in the {@link #DrawableCorners} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:radius
        */
        public static final int DrawableCorners_radius = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#topLeftRadius}
          attribute's value can be found in the {@link #DrawableCorners} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:topLeftRadius
        */
        public static final int DrawableCorners_topLeftRadius = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#topRightRadius}
          attribute's value can be found in the {@link #DrawableCorners} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:topRightRadius
        */
        public static final int DrawableCorners_topRightRadius = 2;
        /**  Drawable states.
         The mapping of Drawable states to a particular drawables is specified
         in the "state" elements of a Widget's "selector" element.
         Possible values:
         <ul>
         <li>"state_focused"
         <li>"state_window_focused"
         <li>"state_enabled"
         <li>"state_checked"
         <li>"state_selected"
         <li>"state_active"
         <li>"state_single"
         <li>"state_first"
         <li>"state_mid"
         <li>"state_last"
         <li>"state_only"
         <li>"state_pressed"
         <li>"state_error"
         <li>"state_circle"
         <li>"state_rect"
         <li>"state_grow"
         <li>"state_move"
         </ul>  
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DrawableStates_state_active android:state_active}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_checkable android:state_checkable}</code></td><td>  State identifier indicating that the object <var>may</var> display a check mark.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_checked android:state_checked}</code></td><td>  State identifier indicating that the object is currently checked.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_enabled android:state_enabled}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_first android:state_first}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_focused android:state_focused}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_last android:state_last}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_middle android:state_middle}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_pressed android:state_pressed}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_selected android:state_selected}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_single android:state_single}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_window_focused android:state_window_focused}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           </table>
           @see #DrawableStates_state_active
           @see #DrawableStates_state_checkable
           @see #DrawableStates_state_checked
           @see #DrawableStates_state_enabled
           @see #DrawableStates_state_first
           @see #DrawableStates_state_focused
           @see #DrawableStates_state_last
           @see #DrawableStates_state_middle
           @see #DrawableStates_state_pressed
           @see #DrawableStates_state_selected
           @see #DrawableStates_state_single
           @see #DrawableStates_state_window_focused
         */
        public static final int[] DrawableStates = {
            0x0101009c, 0x0101009d, 0x0101009e, 0x0101009f,
            0x010100a0, 0x010100a1, 0x010100a2, 0x010100a3,
            0x010100a4, 0x010100a5, 0x010100a6, 0x010100a7
        };
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_active}.
          @attr name android:state_active
        */
        public static final int DrawableStates_state_active = 6;
        /**
          <p>
          @attr description
            State identifier indicating that the object <var>may</var> display a check mark.
              See {@link R.attr#state_checked} for the identifier that indicates whether it is
              actually checked. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_checkable}.
          @attr name android:state_checkable
        */
        public static final int DrawableStates_state_checkable = 3;
        /**
          <p>
          @attr description
            State identifier indicating that the object is currently checked.  See
              {@link R.attr#state_checkable} for an additional identifier that can indicate if
              any object may ever display a check, regardless of whether state_checked is
              currently set. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_checked}.
          @attr name android:state_checked
        */
        public static final int DrawableStates_state_checked = 4;
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_enabled}.
          @attr name android:state_enabled
        */
        public static final int DrawableStates_state_enabled = 2;
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_first}.
          @attr name android:state_first
        */
        public static final int DrawableStates_state_first = 8;
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_focused}.
          @attr name android:state_focused
        */
        public static final int DrawableStates_state_focused = 0;
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_last}.
          @attr name android:state_last
        */
        public static final int DrawableStates_state_last = 10;
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_middle}.
          @attr name android:state_middle
        */
        public static final int DrawableStates_state_middle = 9;
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_pressed}.
          @attr name android:state_pressed
        */
        public static final int DrawableStates_state_pressed = 11;
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_selected}.
          @attr name android:state_selected
        */
        public static final int DrawableStates_state_selected = 5;
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_single}.
          @attr name android:state_single
        */
        public static final int DrawableStates_state_single = 7;
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_window_focused}.
          @attr name android:state_window_focused
        */
        public static final int DrawableStates_state_window_focused = 1;
        /** Attributes that can be used with a EditText.
         */
        public static final int[] EditText = {
            
        };
        /**  State array representing an expandable list child's indicator. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ExpandableListChildIndicatorState_state_last android:state_last}</code></td><td> State identifier indicating the child is the last child within its group.</td></tr>
           </table>
           @see #ExpandableListChildIndicatorState_state_last
         */
        public static final int[] ExpandableListChildIndicatorState = {
            0x010100a6
        };
        /**
          <p>
          @attr description
           State identifier indicating the child is the last child within its group. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_last}.
          @attr name android:state_last
        */
        public static final int ExpandableListChildIndicatorState_state_last = 0;
        /**  State array representing an expandable list group's indicator. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ExpandableListGroupIndicatorState_state_empty android:state_empty}</code></td><td> State identifier indicating the group is empty (has no children).</td></tr>
           <tr><td><code>{@link #ExpandableListGroupIndicatorState_state_expanded android:state_expanded}</code></td><td> State identifier indicating the group is expanded.</td></tr>
           </table>
           @see #ExpandableListGroupIndicatorState_state_empty
           @see #ExpandableListGroupIndicatorState_state_expanded
         */
        public static final int[] ExpandableListGroupIndicatorState = {
            0x010100a8, 0x010100a9
        };
        /**
          <p>
          @attr description
           State identifier indicating the group is empty (has no children). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_empty}.
          @attr name android:state_empty
        */
        public static final int ExpandableListGroupIndicatorState_state_empty = 1;
        /**
          <p>
          @attr description
           State identifier indicating the group is expanded. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_expanded}.
          @attr name android:state_expanded
        */
        public static final int ExpandableListGroupIndicatorState_state_expanded = 0;
        /** Attributes that can be used with a ExpandableListView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ExpandableListView_childDivider android:childDivider}</code></td><td> Drawable or color that is used as a divider for children.</td></tr>
           <tr><td><code>{@link #ExpandableListView_childIndicator android:childIndicator}</code></td><td> Indicator shown beside the child View.</td></tr>
           <tr><td><code>{@link #ExpandableListView_childIndicatorLeft android:childIndicatorLeft}</code></td><td> The left bound for a child's indicator.</td></tr>
           <tr><td><code>{@link #ExpandableListView_childIndicatorRight android:childIndicatorRight}</code></td><td> The right bound for a child's indicator.</td></tr>
           <tr><td><code>{@link #ExpandableListView_groupIndicator android:groupIndicator}</code></td><td> Indicator shown beside the group View.</td></tr>
           <tr><td><code>{@link #ExpandableListView_indicatorLeft android:indicatorLeft}</code></td><td> The left bound for an item's indicator.</td></tr>
           <tr><td><code>{@link #ExpandableListView_indicatorRight android:indicatorRight}</code></td><td> The right bound for an item's indicator.</td></tr>
           </table>
           @see #ExpandableListView_childDivider
           @see #ExpandableListView_childIndicator
           @see #ExpandableListView_childIndicatorLeft
           @see #ExpandableListView_childIndicatorRight
           @see #ExpandableListView_groupIndicator
           @see #ExpandableListView_indicatorLeft
           @see #ExpandableListView_indicatorRight
         */
        public static final int[] ExpandableListView = {
            0x0101010b, 0x0101010c, 0x0101010d, 0x0101010e,
            0x0101010f, 0x01010110, 0x01010111
        };
        /**
          <p>
          @attr description
           Drawable or color that is used as a divider for children. (It will drawn
             below and above child items.) The height of this will be the same as
             the height of the normal list item divider. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#childDivider}.
          @attr name android:childDivider
        */
        public static final int ExpandableListView_childDivider = 6;
        /**
          <p>
          @attr description
           Indicator shown beside the child View. This can be a stateful Drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#childIndicator}.
          @attr name android:childIndicator
        */
        public static final int ExpandableListView_childIndicator = 1;
        /**
          <p>
          @attr description
           The left bound for a child's indicator. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#childIndicatorLeft}.
          @attr name android:childIndicatorLeft
        */
        public static final int ExpandableListView_childIndicatorLeft = 4;
        /**
          <p>
          @attr description
           The right bound for a child's indicator. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#childIndicatorRight}.
          @attr name android:childIndicatorRight
        */
        public static final int ExpandableListView_childIndicatorRight = 5;
        /**
          <p>
          @attr description
           Indicator shown beside the group View. This can be a stateful Drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#groupIndicator}.
          @attr name android:groupIndicator
        */
        public static final int ExpandableListView_groupIndicator = 0;
        /**
          <p>
          @attr description
           The left bound for an item's indicator. To specify a left bound specific to children,
             use childIndicatorLeft. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#indicatorLeft}.
          @attr name android:indicatorLeft
        */
        public static final int ExpandableListView_indicatorLeft = 2;
        /**
          <p>
          @attr description
           The right bound for an item's indicator. To specify a right bound specific to children,
             use childIndicatorRight. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#indicatorRight}.
          @attr name android:indicatorRight
        */
        public static final int ExpandableListView_indicatorRight = 3;
        /**  An extra data value to place into a an extra/name value pair held
            in a Bundle, as per {@link android.os.Bundle}. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Extra_name android:name}</code></td><td> Required name of the extra data.</td></tr>
           <tr><td><code>{@link #Extra_value android:value}</code></td><td> Concrete value to put for this named extra data.</td></tr>
           </table>
           @see #Extra_name
           @see #Extra_value
         */
        public static final int[] Extra = {
            0x01010003, 0x01010024
        };
        /**
          <p>
          @attr description
           Required name of the extra data. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int Extra_name = 0;
        /**
          <p>
          @attr description
           Concrete value to put for this named extra data. 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>May be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#value}.
          @attr name android:value
        */
        public static final int Extra_value = 1;
        /** Attributes that can be used with a FrameLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #FrameLayout_foreground android:foreground}</code></td><td> Defines the drawable to draw over the content.</td></tr>
           <tr><td><code>{@link #FrameLayout_foregroundGravity android:foregroundGravity}</code></td><td> Defines the gravity to apply to the foreground drawable.</td></tr>
           <tr><td><code>{@link #FrameLayout_measureAllChildren android:measureAllChildren}</code></td><td> Determines whether to measure all children or just those in
             the VISIBLE or INVISIBLE state when measuring.</td></tr>
           </table>
           @see #FrameLayout_foreground
           @see #FrameLayout_foregroundGravity
           @see #FrameLayout_measureAllChildren
         */
        public static final int[] FrameLayout = {
            0x01010109, 0x0101010a, 0x01010200, 0x010102d1
        };
        /**
          <p>
          @attr description
           Defines the drawable to draw over the content. This can be used as an overlay.
             The foreground drawable participates in the padding of the content if the gravity
             is set to fill. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#foreground}.
          @attr name android:foreground
        */
        public static final int FrameLayout_foreground = 0;
        /**
          <p>
          @attr description
           Defines the gravity to apply to the foreground drawable. The gravity defaults
             to fill. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the vertical gravity: a top gravity will clip the bottom
                 edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the horizontal gravity: a left gravity will clip the right
                 edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#foregroundGravity}.
          @attr name android:foregroundGravity
        */
        public static final int FrameLayout_foregroundGravity = 2;
        /**
          <p>
          @attr description
           Determines whether to measure all children or just those in
             the VISIBLE or INVISIBLE state when measuring. Defaults to false. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#measureAllChildren}.
          @attr name android:measureAllChildren
        */
        public static final int FrameLayout_measureAllChildren = 1;
        /** Attributes that can be used with a FrameLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #FrameLayout_Layout_layout_gravity android:layout_gravity}</code></td><td> Standard gravity constant that a child can supply to its parent.</td></tr>
           </table>
           @see #FrameLayout_Layout_layout_gravity
         */
        public static final int[] FrameLayout_Layout = {
            0x010100b3
        };
        /**
          <p>
          @attr description
           Standard gravity constant that a child can supply to its parent.
         Defines how to place the view, both its x- and y-axis, within its parent view group. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_gravity}.
          @attr name android:layout_gravity
        */
        public static final int FrameLayout_Layout_layout_gravity = 0;
        /** Attributes that can be used with a Gallery.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Gallery_animationDuration android:animationDuration}</code></td><td> Sets how long a transition animation should run (in milliseconds)
             when layout has changed.</td></tr>
           <tr><td><code>{@link #Gallery_gravity android:gravity}</code></td><td> Specifies how to place the content of an object, both
         on the x- and y-axis, within the object itself.</td></tr>
           <tr><td><code>{@link #Gallery_spacing android:spacing}</code></td><td></td></tr>
           <tr><td><code>{@link #Gallery_unselectedAlpha android:unselectedAlpha}</code></td><td> Sets the alpha on the items that are not selected.</td></tr>
           </table>
           @see #Gallery_animationDuration
           @see #Gallery_gravity
           @see #Gallery_spacing
           @see #Gallery_unselectedAlpha
         */
        public static final int[] Gallery = {
            0x010100af, 0x01010112, 0x01010113, 0x0101020e
        };
        /**
          <p>
          @attr description
           Sets how long a transition animation should run (in milliseconds)
             when layout has changed.  Only relevant if animation is turned on. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#animationDuration}.
          @attr name android:animationDuration
        */
        public static final int Gallery_animationDuration = 1;
        /**
          <p>
          @attr description
           Specifies how to place the content of an object, both
         on the x- and y-axis, within the object itself. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#gravity}.
          @attr name android:gravity
        */
        public static final int Gallery_gravity = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#spacing}
          attribute's value can be found in the {@link #Gallery} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:spacing
        */
        public static final int Gallery_spacing = 2;
        /**
          <p>
          @attr description
           Sets the alpha on the items that are not selected. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#unselectedAlpha}.
          @attr name android:unselectedAlpha
        */
        public static final int Gallery_unselectedAlpha = 3;
        /**  GestureOverlayView specific attributes. These attributes are used to configure
         a GestureOverlayView from XML. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GestureOverlayView_eventsInterceptionEnabled android:eventsInterceptionEnabled}</code></td><td> Defines whether the overlay should intercept the motion events when a gesture
             is recognized.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_fadeDuration android:fadeDuration}</code></td><td> Duration, in milliseconds, of the fade out effect after the user is done
             drawing a gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_fadeEnabled android:fadeEnabled}</code></td><td> Defines whether the gesture will automatically fade out after being recognized.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_fadeOffset android:fadeOffset}</code></td><td> Time, in milliseconds, to wait before the gesture fades out after the user
             is done drawing it.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_gestureColor android:gestureColor}</code></td><td> Color used to draw a gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_gestureStrokeAngleThreshold android:gestureStrokeAngleThreshold}</code></td><td> Minimum curve angle a stroke must contain before it is recognized as a gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_gestureStrokeLengthThreshold android:gestureStrokeLengthThreshold}</code></td><td> Minimum length of a stroke before it is recognized as a gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_gestureStrokeSquarenessThreshold android:gestureStrokeSquarenessThreshold}</code></td><td> Squareness threshold of a stroke before it is recognized as a gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_gestureStrokeType android:gestureStrokeType}</code></td><td> Defines the type of strokes that define a gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_gestureStrokeWidth android:gestureStrokeWidth}</code></td><td> Width of the stroke used to draw the gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_orientation android:orientation}</code></td><td> Indicates whether horizontal (when the orientation is vertical) or vertical
             (when orientation is horizontal) strokes automatically define a gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_uncertainGestureColor android:uncertainGestureColor}</code></td><td> Color used to draw the user's strokes until we are sure it's a gesture.</td></tr>
           </table>
           @see #GestureOverlayView_eventsInterceptionEnabled
           @see #GestureOverlayView_fadeDuration
           @see #GestureOverlayView_fadeEnabled
           @see #GestureOverlayView_fadeOffset
           @see #GestureOverlayView_gestureColor
           @see #GestureOverlayView_gestureStrokeAngleThreshold
           @see #GestureOverlayView_gestureStrokeLengthThreshold
           @see #GestureOverlayView_gestureStrokeSquarenessThreshold
           @see #GestureOverlayView_gestureStrokeType
           @see #GestureOverlayView_gestureStrokeWidth
           @see #GestureOverlayView_orientation
           @see #GestureOverlayView_uncertainGestureColor
         */
        public static final int[] GestureOverlayView = {
            0x010100c4, 0x01010274, 0x01010275, 0x01010276,
            0x01010277, 0x01010278, 0x01010279, 0x0101027a,
            0x0101027b, 0x0101027c, 0x0101027d, 0x0101027e
        };
        /**
          <p>
          @attr description
           Defines whether the overlay should intercept the motion events when a gesture
             is recognized. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#eventsInterceptionEnabled}.
          @attr name android:eventsInterceptionEnabled
        */
        public static final int GestureOverlayView_eventsInterceptionEnabled = 10;
        /**
          <p>
          @attr description
           Duration, in milliseconds, of the fade out effect after the user is done
             drawing a gesture. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#fadeDuration}.
          @attr name android:fadeDuration
        */
        public static final int GestureOverlayView_fadeDuration = 5;
        /**
          <p>
          @attr description
           Defines whether the gesture will automatically fade out after being recognized. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#fadeEnabled}.
          @attr name android:fadeEnabled
        */
        public static final int GestureOverlayView_fadeEnabled = 11;
        /**
          <p>
          @attr description
           Time, in milliseconds, to wait before the gesture fades out after the user
             is done drawing it. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#fadeOffset}.
          @attr name android:fadeOffset
        */
        public static final int GestureOverlayView_fadeOffset = 4;
        /**
          <p>
          @attr description
           Color used to draw a gesture. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#gestureColor}.
          @attr name android:gestureColor
        */
        public static final int GestureOverlayView_gestureColor = 2;
        /**
          <p>
          @attr description
           Minimum curve angle a stroke must contain before it is recognized as a gesture. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#gestureStrokeAngleThreshold}.
          @attr name android:gestureStrokeAngleThreshold
        */
        public static final int GestureOverlayView_gestureStrokeAngleThreshold = 9;
        /**
          <p>
          @attr description
           Minimum length of a stroke before it is recognized as a gesture. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#gestureStrokeLengthThreshold}.
          @attr name android:gestureStrokeLengthThreshold
        */
        public static final int GestureOverlayView_gestureStrokeLengthThreshold = 7;
        /**
          <p>
          @attr description
           Squareness threshold of a stroke before it is recognized as a gesture. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#gestureStrokeSquarenessThreshold}.
          @attr name android:gestureStrokeSquarenessThreshold
        */
        public static final int GestureOverlayView_gestureStrokeSquarenessThreshold = 8;
        /**
          <p>
          @attr description
           Defines the type of strokes that define a gesture. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>single</code></td><td>0</td><td> A gesture is made of only one stroke. </td></tr>
<tr><td><code>multiple</code></td><td>1</td><td> A gesture is made of multiple strokes. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#gestureStrokeType}.
          @attr name android:gestureStrokeType
        */
        public static final int GestureOverlayView_gestureStrokeType = 6;
        /**
          <p>
          @attr description
           Width of the stroke used to draw the gesture. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#gestureStrokeWidth}.
          @attr name android:gestureStrokeWidth
        */
        public static final int GestureOverlayView_gestureStrokeWidth = 1;
        /**
          <p>
          @attr description
           Indicates whether horizontal (when the orientation is vertical) or vertical
             (when orientation is horizontal) strokes automatically define a gesture. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
<tr><td><code>none</code></td><td>2</td><td> no orientation (lockscreen hack only for gestures.) </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#orientation}.
          @attr name android:orientation
        */
        public static final int GestureOverlayView_orientation = 0;
        /**
          <p>
          @attr description
           Color used to draw the user's strokes until we are sure it's a gesture. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#uncertainGestureColor}.
          @attr name android:uncertainGestureColor
        */
        public static final int GestureOverlayView_uncertainGestureColor = 3;
        /** Attributes that can be used with a GradientDrawable.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GradientDrawable_innerRadius android:innerRadius}</code></td><td> Inner radius of the ring.</td></tr>
           <tr><td><code>{@link #GradientDrawable_innerRadiusRatio android:innerRadiusRatio}</code></td><td> Inner radius of the ring expressed as a ratio of the ring's width.</td></tr>
           <tr><td><code>{@link #GradientDrawable_shape android:shape}</code></td><td></td></tr>
           <tr><td><code>{@link #GradientDrawable_thickness android:thickness}</code></td><td> Thickness of the ring.</td></tr>
           <tr><td><code>{@link #GradientDrawable_thicknessRatio android:thicknessRatio}</code></td><td> Thickness of the ring expressed as a ratio of the ring's width.</td></tr>
           <tr><td><code>{@link #GradientDrawable_useLevel android:useLevel}</code></td><td></td></tr>
           <tr><td><code>{@link #GradientDrawable_visible android:visible}</code></td><td> Provides initial visibility state of the drawable; the default
             value is false.</td></tr>
           </table>
           @see #GradientDrawable_innerRadius
           @see #GradientDrawable_innerRadiusRatio
           @see #GradientDrawable_shape
           @see #GradientDrawable_thickness
           @see #GradientDrawable_thicknessRatio
           @see #GradientDrawable_useLevel
           @see #GradientDrawable_visible
         */
        public static final int[] GradientDrawable = {
            0x01010194, 0x0101019a, 0x0101019b, 0x0101019c,
            0x0101019f, 0x0101025f, 0x01010260
        };
        /**
          <p>
          @attr description
           Inner radius of the ring. When defined, innerRadiusRatio is ignored. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#innerRadius}.
          @attr name android:innerRadius
        */
        public static final int GradientDrawable_innerRadius = 5;
        /**
          <p>
          @attr description
           Inner radius of the ring expressed as a ratio of the ring's width. For instance,
             if innerRadiusRatio=9, then the inner radius equals the ring's width divided by 9.
             This value is ignored if innerRadius is defined. Default value is 9. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#innerRadiusRatio}.
          @attr name android:innerRadiusRatio
        */
        public static final int GradientDrawable_innerRadiusRatio = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#shape}
          attribute's value can be found in the {@link #GradientDrawable} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>rectangle</code></td><td>0</td><td></td></tr>
<tr><td><code>oval</code></td><td>1</td><td></td></tr>
<tr><td><code>line</code></td><td>2</td><td></td></tr>
<tr><td><code>ring</code></td><td>3</td><td></td></tr>
</table>
          @attr name android:shape
        */
        public static final int GradientDrawable_shape = 1;
        /**
          <p>
          @attr description
           Thickness of the ring. When defined, thicknessRatio is ignored. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#thickness}.
          @attr name android:thickness
        */
        public static final int GradientDrawable_thickness = 6;
        /**
          <p>
          @attr description
           Thickness of the ring expressed as a ratio of the ring's width. For instance,
             if thicknessRatio=3, then the thickness equals the ring's width divided by 3.
             This value is ignored if innerRadius is defined. Default value is 3. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#thicknessRatio}.
          @attr name android:thicknessRatio
        */
        public static final int GradientDrawable_thicknessRatio = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#useLevel}
          attribute's value can be found in the {@link #GradientDrawable} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:useLevel
        */
        public static final int GradientDrawable_useLevel = 4;
        /**
          <p>
          @attr description
           Provides initial visibility state of the drawable; the default
             value is false.  See
             {@link android.graphics.drawable.Drawable#setVisible}. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#visible}.
          @attr name android:visible
        */
        public static final int GradientDrawable_visible = 0;
        /** Attributes that can be used with a GradientDrawableGradient.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GradientDrawableGradient_angle android:angle}</code></td><td></td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_centerColor android:centerColor}</code></td><td> Optional center color.</td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_centerX android:centerX}</code></td><td></td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_centerY android:centerY}</code></td><td></td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_endColor android:endColor}</code></td><td></td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_gradientRadius android:gradientRadius}</code></td><td></td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_startColor android:startColor}</code></td><td></td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_type android:type}</code></td><td></td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_useLevel android:useLevel}</code></td><td></td></tr>
           </table>
           @see #GradientDrawableGradient_angle
           @see #GradientDrawableGradient_centerColor
           @see #GradientDrawableGradient_centerX
           @see #GradientDrawableGradient_centerY
           @see #GradientDrawableGradient_endColor
           @see #GradientDrawableGradient_gradientRadius
           @see #GradientDrawableGradient_startColor
           @see #GradientDrawableGradient_type
           @see #GradientDrawableGradient_useLevel
         */
        public static final int[] GradientDrawableGradient = {
            0x0101019d, 0x0101019e, 0x0101019f, 0x010101a0,
            0x010101a1, 0x010101a2, 0x010101a3, 0x010101a4,
            0x0101020b
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#angle}
          attribute's value can be found in the {@link #GradientDrawableGradient} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:angle
        */
        public static final int GradientDrawableGradient_angle = 3;
        /**
          <p>
          @attr description
           Optional center color. For linear gradients, use centerX or centerY to place the center color. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#centerColor}.
          @attr name android:centerColor
        */
        public static final int GradientDrawableGradient_centerColor = 8;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#centerX}
          attribute's value can be found in the {@link #GradientDrawableGradient} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:centerX
        */
        public static final int GradientDrawableGradient_centerX = 5;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#centerY}
          attribute's value can be found in the {@link #GradientDrawableGradient} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:centerY
        */
        public static final int GradientDrawableGradient_centerY = 6;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#endColor}
          attribute's value can be found in the {@link #GradientDrawableGradient} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:endColor
        */
        public static final int GradientDrawableGradient_endColor = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#gradientRadius}
          attribute's value can be found in the {@link #GradientDrawableGradient} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:gradientRadius
        */
        public static final int GradientDrawableGradient_gradientRadius = 7;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#startColor}
          attribute's value can be found in the {@link #GradientDrawableGradient} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:startColor
        */
        public static final int GradientDrawableGradient_startColor = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#type}
          attribute's value can be found in the {@link #GradientDrawableGradient} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>linear</code></td><td>0</td><td></td></tr>
<tr><td><code>radial</code></td><td>1</td><td></td></tr>
<tr><td><code>sweep</code></td><td>2</td><td></td></tr>
</table>
          @attr name android:type
        */
        public static final int GradientDrawableGradient_type = 4;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#useLevel}
          attribute's value can be found in the {@link #GradientDrawableGradient} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:useLevel
        */
        public static final int GradientDrawableGradient_useLevel = 2;
        /** Attributes that can be used with a GradientDrawablePadding.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GradientDrawablePadding_bottom android:bottom}</code></td><td></td></tr>
           <tr><td><code>{@link #GradientDrawablePadding_left android:left}</code></td><td></td></tr>
           <tr><td><code>{@link #GradientDrawablePadding_right android:right}</code></td><td></td></tr>
           <tr><td><code>{@link #GradientDrawablePadding_top android:top}</code></td><td></td></tr>
           </table>
           @see #GradientDrawablePadding_bottom
           @see #GradientDrawablePadding_left
           @see #GradientDrawablePadding_right
           @see #GradientDrawablePadding_top
         */
        public static final int[] GradientDrawablePadding = {
            0x010101ad, 0x010101ae, 0x010101af, 0x010101b0
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#bottom}
          attribute's value can be found in the {@link #GradientDrawablePadding} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:bottom
        */
        public static final int GradientDrawablePadding_bottom = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#left}
          attribute's value can be found in the {@link #GradientDrawablePadding} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:left
        */
        public static final int GradientDrawablePadding_left = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#right}
          attribute's value can be found in the {@link #GradientDrawablePadding} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:right
        */
        public static final int GradientDrawablePadding_right = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#top}
          attribute's value can be found in the {@link #GradientDrawablePadding} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:top
        */
        public static final int GradientDrawablePadding_top = 1;
        /** Attributes that can be used with a GradientDrawableSize.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GradientDrawableSize_height android:height}</code></td><td> Makes the TextView be exactly this many pixels tall.</td></tr>
           <tr><td><code>{@link #GradientDrawableSize_width android:width}</code></td><td> Makes the TextView be exactly this many pixels wide.</td></tr>
           </table>
           @see #GradientDrawableSize_height
           @see #GradientDrawableSize_width
         */
        public static final int[] GradientDrawableSize = {
            0x01010155, 0x01010159
        };
        /**
          <p>
          @attr description
           Makes the TextView be exactly this many pixels tall.
             You could get the same effect by specifying this number in the
             layout parameters. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#height}.
          @attr name android:height
        */
        public static final int GradientDrawableSize_height = 0;
        /**
          <p>
          @attr description
           Makes the TextView be exactly this many pixels wide.
             You could get the same effect by specifying this number in the
             layout parameters. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#width}.
          @attr name android:width
        */
        public static final int GradientDrawableSize_width = 1;
        /** Attributes that can be used with a GradientDrawableSolid.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GradientDrawableSolid_color android:color}</code></td><td></td></tr>
           </table>
           @see #GradientDrawableSolid_color
         */
        public static final int[] GradientDrawableSolid = {
            0x010101a5
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#color}
          attribute's value can be found in the {@link #GradientDrawableSolid} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:color
        */
        public static final int GradientDrawableSolid_color = 0;
        /** Attributes that can be used with a GradientDrawableStroke.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GradientDrawableStroke_color android:color}</code></td><td></td></tr>
           <tr><td><code>{@link #GradientDrawableStroke_dashGap android:dashGap}</code></td><td></td></tr>
           <tr><td><code>{@link #GradientDrawableStroke_dashWidth android:dashWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #GradientDrawableStroke_width android:width}</code></td><td> Makes the TextView be exactly this many pixels wide.</td></tr>
           </table>
           @see #GradientDrawableStroke_color
           @see #GradientDrawableStroke_dashGap
           @see #GradientDrawableStroke_dashWidth
           @see #GradientDrawableStroke_width
         */
        public static final int[] GradientDrawableStroke = {
            0x01010159, 0x010101a5, 0x010101a6, 0x010101a7
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#color}
          attribute's value can be found in the {@link #GradientDrawableStroke} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:color
        */
        public static final int GradientDrawableStroke_color = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#dashGap}
          attribute's value can be found in the {@link #GradientDrawableStroke} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:dashGap
        */
        public static final int GradientDrawableStroke_dashGap = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#dashWidth}
          attribute's value can be found in the {@link #GradientDrawableStroke} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:dashWidth
        */
        public static final int GradientDrawableStroke_dashWidth = 2;
        /**
          <p>
          @attr description
           Makes the TextView be exactly this many pixels wide.
             You could get the same effect by specifying this number in the
             layout parameters. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#width}.
          @attr name android:width
        */
        public static final int GradientDrawableStroke_width = 0;
        /** Attributes that can be used with a GridLayoutAnimation.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridLayoutAnimation_columnDelay android:columnDelay}</code></td><td> Fraction of the animation duration used to delay the beginning of
         the animation of each column.</td></tr>
           <tr><td><code>{@link #GridLayoutAnimation_direction android:direction}</code></td><td> Direction of the animation in the grid.</td></tr>
           <tr><td><code>{@link #GridLayoutAnimation_directionPriority android:directionPriority}</code></td><td> Priority of the rows and columns.</td></tr>
           <tr><td><code>{@link #GridLayoutAnimation_rowDelay android:rowDelay}</code></td><td> Fraction of the animation duration used to delay the beginning of
         the animation of each row.</td></tr>
           </table>
           @see #GridLayoutAnimation_columnDelay
           @see #GridLayoutAnimation_direction
           @see #GridLayoutAnimation_directionPriority
           @see #GridLayoutAnimation_rowDelay
         */
        public static final int[] GridLayoutAnimation = {
            0x010101cf, 0x010101d0, 0x010101d1, 0x010101d2
        };
        /**
          <p>
          @attr description
           Fraction of the animation duration used to delay the beginning of
         the animation of each column. 


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#columnDelay}.
          @attr name android:columnDelay
        */
        public static final int GridLayoutAnimation_columnDelay = 0;
        /**
          <p>
          @attr description
           Direction of the animation in the grid. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left_to_right</code></td><td>0x0</td><td> Animates columns from left to right. </td></tr>
<tr><td><code>right_to_left</code></td><td>0x1</td><td> Animates columns from right to left. </td></tr>
<tr><td><code>top_to_bottom</code></td><td>0x0</td><td> Animates rows from top to bottom. </td></tr>
<tr><td><code>bottom_to_top</code></td><td>0x2</td><td> Animates rows from bottom to top. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#direction}.
          @attr name android:direction
        */
        public static final int GridLayoutAnimation_direction = 2;
        /**
          <p>
          @attr description
           Priority of the rows and columns. When the priority is none,
         both rows and columns have the same priority. When the priority is
         column, the animations will be applied on the columns first. The same
         goes for rows. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Rows and columns are animated at the same time. </td></tr>
<tr><td><code>column</code></td><td>1</td><td> Columns are animated first. </td></tr>
<tr><td><code>row</code></td><td>2</td><td> Rows are animated first. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#directionPriority}.
          @attr name android:directionPriority
        */
        public static final int GridLayoutAnimation_directionPriority = 3;
        /**
          <p>
          @attr description
           Fraction of the animation duration used to delay the beginning of
         the animation of each row. 


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#rowDelay}.
          @attr name android:rowDelay
        */
        public static final int GridLayoutAnimation_rowDelay = 1;
        /** Attributes that can be used with a GridView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridView_columnWidth android:columnWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #GridView_gravity android:gravity}</code></td><td> Specifies how to place the content of an object, both
         on the x- and y-axis, within the object itself.</td></tr>
           <tr><td><code>{@link #GridView_horizontalSpacing android:horizontalSpacing}</code></td><td></td></tr>
           <tr><td><code>{@link #GridView_numColumns android:numColumns}</code></td><td></td></tr>
           <tr><td><code>{@link #GridView_stretchMode android:stretchMode}</code></td><td></td></tr>
           <tr><td><code>{@link #GridView_verticalSpacing android:verticalSpacing}</code></td><td></td></tr>
           </table>
           @see #GridView_columnWidth
           @see #GridView_gravity
           @see #GridView_horizontalSpacing
           @see #GridView_numColumns
           @see #GridView_stretchMode
           @see #GridView_verticalSpacing
         */
        public static final int[] GridView = {
            0x010100af, 0x01010114, 0x01010115, 0x01010116,
            0x01010117, 0x01010118
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#columnWidth}
          attribute's value can be found in the {@link #GridView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:columnWidth
        */
        public static final int GridView_columnWidth = 4;
        /**
          <p>
          @attr description
           Specifies how to place the content of an object, both
         on the x- and y-axis, within the object itself. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#gravity}.
          @attr name android:gravity
        */
        public static final int GridView_gravity = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#horizontalSpacing}
          attribute's value can be found in the {@link #GridView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:horizontalSpacing
        */
        public static final int GridView_horizontalSpacing = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#numColumns}
          attribute's value can be found in the {@link #GridView} array.


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto_fit</code></td><td>-1</td><td></td></tr>
</table>
          @attr name android:numColumns
        */
        public static final int GridView_numColumns = 5;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#stretchMode}
          attribute's value can be found in the {@link #GridView} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>spacingWidth</code></td><td>1</td><td></td></tr>
<tr><td><code>columnWidth</code></td><td>2</td><td></td></tr>
<tr><td><code>spacingWidthUniform</code></td><td>3</td><td></td></tr>
</table>
          @attr name android:stretchMode
        */
        public static final int GridView_stretchMode = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#verticalSpacing}
          attribute's value can be found in the {@link #GridView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:verticalSpacing
        */
        public static final int GridView_verticalSpacing = 2;
        /** Attributes that can be used with a HorizontalScrollView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #HorizontalScrollView_fillViewport android:fillViewport}</code></td><td> Defines whether the scrollview should stretch its content to fill the viewport.</td></tr>
           </table>
           @see #HorizontalScrollView_fillViewport
         */
        public static final int[] HorizontalScrollView = {
            0x0101017a
        };
        /**
          <p>
          @attr description
           Defines whether the scrollview should stretch its content to fill the viewport. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#fillViewport}.
          @attr name android:fillViewport
        */
        public static final int HorizontalScrollView_fillViewport = 0;
        /** Attributes that can be used with a Icon.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Icon_icon android:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #Icon_mimeType android:mimeType}</code></td><td> Specify a MIME type that is handled, as per
             {@link android.content.IntentFilter#addDataType
             IntentFilter.addDataType()}.</td></tr>
           </table>
           @see #Icon_icon
           @see #Icon_mimeType
         */
        public static final int[] Icon = {
            0x01010002, 0x01010026
        };
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int Icon_icon = 0;
        /**
          <p>
          @attr description
           Specify a MIME type that is handled, as per
             {@link android.content.IntentFilter#addDataType
             IntentFilter.addDataType()}.
             <p><em>Note: MIME type matching in the Android framework is
             case-sensitive, unlike formal RFC MIME types.  As a result,
             MIME types here should always use lower case letters.</em></p> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#mimeType}.
          @attr name android:mimeType
        */
        public static final int Icon_mimeType = 1;
        /** Attributes that can be used with a IconDefault.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #IconDefault_icon android:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           </table>
           @see #IconDefault_icon
         */
        public static final int[] IconDefault = {
            0x01010002
        };
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int IconDefault_icon = 0;
        /** Attributes that can be used with a IconMenuView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #IconMenuView_maxItemsPerRow android:maxItemsPerRow}</code></td><td> Defines the maximum number of items per row.</td></tr>
           <tr><td><code>{@link #IconMenuView_maxRows android:maxRows}</code></td><td> Defines the maximum number of rows displayed.</td></tr>
           <tr><td><code>{@link #IconMenuView_moreIcon android:moreIcon}</code></td><td> 'More' icon.</td></tr>
           <tr><td><code>{@link #IconMenuView_rowHeight android:rowHeight}</code></td><td> Defines the height of each row.</td></tr>
           </table>
           @see #IconMenuView_maxItemsPerRow
           @see #IconMenuView_maxRows
           @see #IconMenuView_moreIcon
           @see #IconMenuView_rowHeight
         */
        public static final int[] IconMenuView = {
            0x01010132, 0x01010133, 0x01010134, 0x01010135,
            0x010102d3
        };
        /**
          <p>
          @attr description
           Defines the maximum number of items per row. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#maxItemsPerRow}.
          @attr name android:maxItemsPerRow
        */
        public static final int IconMenuView_maxItemsPerRow = 2;
        /**
          <p>
          @attr description
           Defines the maximum number of rows displayed. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#maxRows}.
          @attr name android:maxRows
        */
        public static final int IconMenuView_maxRows = 1;
        /**
          <p>
          @attr description
           'More' icon. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#moreIcon}.
          @attr name android:moreIcon
        */
        public static final int IconMenuView_moreIcon = 3;
        /**
          <p>
          @attr description
           Defines the height of each row. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#rowHeight}.
          @attr name android:rowHeight
        */
        public static final int IconMenuView_rowHeight = 0;
        /** Attributes that can be used with a ImageSwitcher.
         */
        public static final int[] ImageSwitcher = {
            
        };
        /** Attributes that can be used with a ImageView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ImageView_adjustViewBounds android:adjustViewBounds}</code></td><td> Set this to true if you want the ImageView to adjust its bounds
             to preserve the aspect ratio of its drawable.</td></tr>
           <tr><td><code>{@link #ImageView_baselineAlignBottom android:baselineAlignBottom}</code></td><td> If true, the image view will be baseline aligned with based on its
             bottom edge.</td></tr>
           <tr><td><code>{@link #ImageView_cropToPadding android:cropToPadding}</code></td><td> If true, the image will be cropped to fit within its padding.</td></tr>
           <tr><td><code>{@link #ImageView_maxHeight android:maxHeight}</code></td><td> An optional argument to supply a maximum height for this view.</td></tr>
           <tr><td><code>{@link #ImageView_maxWidth android:maxWidth}</code></td><td> An optional argument to supply a maximum width for this view.</td></tr>
           <tr><td><code>{@link #ImageView_scaleType android:scaleType}</code></td><td> Controls how the image should be resized or moved to match the size
             of this ImageView.</td></tr>
           <tr><td><code>{@link #ImageView_src android:src}</code></td><td> Sets a drawable as the content of this ImageView.</td></tr>
           <tr><td><code>{@link #ImageView_tint android:tint}</code></td><td> Set a tinting color for the image.</td></tr>
           </table>
           @see #ImageView_adjustViewBounds
           @see #ImageView_baselineAlignBottom
           @see #ImageView_cropToPadding
           @see #ImageView_maxHeight
           @see #ImageView_maxWidth
           @see #ImageView_scaleType
           @see #ImageView_src
           @see #ImageView_tint
         */
        public static final int[] ImageView = {
            0x01010119, 0x0101011d, 0x0101011e, 0x0101011f,
            0x01010120, 0x01010121, 0x01010122, 0x01010123
        };
        /**
          <p>
          @attr description
           Set this to true if you want the ImageView to adjust its bounds
             to preserve the aspect ratio of its drawable. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#adjustViewBounds}.
          @attr name android:adjustViewBounds
        */
        public static final int ImageView_adjustViewBounds = 2;
        /**
          <p>
          @attr description
           If true, the image view will be baseline aligned with based on its
             bottom edge. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#baselineAlignBottom}.
          @attr name android:baselineAlignBottom
        */
        public static final int ImageView_baselineAlignBottom = 6;
        /**
          <p>
          @attr description
           If true, the image will be cropped to fit within its padding. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#cropToPadding}.
          @attr name android:cropToPadding
        */
        public static final int ImageView_cropToPadding = 7;
        /**
          <p>
          @attr description
           An optional argument to supply a maximum height for this view.
             See {see android.widget.ImageView#setMaxHeight} for details. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#maxHeight}.
          @attr name android:maxHeight
        */
        public static final int ImageView_maxHeight = 4;
        /**
          <p>
          @attr description
           An optional argument to supply a maximum width for this view.
             See {see android.widget.ImageView#setMaxWidth} for details. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#maxWidth}.
          @attr name android:maxWidth
        */
        public static final int ImageView_maxWidth = 3;
        /**
          <p>
          @attr description
           Controls how the image should be resized or moved to match the size
             of this ImageView. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>matrix</code></td><td>0</td><td></td></tr>
<tr><td><code>fitXY</code></td><td>1</td><td></td></tr>
<tr><td><code>fitStart</code></td><td>2</td><td></td></tr>
<tr><td><code>fitCenter</code></td><td>3</td><td></td></tr>
<tr><td><code>fitEnd</code></td><td>4</td><td></td></tr>
<tr><td><code>center</code></td><td>5</td><td></td></tr>
<tr><td><code>centerCrop</code></td><td>6</td><td></td></tr>
<tr><td><code>centerInside</code></td><td>7</td><td></td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scaleType}.
          @attr name android:scaleType
        */
        public static final int ImageView_scaleType = 1;
        /**
          <p>
          @attr description
           Sets a drawable as the content of this ImageView. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#src}.
          @attr name android:src
        */
        public static final int ImageView_src = 0;
        /**
          <p>
          @attr description
           Set a tinting color for the image. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#tint}.
          @attr name android:tint
        */
        public static final int ImageView_tint = 5;
        /**  An <code>input-extras</code> is a container for extra data to supply to
         an input method.  Contains
         one more more {@link #Extra <extra>} tags.  
         */
        public static final int[] InputExtras = {
            
        };
        /**  Use <code>input-method</code> as the root tag of the XML resource that
         describes an
         {@link android.view.inputmethod.InputMethod} service, which is
         referenced from its
         {@link android.view.inputmethod.InputMethod#SERVICE_META_DATA}
         meta-data entry.  Described here are the attributes that can be
         included in that tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #InputMethod_isDefault android:isDefault}</code></td><td> Set to true in all of the configurations for which this input
             method should be considered an option as the default.</td></tr>
           <tr><td><code>{@link #InputMethod_settingsActivity android:settingsActivity}</code></td><td> Component name of an activity that allows the user to modify
             the settings for this service.</td></tr>
           </table>
           @see #InputMethod_isDefault
           @see #InputMethod_settingsActivity
         */
        public static final int[] InputMethod = {
            0x01010221, 0x01010225
        };
        /**
          <p>
          @attr description
           Set to true in all of the configurations for which this input
             method should be considered an option as the default. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#isDefault}.
          @attr name android:isDefault
        */
        public static final int InputMethod_isDefault = 0;
        /**
          <p>
          @attr description
           Component name of an activity that allows the user to modify
             the settings for this service. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#settingsActivity}.
          @attr name android:settingsActivity
        */
        public static final int InputMethod_settingsActivity = 1;
        /** Attributes that can be used with a InputMethodService.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #InputMethodService_imeExtractEnterAnimation android:imeExtractEnterAnimation}</code></td><td> Animation to use when showing the fullscreen extract UI after
             it had previously been hidden.</td></tr>
           <tr><td><code>{@link #InputMethodService_imeExtractExitAnimation android:imeExtractExitAnimation}</code></td><td> Animation to use when hiding the fullscreen extract UI after
             it had previously been shown.</td></tr>
           <tr><td><code>{@link #InputMethodService_imeFullscreenBackground android:imeFullscreenBackground}</code></td><td> Background to use for entire input method when it is being
             shown in fullscreen mode with the extract view, to ensure
             that it completely covers the application.</td></tr>
           </table>
           @see #InputMethodService_imeExtractEnterAnimation
           @see #InputMethodService_imeExtractExitAnimation
           @see #InputMethodService_imeFullscreenBackground
         */
        public static final int[] InputMethodService = {
            0x0101022c, 0x01010268, 0x01010269
        };
        /**
          <p>
          @attr description
           Animation to use when showing the fullscreen extract UI after
             it had previously been hidden. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#imeExtractEnterAnimation}.
          @attr name android:imeExtractEnterAnimation
        */
        public static final int InputMethodService_imeExtractEnterAnimation = 1;
        /**
          <p>
          @attr description
           Animation to use when hiding the fullscreen extract UI after
             it had previously been shown. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#imeExtractExitAnimation}.
          @attr name android:imeExtractExitAnimation
        */
        public static final int InputMethodService_imeExtractExitAnimation = 2;
        /**
          <p>
          @attr description
           Background to use for entire input method when it is being
             shown in fullscreen mode with the extract view, to ensure
             that it completely covers the application.  This allows,
             for example, the candidate view to be hidden
             while in fullscreen mode without having the application show through
             behind it.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#imeFullscreenBackground}.
          @attr name android:imeFullscreenBackground
        */
        public static final int InputMethodService_imeFullscreenBackground = 0;
        /** Attributes that can be used with a InsetDrawable.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #InsetDrawable_drawable android:drawable}</code></td><td> Reference to a drawable resource to use for the frame.</td></tr>
           <tr><td><code>{@link #InsetDrawable_insetBottom android:insetBottom}</code></td><td></td></tr>
           <tr><td><code>{@link #InsetDrawable_insetLeft android:insetLeft}</code></td><td></td></tr>
           <tr><td><code>{@link #InsetDrawable_insetRight android:insetRight}</code></td><td></td></tr>
           <tr><td><code>{@link #InsetDrawable_insetTop android:insetTop}</code></td><td></td></tr>
           <tr><td><code>{@link #InsetDrawable_visible android:visible}</code></td><td> Provides initial visibility state of the drawable; the default
             value is false.</td></tr>
           </table>
           @see #InsetDrawable_drawable
           @see #InsetDrawable_insetBottom
           @see #InsetDrawable_insetLeft
           @see #InsetDrawable_insetRight
           @see #InsetDrawable_insetTop
           @see #InsetDrawable_visible
         */
        public static final int[] InsetDrawable = {
            0x01010194, 0x01010199, 0x010101b7, 0x010101b8,
            0x010101b9, 0x010101ba
        };
        /**
          <p>
          @attr description
           Reference to a drawable resource to use for the frame.  If not
             given, the drawable must be defined by the first child tag. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#drawable}.
          @attr name android:drawable
        */
        public static final int InsetDrawable_drawable = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#insetBottom}
          attribute's value can be found in the {@link #InsetDrawable} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:insetBottom
        */
        public static final int InsetDrawable_insetBottom = 5;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#insetLeft}
          attribute's value can be found in the {@link #InsetDrawable} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:insetLeft
        */
        public static final int InsetDrawable_insetLeft = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#insetRight}
          attribute's value can be found in the {@link #InsetDrawable} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:insetRight
        */
        public static final int InsetDrawable_insetRight = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#insetTop}
          attribute's value can be found in the {@link #InsetDrawable} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:insetTop
        */
        public static final int InsetDrawable_insetTop = 4;
        /**
          <p>
          @attr description
           Provides initial visibility state of the drawable; the default
             value is false.  See
             {@link android.graphics.drawable.Drawable#setVisible}. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#visible}.
          @attr name android:visible
        */
        public static final int InsetDrawable_visible = 0;
        /**  Declaration of an {@link android.content.Intent} object in XML.  May
         also include zero or more {@link #IntentCategory <category> and
         {@link #Extra <extra>} tags. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Intent_action android:action}</code></td><td> The action name to assign to the Intent, as per
            {@link android.content.Intent#setAction Intent.setAction()}.</td></tr>
           <tr><td><code>{@link #Intent_data android:data}</code></td><td> The data URI to assign to the Intent, as per
            {@link android.content.Intent#setData Intent.setData()}.</td></tr>
           <tr><td><code>{@link #Intent_mimeType android:mimeType}</code></td><td> The MIME type name to assign to the Intent, as per
            {@link android.content.Intent#setType Intent.setType()}.</td></tr>
           <tr><td><code>{@link #Intent_targetClass android:targetClass}</code></td><td> The class part of the ComponentName to assign to the Intent, as per
            {@link android.content.Intent#setComponent Intent.setComponent()}.</td></tr>
           <tr><td><code>{@link #Intent_targetPackage android:targetPackage}</code></td><td> The package part of the ComponentName to assign to the Intent, as per
            {@link android.content.Intent#setComponent Intent.setComponent()}.</td></tr>
           </table>
           @see #Intent_action
           @see #Intent_data
           @see #Intent_mimeType
           @see #Intent_targetClass
           @see #Intent_targetPackage
         */
        public static final int[] Intent = {
            0x01010021, 0x01010026, 0x0101002d, 0x0101002e,
            0x0101002f
        };
        /**
          <p>
          @attr description
           The action name to assign to the Intent, as per
            {@link android.content.Intent#setAction Intent.setAction()}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#action}.
          @attr name android:action
        */
        public static final int Intent_action = 2;
        /**
          <p>
          @attr description
           The data URI to assign to the Intent, as per
            {@link android.content.Intent#setData Intent.setData()}.
            <p><em>Note: scheme and host name matching in the Android framework is
            case-sensitive, unlike the formal RFC.  As a result,
            URIs here should always be normalized to use lower case letters
            for these elements (as well as other proper Uri normalization).</em></p> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#data}.
          @attr name android:data
        */
        public static final int Intent_data = 3;
        /**
          <p>
          @attr description
           The MIME type name to assign to the Intent, as per
            {@link android.content.Intent#setType Intent.setType()}.
            <p><em>Note: MIME type matching in the Android framework is
            case-sensitive, unlike formal RFC MIME types.  As a result,
            MIME types here should always use lower case letters.</em></p> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#mimeType}.
          @attr name android:mimeType
        */
        public static final int Intent_mimeType = 1;
        /**
          <p>
          @attr description
           The class part of the ComponentName to assign to the Intent, as per
            {@link android.content.Intent#setComponent Intent.setComponent()}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#targetClass}.
          @attr name android:targetClass
        */
        public static final int Intent_targetClass = 4;
        /**
          <p>
          @attr description
           The package part of the ComponentName to assign to the Intent, as per
            {@link android.content.Intent#setComponent Intent.setComponent()}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#targetPackage}.
          @attr name android:targetPackage
        */
        public static final int Intent_targetPackage = 0;
        /**  A category to add to an Intent, as per
            {@link android.content.Intent#addCategory Intent.addCategory()}. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #IntentCategory_name android:name}</code></td><td> Required name of the category.</td></tr>
           </table>
           @see #IntentCategory_name
         */
        public static final int[] IntentCategory = {
            0x01010003
        };
        /**
          <p>
          @attr description
           Required name of the category. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#name}.
          @attr name android:name
        */
        public static final int IntentCategory_name = 0;
        /** Attributes that can be used with a Keyboard.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_horizontalGap android:horizontalGap}</code></td><td> Default horizontal gap between keys.</td></tr>
           <tr><td><code>{@link #Keyboard_keyHeight android:keyHeight}</code></td><td> Default height of a key, in pixels or percentage of display width.</td></tr>
           <tr><td><code>{@link #Keyboard_keyWidth android:keyWidth}</code></td><td> Default width of a key, in pixels or percentage of display width.</td></tr>
           <tr><td><code>{@link #Keyboard_verticalGap android:verticalGap}</code></td><td> Default vertical gap between rows of keys.</td></tr>
           </table>
           @see #Keyboard_horizontalGap
           @see #Keyboard_keyHeight
           @see #Keyboard_keyWidth
           @see #Keyboard_verticalGap
         */
        public static final int[] Keyboard = {
            0x0101023d, 0x0101023e, 0x0101023f, 0x01010240
        };
        /**
          <p>
          @attr description
           Default horizontal gap between keys. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#horizontalGap}.
          @attr name android:horizontalGap
        */
        public static final int Keyboard_horizontalGap = 2;
        /**
          <p>
          @attr description
           Default height of a key, in pixels or percentage of display width. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keyHeight}.
          @attr name android:keyHeight
        */
        public static final int Keyboard_keyHeight = 1;
        /**
          <p>
          @attr description
           Default width of a key, in pixels or percentage of display width. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keyWidth}.
          @attr name android:keyWidth
        */
        public static final int Keyboard_keyWidth = 0;
        /**
          <p>
          @attr description
           Default vertical gap between rows of keys. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#verticalGap}.
          @attr name android:verticalGap
        */
        public static final int Keyboard_verticalGap = 3;
        /** Attributes that can be used with a KeyboardView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardView_keyBackground android:keyBackground}</code></td><td> Image for the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewHeight android:keyPreviewHeight}</code></td><td> Height of the key press feedback popup.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewLayout android:keyPreviewLayout}</code></td><td> Layout resource for key press feedback.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewOffset android:keyPreviewOffset}</code></td><td> Vertical offset of the key press feedback from the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyTextColor android:keyTextColor}</code></td><td> Color to use for the label in a key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyTextSize android:keyTextSize}</code></td><td> Size of the text for character keys.</td></tr>
           <tr><td><code>{@link #KeyboardView_labelTextSize android:labelTextSize}</code></td><td> Size of the text for custom keys with some text and no icon.</td></tr>
           <tr><td><code>{@link #KeyboardView_popupLayout android:popupLayout}</code></td><td> Layout resource for popup keyboards.</td></tr>
           <tr><td><code>{@link #KeyboardView_shadowColor android:shadowColor}</code></td><td> Place a shadow of the specified color behind the text.</td></tr>
           <tr><td><code>{@link #KeyboardView_shadowRadius android:shadowRadius}</code></td><td> Radius of the shadow.</td></tr>
           <tr><td><code>{@link #KeyboardView_verticalCorrection android:verticalCorrection}</code></td><td> Amount to offset the touch Y coordinate by, for bias correction.</td></tr>
           </table>
           @see #KeyboardView_keyBackground
           @see #KeyboardView_keyPreviewHeight
           @see #KeyboardView_keyPreviewLayout
           @see #KeyboardView_keyPreviewOffset
           @see #KeyboardView_keyTextColor
           @see #KeyboardView_keyTextSize
           @see #KeyboardView_labelTextSize
           @see #KeyboardView_popupLayout
           @see #KeyboardView_shadowColor
           @see #KeyboardView_shadowRadius
           @see #KeyboardView_verticalCorrection
         */
        public static final int[] KeyboardView = {
            0x01010161, 0x01010164, 0x01010233, 0x01010234,
            0x01010235, 0x01010236, 0x01010237, 0x01010238,
            0x01010239, 0x0101023a, 0x0101023b, 0x010102d9
        };
        /**
          <p>
          @attr description
           Image for the key. This image needs to be a StateListDrawable, with the following
             possible states: normal, pressed, checkable, checkable+pressed, checkable+checked,
             checkable+checked+pressed. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keyBackground}.
          @attr name android:keyBackground
        */
        public static final int KeyboardView_keyBackground = 2;
        /**
          <p>
          @attr description
           Height of the key press feedback popup. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keyPreviewHeight}.
          @attr name android:keyPreviewHeight
        */
        public static final int KeyboardView_keyPreviewHeight = 8;
        /**
          <p>
          @attr description
           Layout resource for key press feedback.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keyPreviewLayout}.
          @attr name android:keyPreviewLayout
        */
        public static final int KeyboardView_keyPreviewLayout = 6;
        /**
          <p>
          @attr description
           Vertical offset of the key press feedback from the key. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keyPreviewOffset}.
          @attr name android:keyPreviewOffset
        */
        public static final int KeyboardView_keyPreviewOffset = 7;
        /**
          <p>
          @attr description
           Color to use for the label in a key. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keyTextColor}.
          @attr name android:keyTextColor
        */
        public static final int KeyboardView_keyTextColor = 5;
        /**
          <p>
          @attr description
           Size of the text for character keys. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keyTextSize}.
          @attr name android:keyTextSize
        */
        public static final int KeyboardView_keyTextSize = 3;
        /**
          <p>
          @attr description
           Size of the text for custom keys with some text and no icon. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#labelTextSize}.
          @attr name android:labelTextSize
        */
        public static final int KeyboardView_labelTextSize = 4;
        /**
          <p>
          @attr description
           Layout resource for popup keyboards. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#popupLayout}.
          @attr name android:popupLayout
        */
        public static final int KeyboardView_popupLayout = 10;
        /**
          <p>
          @attr description
           Place a shadow of the specified color behind the text. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#shadowColor}.
          @attr name android:shadowColor
        */
        public static final int KeyboardView_shadowColor = 0;
        /**
          <p>
          @attr description
           Radius of the shadow. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#shadowRadius}.
          @attr name android:shadowRadius
        */
        public static final int KeyboardView_shadowRadius = 1;
        /**
          <p>
          @attr description
           Amount to offset the touch Y coordinate by, for bias correction. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#verticalCorrection}.
          @attr name android:verticalCorrection
        */
        public static final int KeyboardView_verticalCorrection = 9;
        /** Attributes that can be used with a KeyboardViewPreviewState.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardViewPreviewState_state_long_pressable android:state_long_pressable}</code></td><td> State for {@link android.inputmethodservice.KeyboardView KeyboardView}
                key preview background.</td></tr>
           </table>
           @see #KeyboardViewPreviewState_state_long_pressable
         */
        public static final int[] KeyboardViewPreviewState = {
            0x0101023c
        };
        /**
          <p>
          @attr description
           State for {@link android.inputmethodservice.KeyboardView KeyboardView}
                key preview background. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_long_pressable}.
          @attr name android:state_long_pressable
        */
        public static final int KeyboardViewPreviewState_state_long_pressable = 0;
        /** Attributes that can be used with a Keyboard_Key.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Key_codes android:codes}</code></td><td> The unicode value or comma-separated values that this key outputs.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_iconPreview android:iconPreview}</code></td><td> The icon to show in the popup preview.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_isModifier android:isModifier}</code></td><td> Whether this is a modifier key such as Alt or Shift.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_isRepeatable android:isRepeatable}</code></td><td> Whether long-pressing on this key will make it repeat.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_isSticky android:isSticky}</code></td><td> Whether this is a toggle key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyEdgeFlags android:keyEdgeFlags}</code></td><td> Key edge flags.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyIcon android:keyIcon}</code></td><td> The icon to display on the key instead of the label.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLabel android:keyLabel}</code></td><td> The label to display on the key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyOutputText android:keyOutputText}</code></td><td> The string of characters to output when this key is pressed.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyboardMode android:keyboardMode}</code></td><td> Mode of the keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_popupCharacters android:popupCharacters}</code></td><td> The characters to display in the popup keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_popupKeyboard android:popupKeyboard}</code></td><td> The XML keyboard layout of any popup keyboard.</td></tr>
           </table>
           @see #Keyboard_Key_codes
           @see #Keyboard_Key_iconPreview
           @see #Keyboard_Key_isModifier
           @see #Keyboard_Key_isRepeatable
           @see #Keyboard_Key_isSticky
           @see #Keyboard_Key_keyEdgeFlags
           @see #Keyboard_Key_keyIcon
           @see #Keyboard_Key_keyLabel
           @see #Keyboard_Key_keyOutputText
           @see #Keyboard_Key_keyboardMode
           @see #Keyboard_Key_popupCharacters
           @see #Keyboard_Key_popupKeyboard
         */
        public static final int[] Keyboard_Key = {
            0x01010242, 0x01010243, 0x01010244, 0x01010245,
            0x01010246, 0x01010247, 0x01010248, 0x01010249,
            0x0101024a, 0x0101024b, 0x0101024c, 0x0101024d
        };
        /**
          <p>
          @attr description
           The unicode value or comma-separated values that this key outputs. 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#codes}.
          @attr name android:codes
        */
        public static final int Keyboard_Key_codes = 0;
        /**
          <p>
          @attr description
           The icon to show in the popup preview. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#iconPreview}.
          @attr name android:iconPreview
        */
        public static final int Keyboard_Key_iconPreview = 7;
        /**
          <p>
          @attr description
           Whether this is a modifier key such as Alt or Shift. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#isModifier}.
          @attr name android:isModifier
        */
        public static final int Keyboard_Key_isModifier = 4;
        /**
          <p>
          @attr description
           Whether long-pressing on this key will make it repeat. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#isRepeatable}.
          @attr name android:isRepeatable
        */
        public static final int Keyboard_Key_isRepeatable = 6;
        /**
          <p>
          @attr description
           Whether this is a toggle key. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#isSticky}.
          @attr name android:isSticky
        */
        public static final int Keyboard_Key_isSticky = 5;
        /**
          <p>
          @attr description
           Key edge flags. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>1</td><td> Key is anchored to the left of the keyboard. </td></tr>
<tr><td><code>right</code></td><td>2</td><td> Key is anchored to the right of the keyboard. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keyEdgeFlags}.
          @attr name android:keyEdgeFlags
        */
        public static final int Keyboard_Key_keyEdgeFlags = 3;
        /**
          <p>
          @attr description
           The icon to display on the key instead of the label. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keyIcon}.
          @attr name android:keyIcon
        */
        public static final int Keyboard_Key_keyIcon = 10;
        /**
          <p>
          @attr description
           The label to display on the key. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keyLabel}.
          @attr name android:keyLabel
        */
        public static final int Keyboard_Key_keyLabel = 9;
        /**
          <p>
          @attr description
           The string of characters to output when this key is pressed. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keyOutputText}.
          @attr name android:keyOutputText
        */
        public static final int Keyboard_Key_keyOutputText = 8;
        /**
          <p>
          @attr description
           Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the key will be skipped. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keyboardMode}.
          @attr name android:keyboardMode
        */
        public static final int Keyboard_Key_keyboardMode = 11;
        /**
          <p>
          @attr description
           The characters to display in the popup keyboard. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#popupCharacters}.
          @attr name android:popupCharacters
        */
        public static final int Keyboard_Key_popupCharacters = 2;
        /**
          <p>
          @attr description
           The XML keyboard layout of any popup keyboard. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#popupKeyboard}.
          @attr name android:popupKeyboard
        */
        public static final int Keyboard_Key_popupKeyboard = 1;
        /** Attributes that can be used with a Keyboard_Row.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Row_keyboardMode android:keyboardMode}</code></td><td> Mode of the keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Row_rowEdgeFlags android:rowEdgeFlags}</code></td><td> Row edge flags.</td></tr>
           </table>
           @see #Keyboard_Row_keyboardMode
           @see #Keyboard_Row_rowEdgeFlags
         */
        public static final int[] Keyboard_Row = {
            0x01010241, 0x0101024d
        };
        /**
          <p>
          @attr description
           Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the row will be skipped. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keyboardMode}.
          @attr name android:keyboardMode
        */
        public static final int Keyboard_Row_keyboardMode = 1;
        /**
          <p>
          @attr description
           Row edge flags. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>4</td><td> Row is anchored to the top of the keyboard. </td></tr>
<tr><td><code>bottom</code></td><td>8</td><td> Row is anchored to the bottom of the keyboard. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#rowEdgeFlags}.
          @attr name android:rowEdgeFlags
        */
        public static final int Keyboard_Row_rowEdgeFlags = 0;
        /** Attributes that can be used with a LayerDrawableItem.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LayerDrawableItem_bottom android:bottom}</code></td><td></td></tr>
           <tr><td><code>{@link #LayerDrawableItem_drawable android:drawable}</code></td><td> Reference to a drawable resource to use for the frame.</td></tr>
           <tr><td><code>{@link #LayerDrawableItem_id android:id}</code></td><td> Supply an identifier name for this view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.</td></tr>
           <tr><td><code>{@link #LayerDrawableItem_left android:left}</code></td><td></td></tr>
           <tr><td><code>{@link #LayerDrawableItem_right android:right}</code></td><td></td></tr>
           <tr><td><code>{@link #LayerDrawableItem_top android:top}</code></td><td></td></tr>
           </table>
           @see #LayerDrawableItem_bottom
           @see #LayerDrawableItem_drawable
           @see #LayerDrawableItem_id
           @see #LayerDrawableItem_left
           @see #LayerDrawableItem_right
           @see #LayerDrawableItem_top
         */
        public static final int[] LayerDrawableItem = {
            0x010100d0, 0x01010199, 0x010101ad, 0x010101ae,
            0x010101af, 0x010101b0
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#bottom}
          attribute's value can be found in the {@link #LayerDrawableItem} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:bottom
        */
        public static final int LayerDrawableItem_bottom = 5;
        /**
          <p>
          @attr description
           Reference to a drawable resource to use for the frame.  If not
             given, the drawable must be defined by the first child tag. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#drawable}.
          @attr name android:drawable
        */
        public static final int LayerDrawableItem_drawable = 1;
        /**
          <p>
          @attr description
           Supply an identifier name for this view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.
             This must be a
             resource reference; typically you set this using the
             <code>@+</code> syntax to create a new ID resources.
             For example: <code>android:id="@+id/my_id"</code> which
             allows you to later retrieve the view
             with <code>findViewById(R.id.my_id)</code>. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#id}.
          @attr name android:id
        */
        public static final int LayerDrawableItem_id = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#left}
          attribute's value can be found in the {@link #LayerDrawableItem} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:left
        */
        public static final int LayerDrawableItem_left = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#right}
          attribute's value can be found in the {@link #LayerDrawableItem} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:right
        */
        public static final int LayerDrawableItem_right = 4;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#top}
          attribute's value can be found in the {@link #LayerDrawableItem} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:top
        */
        public static final int LayerDrawableItem_top = 3;
        /** Attributes that can be used with a LayoutAnimation.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LayoutAnimation_animation android:animation}</code></td><td> Animation to use on each child.</td></tr>
           <tr><td><code>{@link #LayoutAnimation_animationOrder android:animationOrder}</code></td><td> The order in which the animations will be started.</td></tr>
           <tr><td><code>{@link #LayoutAnimation_delay android:delay}</code></td><td> Fraction of the animation duration used to delay the beginning of
         the animation of each child.</td></tr>
           <tr><td><code>{@link #LayoutAnimation_interpolator android:interpolator}</code></td><td> Interpolator used to interpolate the delay between the start of
         each animation.</td></tr>
           </table>
           @see #LayoutAnimation_animation
           @see #LayoutAnimation_animationOrder
           @see #LayoutAnimation_delay
           @see #LayoutAnimation_interpolator
         */
        public static final int[] LayoutAnimation = {
            0x01010141, 0x010101cc, 0x010101cd, 0x010101ce
        };
        /**
          <p>
          @attr description
           Animation to use on each child. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#animation}.
          @attr name android:animation
        */
        public static final int LayoutAnimation_animation = 2;
        /**
          <p>
          @attr description
           The order in which the animations will be started. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> Animations are started in the natural order. </td></tr>
<tr><td><code>reverse</code></td><td>1</td><td> Animations are started in the reverse order. </td></tr>
<tr><td><code>random</code></td><td>2</td><td> Animations are started randomly. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#animationOrder}.
          @attr name android:animationOrder
        */
        public static final int LayoutAnimation_animationOrder = 3;
        /**
          <p>
          @attr description
           Fraction of the animation duration used to delay the beginning of
         the animation of each child. 


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#delay}.
          @attr name android:delay
        */
        public static final int LayoutAnimation_delay = 1;
        /**
          <p>
          @attr description
           Interpolator used to interpolate the delay between the start of
         each animation. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#interpolator}.
          @attr name android:interpolator
        */
        public static final int LayoutAnimation_interpolator = 0;
        /** Attributes that can be used with a LevelListDrawableItem.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LevelListDrawableItem_drawable android:drawable}</code></td><td> Reference to a drawable resource to use for the frame.</td></tr>
           <tr><td><code>{@link #LevelListDrawableItem_maxLevel android:maxLevel}</code></td><td> The maximum level allowed for this item.</td></tr>
           <tr><td><code>{@link #LevelListDrawableItem_minLevel android:minLevel}</code></td><td> The minimum level allowed for this item.</td></tr>
           </table>
           @see #LevelListDrawableItem_drawable
           @see #LevelListDrawableItem_maxLevel
           @see #LevelListDrawableItem_minLevel
         */
        public static final int[] LevelListDrawableItem = {
            0x01010199, 0x010101b1, 0x010101b2
        };
        /**
          <p>
          @attr description
           Reference to a drawable resource to use for the frame.  If not
             given, the drawable must be defined by the first child tag. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#drawable}.
          @attr name android:drawable
        */
        public static final int LevelListDrawableItem_drawable = 0;
        /**
          <p>
          @attr description
           The maximum level allowed for this item. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#maxLevel}.
          @attr name android:maxLevel
        */
        public static final int LevelListDrawableItem_maxLevel = 2;
        /**
          <p>
          @attr description
           The minimum level allowed for this item. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#minLevel}.
          @attr name android:minLevel
        */
        public static final int LevelListDrawableItem_minLevel = 1;
        /** Attributes that can be used with a LinearLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LinearLayout_baselineAligned android:baselineAligned}</code></td><td> When set to false, prevents the layout from aligning its children's
             baselines.</td></tr>
           <tr><td><code>{@link #LinearLayout_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td> When a linear layout is part of another layout that is baseline
          aligned, it can specify which of its children to baseline align to
          (that is, which child TextView).</td></tr>
           <tr><td><code>{@link #LinearLayout_gravity android:gravity}</code></td><td> Specifies how to place the content of an object, both
         on the x- and y-axis, within the object itself.</td></tr>
           <tr><td><code>{@link #LinearLayout_orientation android:orientation}</code></td><td> Should the layout be a column or a row?  Use "horizontal"
             for a row, "vertical" for a column.</td></tr>
           <tr><td><code>{@link #LinearLayout_weightSum android:weightSum}</code></td><td> Defines the maximum weight sum.</td></tr>
           </table>
           @see #LinearLayout_baselineAligned
           @see #LinearLayout_baselineAlignedChildIndex
           @see #LinearLayout_gravity
           @see #LinearLayout_orientation
           @see #LinearLayout_weightSum
         */
        public static final int[] LinearLayout = {
            0x010100af, 0x010100c4, 0x01010126, 0x01010127,
            0x01010128, 0x010102d2
        };
        /**
          <p>
          @attr description
           When set to false, prevents the layout from aligning its children's
             baselines. This attribute is particularly useful when the children
             use different values for gravity. The default value is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#baselineAligned}.
          @attr name android:baselineAligned
        */
        public static final int LinearLayout_baselineAligned = 2;
        /**
          <p>
          @attr description
           When a linear layout is part of another layout that is baseline
          aligned, it can specify which of its children to baseline align to
          (that is, which child TextView).


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#baselineAlignedChildIndex}.
          @attr name android:baselineAlignedChildIndex
        */
        public static final int LinearLayout_baselineAlignedChildIndex = 3;
        /**
          <p>
          @attr description
           Specifies how to place the content of an object, both
         on the x- and y-axis, within the object itself. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#gravity}.
          @attr name android:gravity
        */
        public static final int LinearLayout_gravity = 0;
        /**
          <p>
          @attr description
           Should the layout be a column or a row?  Use "horizontal"
             for a row, "vertical" for a column.  The default is
             horizontal. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
<tr><td><code>none</code></td><td>2</td><td> no orientation (lockscreen hack only for gestures.) </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#orientation}.
          @attr name android:orientation
        */
        public static final int LinearLayout_orientation = 1;
        /**
          <p>
          @attr description
           Defines the maximum weight sum. If unspecified, the sum is computed
             by adding the layout_weight of all of the children. This can be
             used for instance to give a single child 50% of the total available
             space by giving it a layout_weight of 0.5 and setting the weightSum
             to 1.0. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#weightSum}.
          @attr name android:weightSum
        */
        public static final int LinearLayout_weightSum = 4;
        /** Attributes that can be used with a LinearLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LinearLayout_Layout_layout_gravity android:layout_gravity}</code></td><td> Standard gravity constant that a child can supply to its parent.</td></tr>
           <tr><td><code>{@link #LinearLayout_Layout_layout_height android:layout_height}</code></td><td> Specifies the basic height of the view.</td></tr>
           <tr><td><code>{@link #LinearLayout_Layout_layout_weight android:layout_weight}</code></td><td></td></tr>
           <tr><td><code>{@link #LinearLayout_Layout_layout_width android:layout_width}</code></td><td> Specifies the basic width of the view.</td></tr>
           </table>
           @see #LinearLayout_Layout_layout_gravity
           @see #LinearLayout_Layout_layout_height
           @see #LinearLayout_Layout_layout_weight
           @see #LinearLayout_Layout_layout_width
         */
        public static final int[] LinearLayout_Layout = {
            0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
        };
        /**
          <p>
          @attr description
           Standard gravity constant that a child can supply to its parent.
         Defines how to place the view, both its x- and y-axis, within its parent view group. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_gravity}.
          @attr name android:layout_gravity
        */
        public static final int LinearLayout_Layout_layout_gravity = 0;
        /**
          <p>
          @attr description
           Specifies the basic height of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant height or one of
             the special constants. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_height}.
          @attr name android:layout_height
        */
        public static final int LinearLayout_Layout_layout_height = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
          attribute's value can be found in the {@link #LinearLayout_Layout} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:layout_weight
        */
        public static final int LinearLayout_Layout_layout_weight = 3;
        /**
          <p>
          @attr description
           Specifies the basic width of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant width or one of
             the special constants. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_width}.
          @attr name android:layout_width
        */
        public static final int LinearLayout_Layout_layout_width = 1;
        /**  Base attributes available to ListPreference. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ListPreference_entries android:entries}</code></td><td> The human-readable array to present as a list.</td></tr>
           <tr><td><code>{@link #ListPreference_entryValues android:entryValues}</code></td><td> The array to find the value to save for a preference when an entry from
             entries is selected.</td></tr>
           </table>
           @see #ListPreference_entries
           @see #ListPreference_entryValues
         */
        public static final int[] ListPreference = {
            0x010100b2, 0x010101f8
        };
        /**
          <p>
          @attr description
           The human-readable array to present as a list. Each entry must have a corresponding
             index in entryValues. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#entries}.
          @attr name android:entries
        */
        public static final int ListPreference_entries = 0;
        /**
          <p>
          @attr description
           The array to find the value to save for a preference when an entry from
             entries is selected. If a user clicks on the second item in entries, the
             second item in this array will be saved to the preference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#entryValues}.
          @attr name android:entryValues
        */
        public static final int ListPreference_entryValues = 1;
        /** Attributes that can be used with a ListView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ListView_choiceMode android:choiceMode}</code></td><td> Defines the choice behavior for the ListView.</td></tr>
           <tr><td><code>{@link #ListView_divider android:divider}</code></td><td> Drawable or color to draw between list items.</td></tr>
           <tr><td><code>{@link #ListView_dividerHeight android:dividerHeight}</code></td><td> Height of the divider.</td></tr>
           <tr><td><code>{@link #ListView_entries android:entries}</code></td><td> Reference to an array resource that will populate the ListView.</td></tr>
           <tr><td><code>{@link #ListView_footerDividersEnabled android:footerDividersEnabled}</code></td><td> When set to false, the ListView will not draw the divider before each footer view.</td></tr>
           <tr><td><code>{@link #ListView_headerDividersEnabled android:headerDividersEnabled}</code></td><td> When set to false, the ListView will not draw the divider after each header view.</td></tr>
           <tr><td><code>{@link #ListView_overScrollFooter android:overScrollFooter}</code></td><td> Drawable to draw below list content.</td></tr>
           <tr><td><code>{@link #ListView_overScrollHeader android:overScrollHeader}</code></td><td> Drawable to draw above list content.</td></tr>
           </table>
           @see #ListView_choiceMode
           @see #ListView_divider
           @see #ListView_dividerHeight
           @see #ListView_entries
           @see #ListView_footerDividersEnabled
           @see #ListView_headerDividersEnabled
           @see #ListView_overScrollFooter
           @see #ListView_overScrollHeader
         */
        public static final int[] ListView = {
            0x010100b2, 0x01010129, 0x0101012a, 0x0101012b,
            0x0101022e, 0x0101022f, 0x010102c2, 0x010102c3
        };
        /**
          <p>
          @attr description
           Defines the choice behavior for the ListView. By default, lists do not have
             any choice behavior. By setting the choiceMode to singleChoice, the List
             allows up to one item to be in a chosen state. By setting the choiceMode to
             multipleChoice, the list allows any number of items to be chosen. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Normal list that does not indicate choices. </td></tr>
<tr><td><code>singleChoice</code></td><td>1</td><td> The list allows up to one choice. </td></tr>
<tr><td><code>multipleChoice</code></td><td>2</td><td> The list allows multiple choices. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#choiceMode}.
          @attr name android:choiceMode
        */
        public static final int ListView_choiceMode = 3;
        /**
          <p>
          @attr description
           Drawable or color to draw between list items. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#divider}.
          @attr name android:divider
        */
        public static final int ListView_divider = 1;
        /**
          <p>
          @attr description
           Height of the divider. Will use the intrinsic height of the divider if this
             is not specified. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dividerHeight}.
          @attr name android:dividerHeight
        */
        public static final int ListView_dividerHeight = 2;
        /**
          <p>
          @attr description
           Reference to an array resource that will populate the ListView.  For static content,
             this is simpler than populating the ListView programmatically. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#entries}.
          @attr name android:entries
        */
        public static final int ListView_entries = 0;
        /**
          <p>
          @attr description
           When set to false, the ListView will not draw the divider before each footer view.
             The default value is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#footerDividersEnabled}.
          @attr name android:footerDividersEnabled
        */
        public static final int ListView_footerDividersEnabled = 5;
        /**
          <p>
          @attr description
           When set to false, the ListView will not draw the divider after each header view.
             The default value is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#headerDividersEnabled}.
          @attr name android:headerDividersEnabled
        */
        public static final int ListView_headerDividersEnabled = 4;
        /**
          <p>
          @attr description
           Drawable to draw below list content. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#overScrollFooter}.
          @attr name android:overScrollFooter
        */
        public static final int ListView_overScrollFooter = 7;
        /**
          <p>
          @attr description
           Drawable to draw above list content. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#overScrollHeader}.
          @attr name android:overScrollHeader
        */
        public static final int ListView_overScrollHeader = 6;
        /** Attributes that can be used with a LockPatternView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           </table>
         */
        public static final int[] LockPatternView = {
            0x010102da
        };
        /**  The set of attributes for a MapView. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MapView_apiKey android:apiKey}</code></td><td> Value is a string that specifies the Maps API Key to use.</td></tr>
           </table>
           @see #MapView_apiKey
         */
        public static final int[] MapView = {
            0x01010211
        };
        /**
          <p>
          @attr description
           Value is a string that specifies the Maps API Key to use. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#apiKey}.
          @attr name android:apiKey
        */
        public static final int MapView_apiKey = 0;
        /**  Base attributes that are available to all Menu objects. 
         */
        public static final int[] Menu = {
            
        };
        /**  Base attributes that are available to all groups. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuGroup_checkableBehavior android:checkableBehavior}</code></td><td> Whether the items are capable of displaying a check mark.</td></tr>
           <tr><td><code>{@link #MenuGroup_enabled android:enabled}</code></td><td> Whether the items are enabled.</td></tr>
           <tr><td><code>{@link #MenuGroup_id android:id}</code></td><td> The ID of the group.</td></tr>
           <tr><td><code>{@link #MenuGroup_menuCategory android:menuCategory}</code></td><td> The category applied to all items within this group.</td></tr>
           <tr><td><code>{@link #MenuGroup_orderInCategory android:orderInCategory}</code></td><td> The order within the category applied to all items within this group.</td></tr>
           <tr><td><code>{@link #MenuGroup_visible android:visible}</code></td><td> Whether the items are shown/visible.</td></tr>
           </table>
           @see #MenuGroup_checkableBehavior
           @see #MenuGroup_enabled
           @see #MenuGroup_id
           @see #MenuGroup_menuCategory
           @see #MenuGroup_orderInCategory
           @see #MenuGroup_visible
         */
        public static final int[] MenuGroup = {
            0x0101000e, 0x010100d0, 0x01010194, 0x010101de,
            0x010101df, 0x010101e0
        };
        /**
          <p>
          @attr description
           Whether the items are capable of displaying a check mark. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> The items are not checkable. </td></tr>
<tr><td><code>all</code></td><td>1</td><td> The items are all checkable. </td></tr>
<tr><td><code>single</code></td><td>2</td><td> The items are checkable and there will only be a single checked item in
                 this group. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#checkableBehavior}.
          @attr name android:checkableBehavior
        */
        public static final int MenuGroup_checkableBehavior = 5;
        /**
          <p>
          @attr description
           Whether the items are enabled. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#enabled}.
          @attr name android:enabled
        */
        public static final int MenuGroup_enabled = 0;
        /**
          <p>
          @attr description
           The ID of the group. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#id}.
          @attr name android:id
        */
        public static final int MenuGroup_id = 1;
        /**
          <p>
          @attr description
           The category applied to all items within this group.
             (This will be or'ed with the orderInCategory attribute.) 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>container</code></td><td>0x00010000</td><td> Items are part of a container. </td></tr>
<tr><td><code>system</code></td><td>0x00020000</td><td> Items are provided by the system. </td></tr>
<tr><td><code>secondary</code></td><td>0x00030000</td><td> Items are user-supplied secondary (infrequently used). </td></tr>
<tr><td><code>alternative</code></td><td>0x00040000</td><td> Items are alternative actions. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#menuCategory}.
          @attr name android:menuCategory
        */
        public static final int MenuGroup_menuCategory = 3;
        /**
          <p>
          @attr description
           The order within the category applied to all items within this group.
             (This will be or'ed with the category attribute.) 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#orderInCategory}.
          @attr name android:orderInCategory
        */
        public static final int MenuGroup_orderInCategory = 4;
        /**
          <p>
          @attr description
           Whether the items are shown/visible. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#visible}.
          @attr name android:visible
        */
        public static final int MenuGroup_visible = 2;
        /**  Base attributes that are available to all Item objects. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuItem_alphabeticShortcut android:alphabeticShortcut}</code></td><td> The alphabetic shortcut key.</td></tr>
           <tr><td><code>{@link #MenuItem_checkable android:checkable}</code></td><td> Whether the item is capable of displaying a check mark.</td></tr>
           <tr><td><code>{@link #MenuItem_checked android:checked}</code></td><td> Whether the item is checked.</td></tr>
           <tr><td><code>{@link #MenuItem_enabled android:enabled}</code></td><td> Whether the item is enabled.</td></tr>
           <tr><td><code>{@link #MenuItem_icon android:icon}</code></td><td> The icon associated with this item.</td></tr>
           <tr><td><code>{@link #MenuItem_id android:id}</code></td><td> The ID of the item.</td></tr>
           <tr><td><code>{@link #MenuItem_menuCategory android:menuCategory}</code></td><td> The category applied to the item.</td></tr>
           <tr><td><code>{@link #MenuItem_numericShortcut android:numericShortcut}</code></td><td> The numeric shortcut key.</td></tr>
           <tr><td><code>{@link #MenuItem_orderInCategory android:orderInCategory}</code></td><td> The order within the category applied to the item.</td></tr>
           <tr><td><code>{@link #MenuItem_title android:title}</code></td><td> The title associated with the item.</td></tr>
           <tr><td><code>{@link #MenuItem_titleCondensed android:titleCondensed}</code></td><td> The condensed title associated with the item.</td></tr>
           <tr><td><code>{@link #MenuItem_visible android:visible}</code></td><td> Whether the item is shown/visible.</td></tr>
           </table>
           @see #MenuItem_alphabeticShortcut
           @see #MenuItem_checkable
           @see #MenuItem_checked
           @see #MenuItem_enabled
           @see #MenuItem_icon
           @see #MenuItem_id
           @see #MenuItem_menuCategory
           @see #MenuItem_numericShortcut
           @see #MenuItem_orderInCategory
           @see #MenuItem_title
           @see #MenuItem_titleCondensed
           @see #MenuItem_visible
         */
        public static final int[] MenuItem = {
            0x01010002, 0x0101000e, 0x010100d0, 0x01010106,
            0x01010194, 0x010101de, 0x010101df, 0x010101e1,
            0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5
        };
        /**
          <p>
          @attr description
           The alphabetic shortcut key.  This is the shortcut when using a keyboard
             with alphabetic keys. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#alphabeticShortcut}.
          @attr name android:alphabeticShortcut
        */
        public static final int MenuItem_alphabeticShortcut = 9;
        /**
          <p>
          @attr description
           Whether the item is capable of displaying a check mark. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#checkable}.
          @attr name android:checkable
        */
        public static final int MenuItem_checkable = 11;
        /**
          <p>
          @attr description
           Whether the item is checked.  Note that you must first have enabled checking with
             the checkable attribute or else the check mark will not appear. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#checked}.
          @attr name android:checked
        */
        public static final int MenuItem_checked = 3;
        /**
          <p>
          @attr description
           Whether the item is enabled. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#enabled}.
          @attr name android:enabled
        */
        public static final int MenuItem_enabled = 1;
        /**
          <p>
          @attr description
           The icon associated with this item.  This icon will not always be shown, so
             the title should be sufficient in describing this item. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int MenuItem_icon = 0;
        /**
          <p>
          @attr description
           The ID of the item. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#id}.
          @attr name android:id
        */
        public static final int MenuItem_id = 2;
        /**
          <p>
          @attr description
           The category applied to the item.
             (This will be or'ed with the orderInCategory attribute.) 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>container</code></td><td>0x00010000</td><td> Items are part of a container. </td></tr>
<tr><td><code>system</code></td><td>0x00020000</td><td> Items are provided by the system. </td></tr>
<tr><td><code>secondary</code></td><td>0x00030000</td><td> Items are user-supplied secondary (infrequently used). </td></tr>
<tr><td><code>alternative</code></td><td>0x00040000</td><td> Items are alternative actions. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#menuCategory}.
          @attr name android:menuCategory
        */
        public static final int MenuItem_menuCategory = 5;
        /**
          <p>
          @attr description
           The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
             keyboard. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#numericShortcut}.
          @attr name android:numericShortcut
        */
        public static final int MenuItem_numericShortcut = 10;
        /**
          <p>
          @attr description
           The order within the category applied to the item.
             (This will be or'ed with the category attribute.) 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#orderInCategory}.
          @attr name android:orderInCategory
        */
        public static final int MenuItem_orderInCategory = 6;
        /**
          <p>
          @attr description
           The title associated with the item. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#title}.
          @attr name android:title
        */
        public static final int MenuItem_title = 7;
        /**
          <p>
          @attr description
           The condensed title associated with the item.  This is used in situations where the
             normal title may be too long to be displayed. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#titleCondensed}.
          @attr name android:titleCondensed
        */
        public static final int MenuItem_titleCondensed = 8;
        /**
          <p>
          @attr description
           Whether the item is shown/visible. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#visible}.
          @attr name android:visible
        */
        public static final int MenuItem_visible = 4;
        /**  State array representing a menu item that is currently focused and checked. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuItemCheckedFocusedState_state_checkable android:state_checkable}</code></td><td>  State identifier indicating that the object <var>may</var> display a check mark.</td></tr>
           <tr><td><code>{@link #MenuItemCheckedFocusedState_state_checked android:state_checked}</code></td><td>  State identifier indicating that the object is currently checked.</td></tr>
           <tr><td><code>{@link #MenuItemCheckedFocusedState_state_focused android:state_focused}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           </table>
           @see #MenuItemCheckedFocusedState_state_checkable
           @see #MenuItemCheckedFocusedState_state_checked
           @see #MenuItemCheckedFocusedState_state_focused
         */
        public static final int[] MenuItemCheckedFocusedState = {
            0x0101009c, 0x0101009f, 0x010100a0
        };
        /**
          <p>
          @attr description
            State identifier indicating that the object <var>may</var> display a check mark.
              See {@link R.attr#state_checked} for the identifier that indicates whether it is
              actually checked. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_checkable}.
          @attr name android:state_checkable
        */
        public static final int MenuItemCheckedFocusedState_state_checkable = 1;
        /**
          <p>
          @attr description
            State identifier indicating that the object is currently checked.  See
              {@link R.attr#state_checkable} for an additional identifier that can indicate if
              any object may ever display a check, regardless of whether state_checked is
              currently set. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_checked}.
          @attr name android:state_checked
        */
        public static final int MenuItemCheckedFocusedState_state_checked = 2;
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_focused}.
          @attr name android:state_focused
        */
        public static final int MenuItemCheckedFocusedState_state_focused = 0;
        /**  State array representing a menu item that is currently checked. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuItemCheckedState_state_checkable android:state_checkable}</code></td><td>  State identifier indicating that the object <var>may</var> display a check mark.</td></tr>
           <tr><td><code>{@link #MenuItemCheckedState_state_checked android:state_checked}</code></td><td>  State identifier indicating that the object is currently checked.</td></tr>
           </table>
           @see #MenuItemCheckedState_state_checkable
           @see #MenuItemCheckedState_state_checked
         */
        public static final int[] MenuItemCheckedState = {
            0x0101009f, 0x010100a0
        };
        /**
          <p>
          @attr description
            State identifier indicating that the object <var>may</var> display a check mark.
              See {@link R.attr#state_checked} for the identifier that indicates whether it is
              actually checked. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_checkable}.
          @attr name android:state_checkable
        */
        public static final int MenuItemCheckedState_state_checkable = 0;
        /**
          <p>
          @attr description
            State identifier indicating that the object is currently checked.  See
              {@link R.attr#state_checkable} for an additional identifier that can indicate if
              any object may ever display a check, regardless of whether state_checked is
              currently set. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_checked}.
          @attr name android:state_checked
        */
        public static final int MenuItemCheckedState_state_checked = 1;
        /**  State array representing a menu item that is focused and checkable but is not currently checked. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuItemUncheckedFocusedState_state_checkable android:state_checkable}</code></td><td>  State identifier indicating that the object <var>may</var> display a check mark.</td></tr>
           <tr><td><code>{@link #MenuItemUncheckedFocusedState_state_focused android:state_focused}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           </table>
           @see #MenuItemUncheckedFocusedState_state_checkable
           @see #MenuItemUncheckedFocusedState_state_focused
         */
        public static final int[] MenuItemUncheckedFocusedState = {
            0x0101009c, 0x0101009f
        };
        /**
          <p>
          @attr description
            State identifier indicating that the object <var>may</var> display a check mark.
              See {@link R.attr#state_checked} for the identifier that indicates whether it is
              actually checked. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_checkable}.
          @attr name android:state_checkable
        */
        public static final int MenuItemUncheckedFocusedState_state_checkable = 1;
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_focused}.
          @attr name android:state_focused
        */
        public static final int MenuItemUncheckedFocusedState_state_focused = 0;
        /**  State array representing a menu item that is checkable but is not currently checked. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuItemUncheckedState_state_checkable android:state_checkable}</code></td><td>  State identifier indicating that the object <var>may</var> display a check mark.</td></tr>
           </table>
           @see #MenuItemUncheckedState_state_checkable
         */
        public static final int[] MenuItemUncheckedState = {
            0x0101009f
        };
        /**
          <p>
          @attr description
            State identifier indicating that the object <var>may</var> display a check mark.
              See {@link R.attr#state_checked} for the identifier that indicates whether it is
              actually checked. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_checkable}.
          @attr name android:state_checkable
        */
        public static final int MenuItemUncheckedState_state_checkable = 0;
        /** Attributes that can be used with a MenuView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuView_headerBackground android:headerBackground}</code></td><td> Default background for the menu header.</td></tr>
           <tr><td><code>{@link #MenuView_horizontalDivider android:horizontalDivider}</code></td><td> Default horizontal divider between rows of menu items.</td></tr>
           <tr><td><code>{@link #MenuView_itemBackground android:itemBackground}</code></td><td> Default background for each menu item.</td></tr>
           <tr><td><code>{@link #MenuView_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td> Default disabled icon alpha for each menu item that shows an icon.</td></tr>
           <tr><td><code>{@link #MenuView_itemTextAppearance android:itemTextAppearance}</code></td><td> Default appearance of menu item text.</td></tr>
           <tr><td><code>{@link #MenuView_verticalDivider android:verticalDivider}</code></td><td> Default vertical divider between menu items.</td></tr>
           <tr><td><code>{@link #MenuView_windowAnimationStyle android:windowAnimationStyle}</code></td><td> Default animations for the menu.</td></tr>
           </table>
           @see #MenuView_headerBackground
           @see #MenuView_horizontalDivider
           @see #MenuView_itemBackground
           @see #MenuView_itemIconDisabledAlpha
           @see #MenuView_itemTextAppearance
           @see #MenuView_verticalDivider
           @see #MenuView_windowAnimationStyle
         */
        public static final int[] MenuView = {
            0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e,
            0x0101012f, 0x01010130, 0x01010131
        };
        /**
          <p>
          @attr description
           Default background for the menu header. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#headerBackground}.
          @attr name android:headerBackground
        */
        public static final int MenuView_headerBackground = 4;
        /**
          <p>
          @attr description
           Default horizontal divider between rows of menu items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#horizontalDivider}.
          @attr name android:horizontalDivider
        */
        public static final int MenuView_horizontalDivider = 2;
        /**
          <p>
          @attr description
           Default background for each menu item. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#itemBackground}.
          @attr name android:itemBackground
        */
        public static final int MenuView_itemBackground = 5;
        /**
          <p>
          @attr description
           Default disabled icon alpha for each menu item that shows an icon. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#itemIconDisabledAlpha}.
          @attr name android:itemIconDisabledAlpha
        */
        public static final int MenuView_itemIconDisabledAlpha = 6;
        /**
          <p>
          @attr description
           Default appearance of menu item text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#itemTextAppearance}.
          @attr name android:itemTextAppearance
        */
        public static final int MenuView_itemTextAppearance = 1;
        /**
          <p>
          @attr description
           Default vertical divider between menu items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#verticalDivider}.
          @attr name android:verticalDivider
        */
        public static final int MenuView_verticalDivider = 3;
        /**
          <p>
          @attr description
           Default animations for the menu. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowAnimationStyle}.
          @attr name android:windowAnimationStyle
        */
        public static final int MenuView_windowAnimationStyle = 0;
        /**  Drawable used to draw 9-patches. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #NinePatchDrawable_dither android:dither}</code></td><td> Enables or disables dithering of the bitmap if the bitmap does not have the
             same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
             an RGB 565 screen).</td></tr>
           <tr><td><code>{@link #NinePatchDrawable_src android:src}</code></td><td> Identifier of the bitmap file.</td></tr>
           </table>
           @see #NinePatchDrawable_dither
           @see #NinePatchDrawable_src
         */
        public static final int[] NinePatchDrawable = {
            0x01010119, 0x0101011c
        };
        /**
          <p>
          @attr description
           Enables or disables dithering of the bitmap if the bitmap does not have the
             same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
             an RGB 565 screen). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dither}.
          @attr name android:dither
        */
        public static final int NinePatchDrawable_dither = 1;
        /**
          <p>
          @attr description
           Identifier of the bitmap file. This attribute is mandatory. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#src}.
          @attr name android:src
        */
        public static final int NinePatchDrawable_src = 0;
        /** Attributes that can be used with a OvershootInterpolator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #OvershootInterpolator_tension android:tension}</code></td><td> This is the amount of tension.</td></tr>
           </table>
           @see #OvershootInterpolator_tension
         */
        public static final int[] OvershootInterpolator = {
            0x0101026a
        };
        /**
          <p>
          @attr description
           This is the amount of tension. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#tension}.
          @attr name android:tension
        */
        public static final int OvershootInterpolator_tension = 0;
        /** Attributes that can be used with a PopupWindow.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PopupWindow_popupAnimationStyle android:popupAnimationStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #PopupWindow_popupBackground android:popupBackground}</code></td><td></td></tr>
           </table>
           @see #PopupWindow_popupAnimationStyle
           @see #PopupWindow_popupBackground
         */
        public static final int[] PopupWindow = {
            0x01010176, 0x010102c9
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#popupAnimationStyle}
          attribute's value can be found in the {@link #PopupWindow} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:popupAnimationStyle
        */
        public static final int PopupWindow_popupAnimationStyle = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
          attribute's value can be found in the {@link #PopupWindow} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name android:popupBackground
        */
        public static final int PopupWindow_popupBackground = 0;
        /** Attributes that can be used with a PopupWindowBackgroundState.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor android:state_above_anchor}</code></td><td> State identifier indicating the popup will be above the anchor.</td></tr>
           </table>
           @see #PopupWindowBackgroundState_state_above_anchor
         */
        public static final int[] PopupWindowBackgroundState = {
            0x010100aa
        };
        /**
          <p>
          @attr description
           State identifier indicating the popup will be above the anchor. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_above_anchor}.
          @attr name android:state_above_anchor
        */
        public static final int PopupWindowBackgroundState_state_above_anchor = 0;
        /**  Base attributes available to Preference. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Preference_defaultValue android:defaultValue}</code></td><td> The default value for the preference, which will be set either if persistence
             is off or persistence is on and the preference is not found in the persistent
             storage.</td></tr>
           <tr><td><code>{@link #Preference_dependency android:dependency}</code></td><td> The key of another Preference that this Preference will depend on.</td></tr>
           <tr><td><code>{@link #Preference_enabled android:enabled}</code></td><td> Whether the Preference is enabled.</td></tr>
           <tr><td><code>{@link #Preference_key android:key}</code></td><td> The key to store the Preference value.</td></tr>
           <tr><td><code>{@link #Preference_layout android:layout}</code></td><td> The layout for the Preference in a PreferenceActivity screen.</td></tr>
           <tr><td><code>{@link #Preference_order android:order}</code></td><td> The order for the Preference (lower values are to be ordered first).</td></tr>
           <tr><td><code>{@link #Preference_persistent android:persistent}</code></td><td> Whether the Preference stores its value to the shared preferences.</td></tr>
           <tr><td><code>{@link #Preference_selectable android:selectable}</code></td><td> Whether the Preference is selectable.</td></tr>
           <tr><td><code>{@link #Preference_shouldDisableView android:shouldDisableView}</code></td><td> Whether the view of this Preference should be disabled when
             this Preference is disabled.</td></tr>
           <tr><td><code>{@link #Preference_summary android:summary}</code></td><td> The summary for the Preference in a PreferenceActivity screen.</td></tr>
           <tr><td><code>{@link #Preference_title android:title}</code></td><td> The title for the Preference in a PreferenceActivity screen.</td></tr>
           <tr><td><code>{@link #Preference_widgetLayout android:widgetLayout}</code></td><td> The layout for the controllable widget portion of a Preference.</td></tr>
           </table>
           @see #Preference_defaultValue
           @see #Preference_dependency
           @see #Preference_enabled
           @see #Preference_key
           @see #Preference_layout
           @see #Preference_order
           @see #Preference_persistent
           @see #Preference_selectable
           @see #Preference_shouldDisableView
           @see #Preference_summary
           @see #Preference_title
           @see #Preference_widgetLayout
         */
        public static final int[] Preference = {
            0x0101000d, 0x0101000e, 0x010100f2, 0x010101e1,
            0x010101e6, 0x010101e8, 0x010101e9, 0x010101ea,
            0x010101eb, 0x010101ec, 0x010101ed, 0x010101ee
        };
        /**
          <p>
          @attr description
           The default value for the preference, which will be set either if persistence
             is off or persistence is on and the preference is not found in the persistent
             storage.  


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>May be a floating point value, such as "<code>1.2</code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#defaultValue}.
          @attr name android:defaultValue
        */
        public static final int Preference_defaultValue = 10;
        /**
          <p>
          @attr description
           The key of another Preference that this Preference will depend on.  If the other
             Preference is not set or is off, this Preference will be disabled. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dependency}.
          @attr name android:dependency
        */
        public static final int Preference_dependency = 9;
        /**
          <p>
          @attr description
           Whether the Preference is enabled. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#enabled}.
          @attr name android:enabled
        */
        public static final int Preference_enabled = 1;
        /**
          <p>
          @attr description
           The key to store the Preference value. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#key}.
          @attr name android:key
        */
        public static final int Preference_key = 5;
        /**
          <p>
          @attr description
           The layout for the Preference in a PreferenceActivity screen. This should
             rarely need to be changed, look at widgetLayout instead. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout}.
          @attr name android:layout
        */
        public static final int Preference_layout = 2;
        /**
          <p>
          @attr description
           The order for the Preference (lower values are to be ordered first). If this is not
             specified, the default orderin will be alphabetic. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#order}.
          @attr name android:order
        */
        public static final int Preference_order = 7;
        /**
          <p>
          @attr description
           Whether the Preference stores its value to the shared preferences. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#persistent}.
          @attr name android:persistent
        */
        public static final int Preference_persistent = 0;
        /**
          <p>
          @attr description
           Whether the Preference is selectable. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#selectable}.
          @attr name android:selectable
        */
        public static final int Preference_selectable = 4;
        /**
          <p>
          @attr description
           Whether the view of this Preference should be disabled when
             this Preference is disabled. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#shouldDisableView}.
          @attr name android:shouldDisableView
        */
        public static final int Preference_shouldDisableView = 11;
        /**
          <p>
          @attr description
           The summary for the Preference in a PreferenceActivity screen. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#summary}.
          @attr name android:summary
        */
        public static final int Preference_summary = 6;
        /**
          <p>
          @attr description
           The title for the Preference in a PreferenceActivity screen. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#title}.
          @attr name android:title
        */
        public static final int Preference_title = 3;
        /**
          <p>
          @attr description
           The layout for the controllable widget portion of a Preference. This is inflated
             into the layout for a Preference and should be used more frequently than
             the layout attribute. For example, a checkbox preference would specify
             a custom layout (consisting of just the CheckBox) here. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#widgetLayout}.
          @attr name android:widgetLayout
        */
        public static final int Preference_widgetLayout = 8;
        /**  Base attributes available to PreferenceGroup. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PreferenceGroup_orderingFromXml android:orderingFromXml}</code></td><td> Whether to order the Preference under this group as they appear in the XML file.</td></tr>
           </table>
           @see #PreferenceGroup_orderingFromXml
         */
        public static final int[] PreferenceGroup = {
            0x010101e7
        };
        /**
          <p>
          @attr description
           Whether to order the Preference under this group as they appear in the XML file.
             If this is false, the ordering will follow the Preference order attribute and
             default to alphabetic for those without the order attribute. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#orderingFromXml}.
          @attr name android:orderingFromXml
        */
        public static final int PreferenceGroup_orderingFromXml = 0;
        /** Attributes that can be used with a ProgressBar.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ProgressBar_indeterminate android:indeterminate}</code></td><td> Allows to enable the indeterminate mode.</td></tr>
           <tr><td><code>{@link #ProgressBar_indeterminateBehavior android:indeterminateBehavior}</code></td><td> Defines how the indeterminate mode should behave when the progress
        reaches max.</td></tr>
           <tr><td><code>{@link #ProgressBar_indeterminateDrawable android:indeterminateDrawable}</code></td><td> Drawable used for the indeterminate mode.</td></tr>
           <tr><td><code>{@link #ProgressBar_indeterminateDuration android:indeterminateDuration}</code></td><td> Duration of the indeterminate animation.</td></tr>
           <tr><td><code>{@link #ProgressBar_indeterminateOnly android:indeterminateOnly}</code></td><td> Restricts to ONLY indeterminate mode (state-keeping progress mode will not work).</td></tr>
           <tr><td><code>{@link #ProgressBar_interpolator android:interpolator}</code></td><td></td></tr>
           <tr><td><code>{@link #ProgressBar_max android:max}</code></td><td> Defines the maximum value the progress can take.</td></tr>
           <tr><td><code>{@link #ProgressBar_maxHeight android:maxHeight}</code></td><td> An optional argument to supply a maximum height for this view.</td></tr>
           <tr><td><code>{@link #ProgressBar_maxWidth android:maxWidth}</code></td><td> An optional argument to supply a maximum width for this view.</td></tr>
           <tr><td><code>{@link #ProgressBar_minHeight android:minHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #ProgressBar_minWidth android:minWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #ProgressBar_progress android:progress}</code></td><td> Defines the default progress value, between 0 and max.</td></tr>
           <tr><td><code>{@link #ProgressBar_progressDrawable android:progressDrawable}</code></td><td> Drawable used for the progress mode.</td></tr>
           <tr><td><code>{@link #ProgressBar_secondaryProgress android:secondaryProgress}</code></td><td> Defines the secondary progress value, between 0 and max.</td></tr>
           </table>
           @see #ProgressBar_indeterminate
           @see #ProgressBar_indeterminateBehavior
           @see #ProgressBar_indeterminateDrawable
           @see #ProgressBar_indeterminateDuration
           @see #ProgressBar_indeterminateOnly
           @see #ProgressBar_interpolator
           @see #ProgressBar_max
           @see #ProgressBar_maxHeight
           @see #ProgressBar_maxWidth
           @see #ProgressBar_minHeight
           @see #ProgressBar_minWidth
           @see #ProgressBar_progress
           @see #ProgressBar_progressDrawable
           @see #ProgressBar_secondaryProgress
         */
        public static final int[] ProgressBar = {
            0x0101011f, 0x01010120, 0x01010136, 0x01010137,
            0x01010138, 0x01010139, 0x0101013a, 0x0101013b,
            0x0101013c, 0x0101013d, 0x0101013e, 0x0101013f,
            0x01010140, 0x01010141
        };
        /**
          <p>
          @attr description
           Allows to enable the indeterminate mode. In this mode the progress
         bar plays an infinite looping animation. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#indeterminate}.
          @attr name android:indeterminate
        */
        public static final int ProgressBar_indeterminate = 5;
        /**
          <p>
          @attr description
           Defines how the indeterminate mode should behave when the progress
        reaches max. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>repeat</code></td><td>1</td><td> Progress starts over from 0. </td></tr>
<tr><td><code>cycle</code></td><td>2</td><td> Progress keeps the current value and goes back to 0. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#indeterminateBehavior}.
          @attr name android:indeterminateBehavior
        */
        public static final int ProgressBar_indeterminateBehavior = 10;
        /**
          <p>
          @attr description
           Drawable used for the indeterminate mode. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#indeterminateDrawable}.
          @attr name android:indeterminateDrawable
        */
        public static final int ProgressBar_indeterminateDrawable = 7;
        /**
          <p>
          @attr description
           Duration of the indeterminate animation. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#indeterminateDuration}.
          @attr name android:indeterminateDuration
        */
        public static final int ProgressBar_indeterminateDuration = 9;
        /**
          <p>
          @attr description
           Restricts to ONLY indeterminate mode (state-keeping progress mode will not work). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#indeterminateOnly}.
          @attr name android:indeterminateOnly
        */
        public static final int ProgressBar_indeterminateOnly = 6;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#interpolator}
          attribute's value can be found in the {@link #ProgressBar} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:interpolator
        */
        public static final int ProgressBar_interpolator = 13;
        /**
          <p>
          @attr description
           Defines the maximum value the progress can take. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#max}.
          @attr name android:max
        */
        public static final int ProgressBar_max = 2;
        /**
          <p>
          @attr description
           An optional argument to supply a maximum height for this view.
             See {see android.widget.ImageView#setMaxHeight} for details. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#maxHeight}.
          @attr name android:maxHeight
        */
        public static final int ProgressBar_maxHeight = 1;
        /**
          <p>
          @attr description
           An optional argument to supply a maximum width for this view.
             See {see android.widget.ImageView#setMaxWidth} for details. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#maxWidth}.
          @attr name android:maxWidth
        */
        public static final int ProgressBar_maxWidth = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#minHeight}
          attribute's value can be found in the {@link #ProgressBar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:minHeight
        */
        public static final int ProgressBar_minHeight = 12;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#minWidth}
          attribute's value can be found in the {@link #ProgressBar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:minWidth
        */
        public static final int ProgressBar_minWidth = 11;
        /**
          <p>
          @attr description
           Defines the default progress value, between 0 and max. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#progress}.
          @attr name android:progress
        */
        public static final int ProgressBar_progress = 3;
        /**
          <p>
          @attr description
           Drawable used for the progress mode. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#progressDrawable}.
          @attr name android:progressDrawable
        */
        public static final int ProgressBar_progressDrawable = 8;
        /**
          <p>
          @attr description
           Defines the secondary progress value, between 0 and max. This progress is drawn between
             the primary progress and the background.  It can be ideal for media scenarios such as
             showing the buffering progress while the default progress shows the play progress. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#secondaryProgress}.
          @attr name android:secondaryProgress
        */
        public static final int ProgressBar_secondaryProgress = 4;
        /** Attributes that can be used with a QuickContactBadge.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           </table>
         */
        public static final int[] QuickContactBadge = {
            0x010102d4
        };
        /** Attributes that can be used with a RadioGroup.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RadioGroup_checkedButton android:checkedButton}</code></td><td> The id of the child radio button that should be checked by default
             within this radio group.</td></tr>
           <tr><td><code>{@link #RadioGroup_orientation android:orientation}</code></td><td> Should the radio group be a column or a row?  Use "horizontal"
             for a row, "vertical" for a column.</td></tr>
           </table>
           @see #RadioGroup_checkedButton
           @see #RadioGroup_orientation
         */
        public static final int[] RadioGroup = {
            0x010100c4, 0x01010148
        };
        /**
          <p>
          @attr description
           The id of the child radio button that should be checked by default
             within this radio group. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#checkedButton}.
          @attr name android:checkedButton
        */
        public static final int RadioGroup_checkedButton = 1;
        /**
          <p>
          @attr description
           Should the radio group be a column or a row?  Use "horizontal"
             for a row, "vertical" for a column.  The default is
             vertical. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
<tr><td><code>none</code></td><td>2</td><td> no orientation (lockscreen hack only for gestures.) </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#orientation}.
          @attr name android:orientation
        */
        public static final int RadioGroup_orientation = 0;
        /** Attributes that can be used with a RatingBar.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RatingBar_isIndicator android:isIndicator}</code></td><td> Whether this rating bar is an indicator (and non-changeable by the user).</td></tr>
           <tr><td><code>{@link #RatingBar_numStars android:numStars}</code></td><td> The number of stars (or rating items) to show.</td></tr>
           <tr><td><code>{@link #RatingBar_rating android:rating}</code></td><td> The rating to set by default.</td></tr>
           <tr><td><code>{@link #RatingBar_stepSize android:stepSize}</code></td><td> The step size of the rating.</td></tr>
           </table>
           @see #RatingBar_isIndicator
           @see #RatingBar_numStars
           @see #RatingBar_rating
           @see #RatingBar_stepSize
         */
        public static final int[] RatingBar = {
            0x01010144, 0x01010145, 0x01010146, 0x01010147
        };
        /**
          <p>
          @attr description
           Whether this rating bar is an indicator (and non-changeable by the user). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#isIndicator}.
          @attr name android:isIndicator
        */
        public static final int RatingBar_isIndicator = 3;
        /**
          <p>
          @attr description
           The number of stars (or rating items) to show. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#numStars}.
          @attr name android:numStars
        */
        public static final int RatingBar_numStars = 0;
        /**
          <p>
          @attr description
           The rating to set by default. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#rating}.
          @attr name android:rating
        */
        public static final int RatingBar_rating = 1;
        /**
          <p>
          @attr description
           The step size of the rating. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#stepSize}.
          @attr name android:stepSize
        */
        public static final int RatingBar_stepSize = 2;
        /**  Use <code>recognition-service</code> as the root tag of the XML resource that
         describes a {@link android.speech.RecognitionService}, which is reference from
         its {@link android.speech.RecognitionService#SERVICE_META_DATA} meta-data entry.
         Described here are the attributes that can be included in that tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RecognitionService_settingsActivity android:settingsActivity}</code></td><td> Component name of an activity that allows the user to modify
             the settings for this service.</td></tr>
           </table>
           @see #RecognitionService_settingsActivity
         */
        public static final int[] RecognitionService = {
            0x01010225
        };
        /**
          <p>
          @attr description
           Component name of an activity that allows the user to modify
             the settings for this service. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#settingsActivity}.
          @attr name android:settingsActivity
        */
        public static final int RecognitionService_settingsActivity = 0;
        /** Attributes that can be used with a RelativeLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RelativeLayout_gravity android:gravity}</code></td><td> Specifies how to place the content of an object, both
         on the x- and y-axis, within the object itself.</td></tr>
           <tr><td><code>{@link #RelativeLayout_ignoreGravity android:ignoreGravity}</code></td><td> Indicates what view should not be affected by gravity.</td></tr>
           </table>
           @see #RelativeLayout_gravity
           @see #RelativeLayout_ignoreGravity
         */
        public static final int[] RelativeLayout = {
            0x010100af, 0x010101ff
        };
        /**
          <p>
          @attr description
           Specifies how to place the content of an object, both
         on the x- and y-axis, within the object itself. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#gravity}.
          @attr name android:gravity
        */
        public static final int RelativeLayout_gravity = 0;
        /**
          <p>
          @attr description
           Indicates what view should not be affected by gravity. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#ignoreGravity}.
          @attr name android:ignoreGravity
        */
        public static final int RelativeLayout_ignoreGravity = 1;
        /** Attributes that can be used with a RelativeLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_above android:layout_above}</code></td><td> Positions the bottom edge of this view above the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignBaseline android:layout_alignBaseline}</code></td><td> Positions the baseline of this view on the baseline of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignBottom android:layout_alignBottom}</code></td><td> Makes the bottom edge of this view match the bottom edge of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignLeft android:layout_alignLeft}</code></td><td> Makes the left edge of this view match the left edge of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignParentBottom android:layout_alignParentBottom}</code></td><td> If true, makes the bottom edge of this view match the bottom edge of the parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignParentLeft android:layout_alignParentLeft}</code></td><td> If true, makes the left edge of this view match the left edge of the parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignParentRight android:layout_alignParentRight}</code></td><td> If true, makes the right edge of this view match the right edge of the parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignParentTop android:layout_alignParentTop}</code></td><td> If true, makes the top edge of this view match the top edge of the parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignRight android:layout_alignRight}</code></td><td> Makes the right edge of this view match the right edge of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignTop android:layout_alignTop}</code></td><td> Makes the top edge of this view match the top edge of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignWithParentIfMissing android:layout_alignWithParentIfMissing}</code></td><td> If set to true, the parent will be used as the anchor when the anchor cannot be
             be found for layout_toLeftOf, layout_toRightOf, etc.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_below android:layout_below}</code></td><td> Positions the top edge of this view below the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_centerHorizontal android:layout_centerHorizontal}</code></td><td> If true, centers this child horizontally within its parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_centerInParent android:layout_centerInParent}</code></td><td> If true, centers this child horizontally and vertically within its parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_centerVertical android:layout_centerVertical}</code></td><td> If true, centers this child vertically within its parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_toLeftOf android:layout_toLeftOf}</code></td><td> Positions the right edge of this view to the left of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_toRightOf android:layout_toRightOf}</code></td><td> Positions the left edge of this view to the right of the given anchor view ID.</td></tr>
           </table>
           @see #RelativeLayout_Layout_layout_above
           @see #RelativeLayout_Layout_layout_alignBaseline
           @see #RelativeLayout_Layout_layout_alignBottom
           @see #RelativeLayout_Layout_layout_alignLeft
           @see #RelativeLayout_Layout_layout_alignParentBottom
           @see #RelativeLayout_Layout_layout_alignParentLeft
           @see #RelativeLayout_Layout_layout_alignParentRight
           @see #RelativeLayout_Layout_layout_alignParentTop
           @see #RelativeLayout_Layout_layout_alignRight
           @see #RelativeLayout_Layout_layout_alignTop
           @see #RelativeLayout_Layout_layout_alignWithParentIfMissing
           @see #RelativeLayout_Layout_layout_below
           @see #RelativeLayout_Layout_layout_centerHorizontal
           @see #RelativeLayout_Layout_layout_centerInParent
           @see #RelativeLayout_Layout_layout_centerVertical
           @see #RelativeLayout_Layout_layout_toLeftOf
           @see #RelativeLayout_Layout_layout_toRightOf
         */
        public static final int[] RelativeLayout_Layout = {
            0x01010182, 0x01010183, 0x01010184, 0x01010185,
            0x01010186, 0x01010187, 0x01010188, 0x01010189,
            0x0101018a, 0x0101018b, 0x0101018c, 0x0101018d,
            0x0101018e, 0x0101018f, 0x01010190, 0x01010191,
            0x01010192
        };
        /**
          <p>
          @attr description
           Positions the bottom edge of this view above the given anchor view ID.
            Accommodates bottom margin of this view and top margin of anchor view. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_above}.
          @attr name android:layout_above
        */
        public static final int RelativeLayout_Layout_layout_above = 2;
        /**
          <p>
          @attr description
           Positions the baseline of this view on the baseline of the given anchor view ID. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_alignBaseline}.
          @attr name android:layout_alignBaseline
        */
        public static final int RelativeLayout_Layout_layout_alignBaseline = 4;
        /**
          <p>
          @attr description
           Makes the bottom edge of this view match the bottom edge of the given anchor view ID.
            Accommodates bottom margin. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_alignBottom}.
          @attr name android:layout_alignBottom
        */
        public static final int RelativeLayout_Layout_layout_alignBottom = 8;
        /**
          <p>
          @attr description
           Makes the left edge of this view match the left edge of the given anchor view ID.
            Accommodates left margin. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_alignLeft}.
          @attr name android:layout_alignLeft
        */
        public static final int RelativeLayout_Layout_layout_alignLeft = 5;
        /**
          <p>
          @attr description
           If true, makes the bottom edge of this view match the bottom edge of the parent.
            Accommodates bottom margin. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_alignParentBottom}.
          @attr name android:layout_alignParentBottom
        */
        public static final int RelativeLayout_Layout_layout_alignParentBottom = 12;
        /**
          <p>
          @attr description
           If true, makes the left edge of this view match the left edge of the parent.
            Accommodates left margin. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_alignParentLeft}.
          @attr name android:layout_alignParentLeft
        */
        public static final int RelativeLayout_Layout_layout_alignParentLeft = 9;
        /**
          <p>
          @attr description
           If true, makes the right edge of this view match the right edge of the parent.
            Accommodates right margin. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_alignParentRight}.
          @attr name android:layout_alignParentRight
        */
        public static final int RelativeLayout_Layout_layout_alignParentRight = 11;
        /**
          <p>
          @attr description
           If true, makes the top edge of this view match the top edge of the parent.
            Accommodates top margin. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_alignParentTop}.
          @attr name android:layout_alignParentTop
        */
        public static final int RelativeLayout_Layout_layout_alignParentTop = 10;
        /**
          <p>
          @attr description
           Makes the right edge of this view match the right edge of the given anchor view ID.
            Accommodates right margin. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_alignRight}.
          @attr name android:layout_alignRight
        */
        public static final int RelativeLayout_Layout_layout_alignRight = 7;
        /**
          <p>
          @attr description
           Makes the top edge of this view match the top edge of the given anchor view ID.
            Accommodates top margin. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_alignTop}.
          @attr name android:layout_alignTop
        */
        public static final int RelativeLayout_Layout_layout_alignTop = 6;
        /**
          <p>
          @attr description
           If set to true, the parent will be used as the anchor when the anchor cannot be
             be found for layout_toLeftOf, layout_toRightOf, etc. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_alignWithParentIfMissing}.
          @attr name android:layout_alignWithParentIfMissing
        */
        public static final int RelativeLayout_Layout_layout_alignWithParentIfMissing = 16;
        /**
          <p>
          @attr description
           Positions the top edge of this view below the given anchor view ID.
            Accommodates top margin of this view and bottom margin of anchor view. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_below}.
          @attr name android:layout_below
        */
        public static final int RelativeLayout_Layout_layout_below = 3;
        /**
          <p>
          @attr description
           If true, centers this child horizontally within its parent. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_centerHorizontal}.
          @attr name android:layout_centerHorizontal
        */
        public static final int RelativeLayout_Layout_layout_centerHorizontal = 14;
        /**
          <p>
          @attr description
           If true, centers this child horizontally and vertically within its parent. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_centerInParent}.
          @attr name android:layout_centerInParent
        */
        public static final int RelativeLayout_Layout_layout_centerInParent = 13;
        /**
          <p>
          @attr description
           If true, centers this child vertically within its parent. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_centerVertical}.
          @attr name android:layout_centerVertical
        */
        public static final int RelativeLayout_Layout_layout_centerVertical = 15;
        /**
          <p>
          @attr description
           Positions the right edge of this view to the left of the given anchor view ID.
             Accommodates right margin of this view and left margin of anchor view. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_toLeftOf}.
          @attr name android:layout_toLeftOf
        */
        public static final int RelativeLayout_Layout_layout_toLeftOf = 0;
        /**
          <p>
          @attr description
           Positions the left edge of this view to the right of the given anchor view ID.
            Accommodates left margin of this view and right margin of anchor view. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_toRightOf}.
          @attr name android:layout_toRightOf
        */
        public static final int RelativeLayout_Layout_layout_toRightOf = 1;
        /**  Base attributes available to RingtonePreference. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RingtonePreference_ringtoneType android:ringtoneType}</code></td><td> Which ringtone type(s) to show in the picker.</td></tr>
           <tr><td><code>{@link #RingtonePreference_showDefault android:showDefault}</code></td><td> Whether to show an item for a default sound.</td></tr>
           <tr><td><code>{@link #RingtonePreference_showSilent android:showSilent}</code></td><td> Whether to show an item for 'Silent'.</td></tr>
           </table>
           @see #RingtonePreference_ringtoneType
           @see #RingtonePreference_showDefault
           @see #RingtonePreference_showSilent
         */
        public static final int[] RingtonePreference = {
            0x010101f9, 0x010101fa, 0x010101fb
        };
        /**
          <p>
          @attr description
           Which ringtone type(s) to show in the picker. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ringtone</code></td><td>1</td><td> Ringtones. </td></tr>
<tr><td><code>notification</code></td><td>2</td><td> Notification sounds. </td></tr>
<tr><td><code>alarm</code></td><td>4</td><td> Alarm sounds. </td></tr>
<tr><td><code>all</code></td><td>7</td><td> All available ringtone sounds. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#ringtoneType}.
          @attr name android:ringtoneType
        */
        public static final int RingtonePreference_ringtoneType = 0;
        /**
          <p>
          @attr description
           Whether to show an item for a default sound. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#showDefault}.
          @attr name android:showDefault
        */
        public static final int RingtonePreference_showDefault = 1;
        /**
          <p>
          @attr description
           Whether to show an item for 'Silent'. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#showSilent}.
          @attr name android:showSilent
        */
        public static final int RingtonePreference_showSilent = 2;
        /**  attributes for internal rotary widget used in lock screen and phone app
      @hide 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RotarySelector_orientation android:orientation}</code></td><td> Use "horizontal" or "vertical".</td></tr>
           </table>
           @see #RotarySelector_orientation
         */
        public static final int[] RotarySelector = {
            0x010100c4
        };
        /**
          <p>
          @attr description
           Use "horizontal" or "vertical".  The default is horizontal. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
<tr><td><code>none</code></td><td>2</td><td> no orientation (lockscreen hack only for gestures.) </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#orientation}.
          @attr name android:orientation
        */
        public static final int RotarySelector_orientation = 0;
        /** Attributes that can be used with a RotateAnimation.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RotateAnimation_fromDegrees android:fromDegrees}</code></td><td></td></tr>
           <tr><td><code>{@link #RotateAnimation_pivotX android:pivotX}</code></td><td></td></tr>
           <tr><td><code>{@link #RotateAnimation_pivotY android:pivotY}</code></td><td></td></tr>
           <tr><td><code>{@link #RotateAnimation_toDegrees android:toDegrees}</code></td><td></td></tr>
           </table>
           @see #RotateAnimation_fromDegrees
           @see #RotateAnimation_pivotX
           @see #RotateAnimation_pivotY
           @see #RotateAnimation_toDegrees
         */
        public static final int[] RotateAnimation = {
            0x010101b3, 0x010101b4, 0x010101b5, 0x010101b6
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#fromDegrees}
          attribute's value can be found in the {@link #RotateAnimation} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:fromDegrees
        */
        public static final int RotateAnimation_fromDegrees = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#pivotX}
          attribute's value can be found in the {@link #RotateAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:pivotX
        */
        public static final int RotateAnimation_pivotX = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#pivotY}
          attribute's value can be found in the {@link #RotateAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:pivotY
        */
        public static final int RotateAnimation_pivotY = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#toDegrees}
          attribute's value can be found in the {@link #RotateAnimation} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:toDegrees
        */
        public static final int RotateAnimation_toDegrees = 1;
        /** Attributes that can be used with a RotateDrawable.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RotateDrawable_drawable android:drawable}</code></td><td> Reference to a drawable resource to use for the frame.</td></tr>
           <tr><td><code>{@link #RotateDrawable_fromDegrees android:fromDegrees}</code></td><td></td></tr>
           <tr><td><code>{@link #RotateDrawable_pivotX android:pivotX}</code></td><td></td></tr>
           <tr><td><code>{@link #RotateDrawable_pivotY android:pivotY}</code></td><td></td></tr>
           <tr><td><code>{@link #RotateDrawable_toDegrees android:toDegrees}</code></td><td></td></tr>
           <tr><td><code>{@link #RotateDrawable_visible android:visible}</code></td><td> Provides initial visibility state of the drawable; the default
             value is false.</td></tr>
           </table>
           @see #RotateDrawable_drawable
           @see #RotateDrawable_fromDegrees
           @see #RotateDrawable_pivotX
           @see #RotateDrawable_pivotY
           @see #RotateDrawable_toDegrees
           @see #RotateDrawable_visible
         */
        public static final int[] RotateDrawable = {
            0x01010194, 0x01010199, 0x010101b3, 0x010101b4,
            0x010101b5, 0x010101b6
        };
        /**
          <p>
          @attr description
           Reference to a drawable resource to use for the frame.  If not
             given, the drawable must be defined by the first child tag. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#drawable}.
          @attr name android:drawable
        */
        public static final int RotateDrawable_drawable = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#fromDegrees}
          attribute's value can be found in the {@link #RotateDrawable} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:fromDegrees
        */
        public static final int RotateDrawable_fromDegrees = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#pivotX}
          attribute's value can be found in the {@link #RotateDrawable} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:pivotX
        */
        public static final int RotateDrawable_pivotX = 4;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#pivotY}
          attribute's value can be found in the {@link #RotateDrawable} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:pivotY
        */
        public static final int RotateDrawable_pivotY = 5;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#toDegrees}
          attribute's value can be found in the {@link #RotateDrawable} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:toDegrees
        */
        public static final int RotateDrawable_toDegrees = 3;
        /**
          <p>
          @attr description
           Provides initial visibility state of the drawable; the default
             value is false.  See
             {@link android.graphics.drawable.Drawable#setVisible}. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#visible}.
          @attr name android:visible
        */
        public static final int RotateDrawable_visible = 0;
        /** Attributes that can be used with a ScaleAnimation.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ScaleAnimation_fromXScale android:fromXScale}</code></td><td></td></tr>
           <tr><td><code>{@link #ScaleAnimation_fromYScale android:fromYScale}</code></td><td></td></tr>
           <tr><td><code>{@link #ScaleAnimation_pivotX android:pivotX}</code></td><td></td></tr>
           <tr><td><code>{@link #ScaleAnimation_pivotY android:pivotY}</code></td><td></td></tr>
           <tr><td><code>{@link #ScaleAnimation_toXScale android:toXScale}</code></td><td></td></tr>
           <tr><td><code>{@link #ScaleAnimation_toYScale android:toYScale}</code></td><td></td></tr>
           </table>
           @see #ScaleAnimation_fromXScale
           @see #ScaleAnimation_fromYScale
           @see #ScaleAnimation_pivotX
           @see #ScaleAnimation_pivotY
           @see #ScaleAnimation_toXScale
           @see #ScaleAnimation_toYScale
         */
        public static final int[] ScaleAnimation = {
            0x010101b5, 0x010101b6, 0x010101c2, 0x010101c3,
            0x010101c4, 0x010101c5
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#fromXScale}
          attribute's value can be found in the {@link #ScaleAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:fromXScale
        */
        public static final int ScaleAnimation_fromXScale = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#fromYScale}
          attribute's value can be found in the {@link #ScaleAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:fromYScale
        */
        public static final int ScaleAnimation_fromYScale = 4;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#pivotX}
          attribute's value can be found in the {@link #ScaleAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:pivotX
        */
        public static final int ScaleAnimation_pivotX = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#pivotY}
          attribute's value can be found in the {@link #ScaleAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:pivotY
        */
        public static final int ScaleAnimation_pivotY = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#toXScale}
          attribute's value can be found in the {@link #ScaleAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:toXScale
        */
        public static final int ScaleAnimation_toXScale = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#toYScale}
          attribute's value can be found in the {@link #ScaleAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:toYScale
        */
        public static final int ScaleAnimation_toYScale = 5;
        /** Attributes that can be used with a ScaleDrawable.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ScaleDrawable_drawable android:drawable}</code></td><td> Reference to a drawable resource to draw with the specified scale.</td></tr>
           <tr><td><code>{@link #ScaleDrawable_scaleGravity android:scaleGravity}</code></td><td> Specifies where the drawable is positioned after scaling.</td></tr>
           <tr><td><code>{@link #ScaleDrawable_scaleHeight android:scaleHeight}</code></td><td> Scale height, expressed as a percentage of the drawable's bound.</td></tr>
           <tr><td><code>{@link #ScaleDrawable_scaleWidth android:scaleWidth}</code></td><td> Scale width, expressed as a percentage of the drawable's bound.</td></tr>
           </table>
           @see #ScaleDrawable_drawable
           @see #ScaleDrawable_scaleGravity
           @see #ScaleDrawable_scaleHeight
           @see #ScaleDrawable_scaleWidth
         */
        public static final int[] ScaleDrawable = {
            0x01010199, 0x010101fc, 0x010101fd, 0x010101fe
        };
        /**
          <p>
          @attr description
           Reference to a drawable resource to draw with the specified scale. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#drawable}.
          @attr name android:drawable
        */
        public static final int ScaleDrawable_drawable = 0;
        /**
          <p>
          @attr description
           Specifies where the drawable is positioned after scaling. The default value is
             left. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the vertical gravity: a top gravity will clip the bottom
                 edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the horizontal gravity: a left gravity will clip the right
                 edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scaleGravity}.
          @attr name android:scaleGravity
        */
        public static final int ScaleDrawable_scaleGravity = 3;
        /**
          <p>
          @attr description
           Scale height, expressed as a percentage of the drawable's bound. The value's
             format is XX%. For instance: 100%, 12.5%, etc.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scaleHeight}.
          @attr name android:scaleHeight
        */
        public static final int ScaleDrawable_scaleHeight = 2;
        /**
          <p>
          @attr description
           Scale width, expressed as a percentage of the drawable's bound. The value's
             format is XX%. For instance: 100%, 12.5%, etc.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scaleWidth}.
          @attr name android:scaleWidth
        */
        public static final int ScaleDrawable_scaleWidth = 1;
        /** Attributes that can be used with a ScrollView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ScrollView_fillViewport android:fillViewport}</code></td><td> Defines whether the scrollview should stretch its content to fill the viewport.</td></tr>
           </table>
           @see #ScrollView_fillViewport
         */
        public static final int[] ScrollView = {
            0x0101017a
        };
        /**
          <p>
          @attr description
           Defines whether the scrollview should stretch its content to fill the viewport. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#fillViewport}.
          @attr name android:fillViewport
        */
        public static final int ScrollView_fillViewport = 0;
        /**  Searchable activities and applications must provide search configuration information
        in an XML file, typically called searchable.xml.  This file is referenced in your manifest.
        For a more in-depth discussion of search configuration, please refer to
        {@link android.app.SearchManager}. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Searchable_autoUrlDetect android:autoUrlDetect}</code></td><td> If provided and <code>true</code>, URLs entered in the search dialog while searching
             within this activity would be detected and treated as URLs (show a 'go' button in the
             keyboard and invoke the browser directly when user launches the URL instead of passing
             the URL to the activity).</td></tr>
           <tr><td><code>{@link #Searchable_hint android:hint}</code></td><td> If supplied, this string will be displayed as a hint to the user.</td></tr>
           <tr><td><code>{@link #Searchable_icon android:icon}</code></td><td><strong>This is deprecated.</td></tr>
           <tr><td><code>{@link #Searchable_imeOptions android:imeOptions}</code></td><td> Additional features you can enable in an IME associated with an editor
         to improve the integration with your application.</td></tr>
           <tr><td><code>{@link #Searchable_includeInGlobalSearch android:includeInGlobalSearch}</code></td><td> If provided and <code>true</code>, this searchable activity will be
             included in any global lists of search targets.</td></tr>
           <tr><td><code>{@link #Searchable_inputType android:inputType}</code></td><td> The type of data being placed in a text field, used to help an
         input method decide how to let the user enter text.</td></tr>
           <tr><td><code>{@link #Searchable_label android:label}</code></td><td> This is the user-displayed name of the searchable activity.</td></tr>
           <tr><td><code>{@link #Searchable_queryAfterZeroResults android:queryAfterZeroResults}</code></td><td> If provided and <code>true</code>, this searchable activity will be invoked for all
             queries in a particular session.</td></tr>
           <tr><td><code>{@link #Searchable_searchButtonText android:searchButtonText}</code></td><td> If supplied, this string will be displayed as the text of the "Search" button.</td></tr>
           <tr><td><code>{@link #Searchable_searchMode android:searchMode}</code></td><td> Additional features are controlled by mode bits in this field.</td></tr>
           <tr><td><code>{@link #Searchable_searchSettingsDescription android:searchSettingsDescription}</code></td><td> If provided, this string will be used to describe the searchable item in the
             searchable items settings within system search settings.</td></tr>
           <tr><td><code>{@link #Searchable_searchSuggestAuthority android:searchSuggestAuthority}</code></td><td> If provided, this is the trigger indicating that the searchable activity
            provides suggestions as well.</td></tr>
           <tr><td><code>{@link #Searchable_searchSuggestIntentAction android:searchSuggestIntentAction}</code></td><td> If provided, and not overridden by an action in the selected suggestion, this
            string will be placed in the action field of the {@link android.content.Intent Intent}
            when the user clicks a suggestion.</td></tr>
           <tr><td><code>{@link #Searchable_searchSuggestIntentData android:searchSuggestIntentData}</code></td><td> If provided, and not overridden by an action in the selected suggestion, this
            string will be placed in the data field of the {@link android.content.Intent Intent}
            when the user clicks a suggestion.</td></tr>
           <tr><td><code>{@link #Searchable_searchSuggestPath android:searchSuggestPath}</code></td><td> If provided, this will be inserted in the suggestions query Uri, after the authority
            you have provide but before the standard suggestions path.</td></tr>
           <tr><td><code>{@link #Searchable_searchSuggestSelection android:searchSuggestSelection}</code></td><td> If provided, suggestion queries will be passed into your query function
            as the <i>selection</i> parameter.</td></tr>
           <tr><td><code>{@link #Searchable_searchSuggestThreshold android:searchSuggestThreshold}</code></td><td> If provided, this is the minimum number of characters needed to trigger
             search suggestions.</td></tr>
           <tr><td><code>{@link #Searchable_voiceLanguage android:voiceLanguage}</code></td><td> If provided, this specifies the spoken language to be expected, and that it will be
             different than the one set in the {@link java.util.Locale#getDefault()}.</td></tr>
           <tr><td><code>{@link #Searchable_voiceLanguageModel android:voiceLanguageModel}</code></td><td> If provided, this specifies the language model that should be used by the
             voice recognition system.</td></tr>
           <tr><td><code>{@link #Searchable_voiceMaxResults android:voiceMaxResults}</code></td><td> If provided, enforces the maximum number of results to return, including the "best"
             result which will always be provided as the SEARCH intent's primary query.</td></tr>
           <tr><td><code>{@link #Searchable_voicePromptText android:voicePromptText}</code></td><td> If provided, this specifies a prompt that will be displayed during voice input.</td></tr>
           <tr><td><code>{@link #Searchable_voiceSearchMode android:voiceSearchMode}</code></td><td> Voice search features are controlled by mode bits in this field.</td></tr>
           </table>
           @see #Searchable_autoUrlDetect
           @see #Searchable_hint
           @see #Searchable_icon
           @see #Searchable_imeOptions
           @see #Searchable_includeInGlobalSearch
           @see #Searchable_inputType
           @see #Searchable_label
           @see #Searchable_queryAfterZeroResults
           @see #Searchable_searchButtonText
           @see #Searchable_searchMode
           @see #Searchable_searchSettingsDescription
           @see #Searchable_searchSuggestAuthority
           @see #Searchable_searchSuggestIntentAction
           @see #Searchable_searchSuggestIntentData
           @see #Searchable_searchSuggestPath
           @see #Searchable_searchSuggestSelection
           @see #Searchable_searchSuggestThreshold
           @see #Searchable_voiceLanguage
           @see #Searchable_voiceLanguageModel
           @see #Searchable_voiceMaxResults
           @see #Searchable_voicePromptText
           @see #Searchable_voiceSearchMode
         */
        public static final int[] Searchable = {
            0x01010001, 0x01010002, 0x01010150, 0x010101d5,
            0x010101d6, 0x010101d7, 0x010101d8, 0x010101d9,
            0x010101da, 0x01010205, 0x01010220, 0x01010252,
            0x01010253, 0x01010254, 0x01010255, 0x01010256,
            0x01010264, 0x0101026d, 0x0101026e, 0x01010282,
            0x0101028a, 0x0101028c
        };
        /**
          <p>
          @attr description
           If provided and <code>true</code>, URLs entered in the search dialog while searching
             within this activity would be detected and treated as URLs (show a 'go' button in the
             keyboard and invoke the browser directly when user launches the URL instead of passing
             the URL to the activity). If set to <code>false</code> any URLs entered are treated as
             normal query text.
             The default value is <code>false</code>. <i>Optional attribute.</i>. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#autoUrlDetect}.
          @attr name android:autoUrlDetect
        */
        public static final int Searchable_autoUrlDetect = 21;
        /**
          <p>
          @attr description
           If supplied, this string will be displayed as a hint to the user.  <i>Optional
            attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#hint}.
          @attr name android:hint
        */
        public static final int Searchable_hint = 2;
        /**
          <p>
          @attr description
          <strong>This is deprecated.</strong><br/>The default
              application icon is now always used, so this attribute is
              obsolete.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int Searchable_icon = 1;
        /**
          <p>
          @attr description
           Additional features you can enable in an IME associated with an editor
         to improve the integration with your application.  The constants
         here correspond to those defined by
         {@link android.view.inputmethod.EditorInfo#imeOptions}. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0x00000000</td><td> There are no special semantics associated with this editor. </td></tr>
<tr><td><code>actionUnspecified</code></td><td>0x00000000</td><td> There is no specific action associated with this editor, let the
             editor come up with its own if it can.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_NULL}. </td></tr>
<tr><td><code>actionNone</code></td><td>0x00000001</td><td> This editor has no action associated with it.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NONE}. </td></tr>
<tr><td><code>actionGo</code></td><td>0x00000002</td><td> The action key performs a "go"
             operation to take the user to the target of the text they typed.
             Typically used, for example, when entering a URL.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_GO}. </td></tr>
<tr><td><code>actionSearch</code></td><td>0x00000003</td><td> The action key performs a "search"
             operation, taking the user to the results of searching for the text
             the have typed (in whatever context is appropriate).
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEARCH}. </td></tr>
<tr><td><code>actionSend</code></td><td>0x00000004</td><td> The action key performs a "send"
             operation, delivering the text to its target.  This is typically used
             when composing a message.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEND}. </td></tr>
<tr><td><code>actionNext</code></td><td>0x00000005</td><td> The action key performs a "next"
             operation, taking the user to the next field that will accept text.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NEXT}. </td></tr>
<tr><td><code>actionDone</code></td><td>0x00000006</td><td> The action key performs a "done"
             operation, closing the soft input method.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_DONE}. </td></tr>
<tr><td><code>flagNoExtractUi</code></td><td>0x10000000</td><td> Used to specify that the IME does not need
             to show its extracted text UI.  For input methods that may be fullscreen,
             often when in landscape mode, this allows them to be smaller and let part
             of the application be shown behind.  Though there will likely be limited
             access to the application available from the user, it can make the
             experience of a (mostly) fullscreen IME less jarring.  Note that when
             this flag is specified the IME may <em>not</em> be set up to be able
             to display text, so it should only be used in situations where this is
             not needed.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_EXTRACT_UI}. </td></tr>
<tr><td><code>flagNoAccessoryAction</code></td><td>0x20000000</td><td> Used in conjunction with a custom action, this indicates that the
             action should not be available as an accessory button when the
             input method is full-screen.
             Note that by setting this flag, there can be cases where the action
             is simply never available to the user.  Setting this generally means
             that you think showing text being edited is more important than the
             action you have supplied.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ACCESSORY_ACTION}. </td></tr>
<tr><td><code>flagNoEnterAction</code></td><td>0x40000000</td><td> Used in conjunction with a custom action,
             this indicates that the action should not be available in-line as
             a replacement for the "enter" key.  Typically this is
             because the action has such a significant impact or is not recoverable
             enough that accidentally hitting it should be avoided, such as sending
             a message.    Note that {@link android.widget.TextView} will
             automatically set this flag for you on multi-line text views.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ENTER_ACTION}. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#imeOptions}.
          @attr name android:imeOptions
        */
        public static final int Searchable_imeOptions = 16;
        /**
          <p>
          @attr description
           If provided and <code>true</code>, this searchable activity will be
             included in any global lists of search targets.
             The default value is <code>false</code>. <i>Optional attribute.</i>. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#includeInGlobalSearch}.
          @attr name android:includeInGlobalSearch
        */
        public static final int Searchable_includeInGlobalSearch = 18;
        /**
          <p>
          @attr description
           The type of data being placed in a text field, used to help an
         input method decide how to let the user enter text.  The constants
         here correspond to those defined by
         {@link android.text.InputType}.  Generally you can select
         a single value, though some can be combined together as
         indicated.  Setting this attribute to anything besides
         <var>none</var> also implies that the text is editable. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> There is no content type.  The text is not editable. </td></tr>
<tr><td><code>text</code></td><td>0x00000001</td><td> Just plain old text.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_NORMAL}. </td></tr>
<tr><td><code>textCapCharacters</code></td><td>0x00001001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of all characters.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_CHARACTERS}. </td></tr>
<tr><td><code>textCapWords</code></td><td>0x00002001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every word.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_WORDS}. </td></tr>
<tr><td><code>textCapSentences</code></td><td>0x00004001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every sentence.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_SENTENCES}. </td></tr>
<tr><td><code>textAutoCorrect</code></td><td>0x00008001</td><td> Can be combined with <var>text</var> and its variations to
             request auto-correction of text being input.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_CORRECT}. </td></tr>
<tr><td><code>textAutoComplete</code></td><td>0x00010001</td><td> Can be combined with <var>text</var> and its variations to
             specify that this field will be doing its own auto-completion and
             talking with the input method appropriately.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_COMPLETE}. </td></tr>
<tr><td><code>textMultiLine</code></td><td>0x00020001</td><td> Can be combined with <var>text</var> and its variations to
             allow multiple lines of text in the field.  If this flag is not set,
             the text field will be constrained to a single line.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_MULTI_LINE}. </td></tr>
<tr><td><code>textImeMultiLine</code></td><td>0x00040001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that though the regular text view should not be multiple
             lines, the IME should provide multiple lines if it can.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_IME_MULTI_LINE}. </td></tr>
<tr><td><code>textNoSuggestions</code></td><td>0x00080001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that the IME should not show any
             dictionary-based word suggestions.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_NO_SUGGESTIONS}. </td></tr>
<tr><td><code>textUri</code></td><td>0x00000011</td><td> Text that will be used as a URI.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_URI}. </td></tr>
<tr><td><code>textEmailAddress</code></td><td>0x00000021</td><td> Text that will be used as an e-mail address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textEmailSubject</code></td><td>0x00000031</td><td> Text that is being supplied as the subject of an e-mail.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_SUBJECT}. </td></tr>
<tr><td><code>textShortMessage</code></td><td>0x00000041</td><td> Text that is the content of a short message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_SHORT_MESSAGE}. </td></tr>
<tr><td><code>textLongMessage</code></td><td>0x00000051</td><td> Text that is the content of a long message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_LONG_MESSAGE}. </td></tr>
<tr><td><code>textPersonName</code></td><td>0x00000061</td><td> Text that is the name of a person.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PERSON_NAME}. </td></tr>
<tr><td><code>textPostalAddress</code></td><td>0x00000071</td><td> Text that is being supplied as a postal mailing address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_POSTAL_ADDRESS}. </td></tr>
<tr><td><code>textPassword</code></td><td>0x00000081</td><td> Text that is a password.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>textVisiblePassword</code></td><td>0x00000091</td><td> Text that is a password that should be visible.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_VISIBLE_PASSWORD}. </td></tr>
<tr><td><code>textWebEditText</code></td><td>0x000000a1</td><td> Text that is being supplied as text in a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EDIT_TEXT}. </td></tr>
<tr><td><code>textFilter</code></td><td>0x000000b1</td><td> Text that is filtering some other data.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_FILTER}. </td></tr>
<tr><td><code>textPhonetic</code></td><td>0x000000c1</td><td> Text that is for phonetic pronunciation, such as a phonetic name
             field in a contact entry.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PHONETIC}. </td></tr>
<tr><td><code>number</code></td><td>0x00000002</td><td> A numeric only field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER}. </td></tr>
<tr><td><code>numberSigned</code></td><td>0x00001002</td><td> Can be combined with <var>number</var> and its other options to
             allow a signed number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_SIGNED}. </td></tr>
<tr><td><code>numberDecimal</code></td><td>0x00002002</td><td> Can be combined with <var>number</var> and its other options to
             allow a decimal (fractional) number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_DECIMAL}. </td></tr>
<tr><td><code>phone</code></td><td>0x00000003</td><td> For entering a phone number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_PHONE}. </td></tr>
<tr><td><code>datetime</code></td><td>0x00000004</td><td> For entering a date and time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_NORMAL}. </td></tr>
<tr><td><code>date</code></td><td>0x00000014</td><td> For entering a date.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_DATE}. </td></tr>
<tr><td><code>time</code></td><td>0x00000024</td><td> For entering a time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_TIME}. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#inputType}.
          @attr name android:inputType
        */
        public static final int Searchable_inputType = 10;
        /**
          <p>
          @attr description
           This is the user-displayed name of the searchable activity.  <i>Required
            attribute.</i> 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#label}.
          @attr name android:label
        */
        public static final int Searchable_label = 0;
        /**
          <p>
          @attr description
           If provided and <code>true</code>, this searchable activity will be invoked for all
             queries in a particular session. If set to <code>false</code> and the activity
             returned zero results for a query, it will not be invoked again in that session for
             supersets of that zero-results query. For example, if the activity returned zero
             results for "bo", it would not be queried again for "bob".
             The default value is <code>false</code>. <i>Optional attribute.</i>. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#queryAfterZeroResults}.
          @attr name android:queryAfterZeroResults
        */
        public static final int Searchable_queryAfterZeroResults = 19;
        /**
          <p>
          @attr description
           If supplied, this string will be displayed as the text of the "Search" button.
          <i>Optional attribute.</i>
          {@deprecated This will create a non-standard UI appearance, because the search bar UI is
                       changing to use only icons for its buttons.}


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#searchButtonText}.
          @attr name android:searchButtonText
        */
        @Deprecated
        public static final int Searchable_searchButtonText = 9;
        /**
          <p>
          @attr description
           Additional features are controlled by mode bits in this field.  Omitting
            this field, or setting to zero, provides default behavior.  <i>Optional attribute.</i>
        


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>showSearchLabelAsBadge</code></td><td>0x04</td><td> If set, this flag enables the display of the search target (label) within the
               search bar.  If neither bad mode is selected, no badge will be shown. </td></tr>
<tr><td><code>showSearchIconAsBadge</code></td><td>0x08</td><td><strong>This is deprecated.</strong><br/>The default
              application icon is now always used, so this option is
              obsolete.</td></tr>
<tr><td><code>queryRewriteFromData</code></td><td>0x10</td><td> If set, this flag causes the suggestion column SUGGEST_COLUMN_INTENT_DATA to
               be considered as the text for suggestion query rewriting.  This should only
               be used when the values in SUGGEST_COLUMN_INTENT_DATA are suitable for user
               inspection and editing - typically, HTTP/HTTPS Uri's. </td></tr>
<tr><td><code>queryRewriteFromText</code></td><td>0x20</td><td> If set, this flag causes the suggestion column SUGGEST_COLUMN_TEXT_1 to
               be considered as the text for suggestion query rewriting.  This should be used
               for suggestions in which no query text is provided and the SUGGEST_COLUMN_INTENT_DATA
               values are not suitable for user inspection and editing. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#searchMode}.
          @attr name android:searchMode
        */
        public static final int Searchable_searchMode = 3;
        /**
          <p>
          @attr description
           If provided, this string will be used to describe the searchable item in the
             searchable items settings within system search settings. <i>Optional
             attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#searchSettingsDescription}.
          @attr name android:searchSettingsDescription
        */
        public static final int Searchable_searchSettingsDescription = 20;
        /**
          <p>
          @attr description
           If provided, this is the trigger indicating that the searchable activity
            provides suggestions as well.  The value must be a fully-qualified content provider
            authority (e.g. "com.example.android.apis.SuggestionProvider") and should match the
            "android:authorities" tag in your content provider's manifest entry.  <i>Optional
            attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#searchSuggestAuthority}.
          @attr name android:searchSuggestAuthority
        */
        public static final int Searchable_searchSuggestAuthority = 4;
        /**
          <p>
          @attr description
           If provided, and not overridden by an action in the selected suggestion, this
            string will be placed in the action field of the {@link android.content.Intent Intent}
            when the user clicks a suggestion.  <i>Optional attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#searchSuggestIntentAction}.
          @attr name android:searchSuggestIntentAction
        */
        public static final int Searchable_searchSuggestIntentAction = 7;
        /**
          <p>
          @attr description
           If provided, and not overridden by an action in the selected suggestion, this
            string will be placed in the data field of the {@link android.content.Intent Intent}
            when the user clicks a suggestion.  <i>Optional attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#searchSuggestIntentData}.
          @attr name android:searchSuggestIntentData
        */
        public static final int Searchable_searchSuggestIntentData = 8;
        /**
          <p>
          @attr description
           If provided, this will be inserted in the suggestions query Uri, after the authority
            you have provide but before the standard suggestions path. <i>Optional attribute.</i>
            


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#searchSuggestPath}.
          @attr name android:searchSuggestPath
        */
        public static final int Searchable_searchSuggestPath = 5;
        /**
          <p>
          @attr description
           If provided, suggestion queries will be passed into your query function
            as the <i>selection</i> parameter.  Typically this will be a WHERE clause for your
            database, and will contain a single question mark, which represents the actual query
            string that has been typed by the user.  If not provided, then the user query text
            will be appended to the query Uri (after an additional "/".)  <i>Optional
            attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#searchSuggestSelection}.
          @attr name android:searchSuggestSelection
        */
        public static final int Searchable_searchSuggestSelection = 6;
        /**
          <p>
          @attr description
           If provided, this is the minimum number of characters needed to trigger
             search suggestions. The default value is 0. <i>Optional attribute.</i> 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#searchSuggestThreshold}.
          @attr name android:searchSuggestThreshold
        */
        public static final int Searchable_searchSuggestThreshold = 17;
        /**
          <p>
          @attr description
           If provided, this specifies the spoken language to be expected, and that it will be
             different than the one set in the {@link java.util.Locale#getDefault()}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#voiceLanguage}.
          @attr name android:voiceLanguage
        */
        public static final int Searchable_voiceLanguage = 14;
        /**
          <p>
          @attr description
           If provided, this specifies the language model that should be used by the
             voice recognition system.  See
             {@link android.speech.RecognizerIntent#EXTRA_LANGUAGE_MODEL } for more information.
             If not provided, the default value
             {@link android.speech.RecognizerIntent#LANGUAGE_MODEL_FREE_FORM } will be used. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#voiceLanguageModel}.
          @attr name android:voiceLanguageModel
        */
        public static final int Searchable_voiceLanguageModel = 12;
        /**
          <p>
          @attr description
           If provided, enforces the maximum number of results to return, including the "best"
             result which will always be provided as the SEARCH intent's primary query.  Must be one
             or greater.  If not provided, the recognizer will choose how many results to return.
             


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#voiceMaxResults}.
          @attr name android:voiceMaxResults
        */
        public static final int Searchable_voiceMaxResults = 15;
        /**
          <p>
          @attr description
           If provided, this specifies a prompt that will be displayed during voice input. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#voicePromptText}.
          @attr name android:voicePromptText
        */
        public static final int Searchable_voicePromptText = 13;
        /**
          <p>
          @attr description
           Voice search features are controlled by mode bits in this field.  Omitting
            this field, or setting to zero, provides default behavior.
            If showVoiceSearchButton is set, then launchWebSearch or launchRecognizer must
            also be set.  <i>Optional attribute.</i>
        


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>showVoiceSearchButton</code></td><td>0x01</td><td> If set, display a voice search button.  This only takes effect if voice search is
               available on the device. </td></tr>
<tr><td><code>launchWebSearch</code></td><td>0x02</td><td> If set, the voice search button will take the user directly to a built-in
               voice web search activity.  Most applications will not use this flag, as it
               will take the user away from the activity in which search was invoked. </td></tr>
<tr><td><code>launchRecognizer</code></td><td>0x04</td><td> If set, the voice search button will take the user directly to a built-in
               voice recording activity.  This activity will prompt the user to speak,
               transcribe the spoken text, and forward the resulting query
               text to the searchable activity, just as if the user had typed it into
               the search UI and clicked the search button. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#voiceSearchMode}.
          @attr name android:voiceSearchMode
        */
        public static final int Searchable_voiceSearchMode = 11;
        /**  In order to process special action keys during search, you must define them using
            one or more "ActionKey" elements in your Searchable metadata.  For a more in-depth
            discussion of action code handling, please refer to {@link android.app.SearchManager}.
    
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SearchableActionKey_keycode android:keycode}</code></td><td> This attribute denotes the action key you wish to respond to.</td></tr>
           <tr><td><code>{@link #SearchableActionKey_queryActionMsg android:queryActionMsg}</code></td><td> If you wish to handle an action key during normal search query entry, you
            must define an action string here.</td></tr>
           <tr><td><code>{@link #SearchableActionKey_suggestActionMsg android:suggestActionMsg}</code></td><td> If you wish to handle an action key while a suggestion is being displayed <i>and
            selected</i>, there are two ways to handle this.</td></tr>
           <tr><td><code>{@link #SearchableActionKey_suggestActionMsgColumn android:suggestActionMsgColumn}</code></td><td> If you wish to handle an action key while a suggestion is being displayed <i>and
            selected</i>, but you do not wish to enable this action key for every suggestion,
            then you can use this attribute to control it on a suggestion-by-suggestion basis.</td></tr>
           </table>
           @see #SearchableActionKey_keycode
           @see #SearchableActionKey_queryActionMsg
           @see #SearchableActionKey_suggestActionMsg
           @see #SearchableActionKey_suggestActionMsgColumn
         */
        public static final int[] SearchableActionKey = {
            0x010100c5, 0x010101db, 0x010101dc, 0x010101dd
        };
        /**
          <p>
          @attr description
           This attribute denotes the action key you wish to respond to.  Note that not
            all action keys are actually supported using this mechanism, as many of them are
            used for typing, navigation, or system functions.  This will be added to the
            {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} intent that is passed to your
            searchable activity.  To examine the key code, use
            {@link android.content.Intent#getIntExtra getIntExtra(SearchManager.ACTION_KEY)}.
            <p>Note, in addition to the keycode, you must also provide one or more of the action
            specifier attributes.  <i>Required attribute.</i> 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>KEYCODE_UNKNOWN</code></td><td>0</td><td></td></tr>
<tr><td><code>KEYCODE_SOFT_LEFT</code></td><td>1</td><td></td></tr>
<tr><td><code>KEYCODE_SOFT_RIGHT</code></td><td>2</td><td></td></tr>
<tr><td><code>KEYCODE_HOME</code></td><td>3</td><td></td></tr>
<tr><td><code>KEYCODE_BACK</code></td><td>4</td><td></td></tr>
<tr><td><code>KEYCODE_CALL</code></td><td>5</td><td></td></tr>
<tr><td><code>KEYCODE_ENDCALL</code></td><td>6</td><td></td></tr>
<tr><td><code>KEYCODE_0</code></td><td>7</td><td></td></tr>
<tr><td><code>KEYCODE_1</code></td><td>8</td><td></td></tr>
<tr><td><code>KEYCODE_2</code></td><td>9</td><td></td></tr>
<tr><td><code>KEYCODE_3</code></td><td>10</td><td></td></tr>
<tr><td><code>KEYCODE_4</code></td><td>11</td><td></td></tr>
<tr><td><code>KEYCODE_5</code></td><td>12</td><td></td></tr>
<tr><td><code>KEYCODE_6</code></td><td>13</td><td></td></tr>
<tr><td><code>KEYCODE_7</code></td><td>14</td><td></td></tr>
<tr><td><code>KEYCODE_8</code></td><td>15</td><td></td></tr>
<tr><td><code>KEYCODE_9</code></td><td>16</td><td></td></tr>
<tr><td><code>KEYCODE_STAR</code></td><td>17</td><td></td></tr>
<tr><td><code>KEYCODE_POUND</code></td><td>18</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_UP</code></td><td>19</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_DOWN</code></td><td>20</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_LEFT</code></td><td>21</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_RIGHT</code></td><td>22</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_CENTER</code></td><td>23</td><td></td></tr>
<tr><td><code>KEYCODE_VOLUME_UP</code></td><td>24</td><td></td></tr>
<tr><td><code>KEYCODE_VOLUME_DOWN</code></td><td>25</td><td></td></tr>
<tr><td><code>KEYCODE_POWER</code></td><td>26</td><td></td></tr>
<tr><td><code>KEYCODE_CAMERA</code></td><td>27</td><td></td></tr>
<tr><td><code>KEYCODE_CLEAR</code></td><td>28</td><td></td></tr>
<tr><td><code>KEYCODE_A</code></td><td>29</td><td></td></tr>
<tr><td><code>KEYCODE_B</code></td><td>30</td><td></td></tr>
<tr><td><code>KEYCODE_C</code></td><td>31</td><td></td></tr>
<tr><td><code>KEYCODE_D</code></td><td>32</td><td></td></tr>
<tr><td><code>KEYCODE_E</code></td><td>33</td><td></td></tr>
<tr><td><code>KEYCODE_F</code></td><td>34</td><td></td></tr>
<tr><td><code>KEYCODE_G</code></td><td>35</td><td></td></tr>
<tr><td><code>KEYCODE_H</code></td><td>36</td><td></td></tr>
<tr><td><code>KEYCODE_I</code></td><td>37</td><td></td></tr>
<tr><td><code>KEYCODE_J</code></td><td>38</td><td></td></tr>
<tr><td><code>KEYCODE_K</code></td><td>39</td><td></td></tr>
<tr><td><code>KEYCODE_L</code></td><td>40</td><td></td></tr>
<tr><td><code>KEYCODE_M</code></td><td>41</td><td></td></tr>
<tr><td><code>KEYCODE_N</code></td><td>42</td><td></td></tr>
<tr><td><code>KEYCODE_O</code></td><td>43</td><td></td></tr>
<tr><td><code>KEYCODE_P</code></td><td>44</td><td></td></tr>
<tr><td><code>KEYCODE_Q</code></td><td>45</td><td></td></tr>
<tr><td><code>KEYCODE_R</code></td><td>46</td><td></td></tr>
<tr><td><code>KEYCODE_S</code></td><td>47</td><td></td></tr>
<tr><td><code>KEYCODE_T</code></td><td>48</td><td></td></tr>
<tr><td><code>KEYCODE_U</code></td><td>49</td><td></td></tr>
<tr><td><code>KEYCODE_V</code></td><td>50</td><td></td></tr>
<tr><td><code>KEYCODE_W</code></td><td>51</td><td></td></tr>
<tr><td><code>KEYCODE_X</code></td><td>52</td><td></td></tr>
<tr><td><code>KEYCODE_Y</code></td><td>53</td><td></td></tr>
<tr><td><code>KEYCODE_Z</code></td><td>54</td><td></td></tr>
<tr><td><code>KEYCODE_COMMA</code></td><td>55</td><td></td></tr>
<tr><td><code>KEYCODE_PERIOD</code></td><td>56</td><td></td></tr>
<tr><td><code>KEYCODE_ALT_LEFT</code></td><td>57</td><td></td></tr>
<tr><td><code>KEYCODE_ALT_RIGHT</code></td><td>58</td><td></td></tr>
<tr><td><code>KEYCODE_SHIFT_LEFT</code></td><td>59</td><td></td></tr>
<tr><td><code>KEYCODE_SHIFT_RIGHT</code></td><td>60</td><td></td></tr>
<tr><td><code>KEYCODE_TAB</code></td><td>61</td><td></td></tr>
<tr><td><code>KEYCODE_SPACE</code></td><td>62</td><td></td></tr>
<tr><td><code>KEYCODE_SYM</code></td><td>63</td><td></td></tr>
<tr><td><code>KEYCODE_EXPLORER</code></td><td>64</td><td></td></tr>
<tr><td><code>KEYCODE_ENVELOPE</code></td><td>65</td><td></td></tr>
<tr><td><code>KEYCODE_ENTER</code></td><td>66</td><td></td></tr>
<tr><td><code>KEYCODE_DEL</code></td><td>67</td><td></td></tr>
<tr><td><code>KEYCODE_GRAVE</code></td><td>68</td><td></td></tr>
<tr><td><code>KEYCODE_MINUS</code></td><td>69</td><td></td></tr>
<tr><td><code>KEYCODE_EQUALS</code></td><td>70</td><td></td></tr>
<tr><td><code>KEYCODE_LEFT_BRACKET</code></td><td>71</td><td></td></tr>
<tr><td><code>KEYCODE_RIGHT_BRACKET</code></td><td>72</td><td></td></tr>
<tr><td><code>KEYCODE_BACKSLASH</code></td><td>73</td><td></td></tr>
<tr><td><code>KEYCODE_SEMICOLON</code></td><td>74</td><td></td></tr>
<tr><td><code>KEYCODE_APOSTROPHE</code></td><td>75</td><td></td></tr>
<tr><td><code>KEYCODE_SLASH</code></td><td>76</td><td></td></tr>
<tr><td><code>KEYCODE_AT</code></td><td>77</td><td></td></tr>
<tr><td><code>KEYCODE_NUM</code></td><td>78</td><td></td></tr>
<tr><td><code>KEYCODE_HEADSETHOOK</code></td><td>79</td><td></td></tr>
<tr><td><code>KEYCODE_FOCUS</code></td><td>80</td><td></td></tr>
<tr><td><code>KEYCODE_PLUS</code></td><td>81</td><td></td></tr>
<tr><td><code>KEYCODE_MENU</code></td><td>82</td><td></td></tr>
<tr><td><code>KEYCODE_NOTIFICATION</code></td><td>83</td><td></td></tr>
<tr><td><code>KEYCODE_SEARCH</code></td><td>84</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_PLAY_PAUSE</code></td><td>85</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_STOP</code></td><td>86</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_NEXT</code></td><td>87</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_PREVIOUS</code></td><td>88</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_REWIND</code></td><td>89</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_FAST_FORWARD</code></td><td>90</td><td></td></tr>
<tr><td><code>KEYCODE_MUTE</code></td><td>91</td><td></td></tr>
<tr><td><code>KEYCODE_PAGE_UP</code></td><td>92</td><td></td></tr>
<tr><td><code>KEYCODE_PAGE_DOWN</code></td><td>93</td><td></td></tr>
<tr><td><code>KEYCODE_PICTSYMBOLS</code></td><td>94</td><td></td></tr>
<tr><td><code>KEYCODE_SWITCH_CHARSET</code></td><td>95</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_A</code></td><td>96</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_B</code></td><td>97</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_C</code></td><td>98</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_X</code></td><td>99</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_Y</code></td><td>100</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_Z</code></td><td>101</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_L1</code></td><td>102</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_R1</code></td><td>103</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_L2</code></td><td>104</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_R2</code></td><td>105</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_THUMBL</code></td><td>106</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_THUMBR</code></td><td>107</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_START</code></td><td>108</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_SELECT</code></td><td>109</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_MODE</code></td><td>110</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_1</code></td><td>92</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_2</code></td><td>93</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_3</code></td><td>94</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_4</code></td><td>95</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_5</code></td><td>96</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_6</code></td><td>97</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_7</code></td><td>98</td><td></td></tr>
<tr><td><code>KEYCODE_FUNC_8</code></td><td>99</td><td></td></tr>
<tr><td><code>KEYCODE_QUECHAR</code></td><td>100</td><td></td></tr>
<tr><td><code>KEYCODE_USER1</code></td><td>92</td><td></td></tr>
<tr><td><code>KEYCODE_USER2</code></td><td>93</td><td></td></tr>
<tr><td><code>KEYCODE_USER3</code></td><td>94</td><td></td></tr>
<tr><td><code>KEYCODE_USER4</code></td><td>95</td><td></td></tr>
<tr><td><code>KEYCODE_USER5</code></td><td>96</td><td></td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keycode}.
          @attr name android:keycode
        */
        public static final int SearchableActionKey_keycode = 0;
        /**
          <p>
          @attr description
           If you wish to handle an action key during normal search query entry, you
            must define an action string here.  This will be added to the
            {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} intent that is passed to your
            searchable activity.  To examine the string, use
            {@link android.content.Intent#getStringExtra getStringExtra(SearchManager.ACTION_MSG)}.
            <i>Optional attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#queryActionMsg}.
          @attr name android:queryActionMsg
        */
        public static final int SearchableActionKey_queryActionMsg = 1;
        /**
          <p>
          @attr description
           If you wish to handle an action key while a suggestion is being displayed <i>and
            selected</i>, there are two ways to handle this.  If <i>all</i> of your suggestions
            can handle the action key, you can simply define the action message using this
            attribute.  This will be added to the
            {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} intent that is passed to your
            searchable activity.  To examine the string, use
            {@link android.content.Intent#getStringExtra getStringExtra(SearchManager.ACTION_MSG)}.
            <i>Optional attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#suggestActionMsg}.
          @attr name android:suggestActionMsg
        */
        public static final int SearchableActionKey_suggestActionMsg = 2;
        /**
          <p>
          @attr description
           If you wish to handle an action key while a suggestion is being displayed <i>and
            selected</i>, but you do not wish to enable this action key for every suggestion,
            then you can use this attribute to control it on a suggestion-by-suggestion basis.
            First, you must define a column (and name it here) where your suggestions will include
            the action string.  Then, in your content provider, you must provide this column, and
            when desired, provide data in this column.
            The search manager will look at your suggestion cursor, using the string
            provided here in order to select a column, and will use that to select a string from
            the cursor.  That string will be added to the
            {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} intent that is passed to
            your searchable activity.  To examine the string, use
            {@link android.content.Intent#getStringExtra
            getStringExtra(SearchManager.ACTION_MSG)}.  <i>If the data does not exist for the
            selection suggestion, the action key will be ignored.</i><i>Optional attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#suggestActionMsgColumn}.
          @attr name android:suggestActionMsgColumn
        */
        public static final int SearchableActionKey_suggestActionMsgColumn = 3;
        /** Attributes that can be used with a SeekBar.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SeekBar_thumb android:thumb}</code></td><td> Draws the thumb on a seekbar.</td></tr>
           <tr><td><code>{@link #SeekBar_thumbOffset android:thumbOffset}</code></td><td> An offset for the thumb that allows it to extend out of the range of the track.</td></tr>
           </table>
           @see #SeekBar_thumb
           @see #SeekBar_thumbOffset
         */
        public static final int[] SeekBar = {
            0x01010142, 0x01010143
        };
        /**
          <p>
          @attr description
           Draws the thumb on a seekbar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#thumb}.
          @attr name android:thumb
        */
        public static final int SeekBar_thumb = 0;
        /**
          <p>
          @attr description
           An offset for the thumb that allows it to extend out of the range of the track. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#thumbOffset}.
          @attr name android:thumbOffset
        */
        public static final int SeekBar_thumbOffset = 1;
        /**  Drawable used to draw shapes. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ShapeDrawable_color android:color}</code></td><td> Defines the color of the shape.</td></tr>
           <tr><td><code>{@link #ShapeDrawable_height android:height}</code></td><td> Defines the height of the shape.</td></tr>
           <tr><td><code>{@link #ShapeDrawable_width android:width}</code></td><td> Defines the width of the shape.</td></tr>
           </table>
           @see #ShapeDrawable_color
           @see #ShapeDrawable_height
           @see #ShapeDrawable_width
         */
        public static final int[] ShapeDrawable = {
            0x01010155, 0x01010159, 0x010101a5
        };
        /**
          <p>
          @attr description
           Defines the color of the shape. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#color}.
          @attr name android:color
        */
        public static final int ShapeDrawable_color = 2;
        /**
          <p>
          @attr description
           Defines the height of the shape. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#height}.
          @attr name android:height
        */
        public static final int ShapeDrawable_height = 0;
        /**
          <p>
          @attr description
           Defines the width of the shape. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#width}.
          @attr name android:width
        */
        public static final int ShapeDrawable_width = 1;
        /**  Defines the padding of a ShapeDrawable. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ShapeDrawablePadding_bottom android:bottom}</code></td><td> Bottom padding.</td></tr>
           <tr><td><code>{@link #ShapeDrawablePadding_left android:left}</code></td><td> Left padding.</td></tr>
           <tr><td><code>{@link #ShapeDrawablePadding_right android:right}</code></td><td> Right padding.</td></tr>
           <tr><td><code>{@link #ShapeDrawablePadding_top android:top}</code></td><td> Top padding.</td></tr>
           </table>
           @see #ShapeDrawablePadding_bottom
           @see #ShapeDrawablePadding_left
           @see #ShapeDrawablePadding_right
           @see #ShapeDrawablePadding_top
         */
        public static final int[] ShapeDrawablePadding = {
            0x010101ad, 0x010101ae, 0x010101af, 0x010101b0
        };
        /**
          <p>
          @attr description
           Bottom padding. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#bottom}.
          @attr name android:bottom
        */
        public static final int ShapeDrawablePadding_bottom = 3;
        /**
          <p>
          @attr description
           Left padding. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#left}.
          @attr name android:left
        */
        public static final int ShapeDrawablePadding_left = 0;
        /**
          <p>
          @attr description
           Right padding. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#right}.
          @attr name android:right
        */
        public static final int ShapeDrawablePadding_right = 2;
        /**
          <p>
          @attr description
           Top padding. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#top}.
          @attr name android:top
        */
        public static final int ShapeDrawablePadding_top = 1;
        /**  SlidingDrawer specific attributes. These attributes are used to configure
         a SlidingDrawer from XML. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SlidingDrawer_allowSingleTap android:allowSingleTap}</code></td><td> Indicates whether the drawer can be opened/closed by a single tap
             on the handle.</td></tr>
           <tr><td><code>{@link #SlidingDrawer_animateOnClick android:animateOnClick}</code></td><td> Indicates whether the drawer should be opened/closed with an animation
             when the user clicks the handle.</td></tr>
           <tr><td><code>{@link #SlidingDrawer_bottomOffset android:bottomOffset}</code></td><td> Extra offset for the handle at the bottom of the SlidingDrawer.</td></tr>
           <tr><td><code>{@link #SlidingDrawer_content android:content}</code></td><td> Identifier for the child that represents the drawer's content.</td></tr>
           <tr><td><code>{@link #SlidingDrawer_handle android:handle}</code></td><td> Identifier for the child that represents the drawer's handle.</td></tr>
           <tr><td><code>{@link #SlidingDrawer_orientation android:orientation}</code></td><td> Orientation of the SlidingDrawer.</td></tr>
           <tr><td><code>{@link #SlidingDrawer_topOffset android:topOffset}</code></td><td> Extra offset for the handle at the top of the SlidingDrawer.</td></tr>
           </table>
           @see #SlidingDrawer_allowSingleTap
           @see #SlidingDrawer_animateOnClick
           @see #SlidingDrawer_bottomOffset
           @see #SlidingDrawer_content
           @see #SlidingDrawer_handle
           @see #SlidingDrawer_orientation
           @see #SlidingDrawer_topOffset
         */
        public static final int[] SlidingDrawer = {
            0x010100c4, 0x01010257, 0x01010258, 0x01010259,
            0x0101025a, 0x0101025b, 0x0101025c
        };
        /**
          <p>
          @attr description
           Indicates whether the drawer can be opened/closed by a single tap
             on the handle.  (If false, the user must drag or fling, or click
             using the trackball, to open/close the drawer.)  Default is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#allowSingleTap}.
          @attr name android:allowSingleTap
        */
        public static final int SlidingDrawer_allowSingleTap = 3;
        /**
          <p>
          @attr description
           Indicates whether the drawer should be opened/closed with an animation
             when the user clicks the handle. Default is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#animateOnClick}.
          @attr name android:animateOnClick
        */
        public static final int SlidingDrawer_animateOnClick = 6;
        /**
          <p>
          @attr description
           Extra offset for the handle at the bottom of the SlidingDrawer. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#bottomOffset}.
          @attr name android:bottomOffset
        */
        public static final int SlidingDrawer_bottomOffset = 1;
        /**
          <p>
          @attr description
           Identifier for the child that represents the drawer's content. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#content}.
          @attr name android:content
        */
        public static final int SlidingDrawer_content = 5;
        /**
          <p>
          @attr description
           Identifier for the child that represents the drawer's handle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#handle}.
          @attr name android:handle
        */
        public static final int SlidingDrawer_handle = 4;
        /**
          <p>
          @attr description
           Orientation of the SlidingDrawer. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
<tr><td><code>none</code></td><td>2</td><td> no orientation (lockscreen hack only for gestures.) </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#orientation}.
          @attr name android:orientation
        */
        public static final int SlidingDrawer_orientation = 0;
        /**
          <p>
          @attr description
           Extra offset for the handle at the top of the SlidingDrawer. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#topOffset}.
          @attr name android:topOffset
        */
        public static final int SlidingDrawer_topOffset = 2;
        /** Attributes that can be used with a SlidingTab.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SlidingTab_orientation android:orientation}</code></td><td> Use "horizontal" for a row, "vertical" for a column.</td></tr>
           </table>
           @see #SlidingTab_orientation
         */
        public static final int[] SlidingTab = {
            0x010100c4
        };
        /**
          <p>
          @attr description
           Use "horizontal" for a row, "vertical" for a column.  The default is horizontal. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
<tr><td><code>none</code></td><td>2</td><td> no orientation (lockscreen hack only for gestures.) </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#orientation}.
          @attr name android:orientation
        */
        public static final int SlidingTab_orientation = 0;
        /** Attributes that can be used with a Spinner.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Spinner_prompt android:prompt}</code></td><td> The prompt to display when the spinner's dialog is shown.</td></tr>
           </table>
           @see #Spinner_prompt
         */
        public static final int[] Spinner = {
            0x0101017b
        };
        /**
          <p>
          @attr description
           The prompt to display when the spinner's dialog is shown. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#prompt}.
          @attr name android:prompt
        */
        public static final int Spinner_prompt = 0;
        /** Attributes that can be used with a StateListDrawable.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #StateListDrawable_constantSize android:constantSize}</code></td><td> If true, the drawable's reported internal size will remain
             constant as the state changes; the size is the maximum of all
             of the states.</td></tr>
           <tr><td><code>{@link #StateListDrawable_dither android:dither}</code></td><td> Enables or disables dithering of the bitmap if the bitmap does not have the
             same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
             an RGB 565 screen).</td></tr>
           <tr><td><code>{@link #StateListDrawable_variablePadding android:variablePadding}</code></td><td> If true, allows the drawable's padding to change based on the
             current state that is selected.</td></tr>
           <tr><td><code>{@link #StateListDrawable_visible android:visible}</code></td><td> Provides initial visibility state of the drawable; the default
             value is false.</td></tr>
           </table>
           @see #StateListDrawable_constantSize
           @see #StateListDrawable_dither
           @see #StateListDrawable_variablePadding
           @see #StateListDrawable_visible
         */
        public static final int[] StateListDrawable = {
            0x0101011c, 0x01010194, 0x01010195, 0x01010196
        };
        /**
          <p>
          @attr description
           If true, the drawable's reported internal size will remain
             constant as the state changes; the size is the maximum of all
             of the states.  If false, the size will vary based on the
             current state. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#constantSize}.
          @attr name android:constantSize
        */
        public static final int StateListDrawable_constantSize = 3;
        /**
          <p>
          @attr description
           Enables or disables dithering of the bitmap if the bitmap does not have the
             same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
             an RGB 565 screen). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dither}.
          @attr name android:dither
        */
        public static final int StateListDrawable_dither = 0;
        /**
          <p>
          @attr description
           If true, allows the drawable's padding to change based on the
             current state that is selected.  If false, the padding will
             stay the same (based on the maximum padding of all the states).
             Enabling this feature requires that the owner of the drawable
             deal with performing layout when the state changes, which is
             often not supported. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#variablePadding}.
          @attr name android:variablePadding
        */
        public static final int StateListDrawable_variablePadding = 2;
        /**
          <p>
          @attr description
           Provides initial visibility state of the drawable; the default
             value is false.  See
             {@link android.graphics.drawable.Drawable#setVisible}. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#visible}.
          @attr name android:visible
        */
        public static final int StateListDrawable_visible = 1;
        /**  Use <code>account-authenticator</code> as the root tag of the XML resource that
         describes an account authenticator.
     
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SyncAdapter_accountType android:accountType}</code></td><td> The account type this authenticator handles.</td></tr>
           <tr><td><code>{@link #SyncAdapter_contentAuthority android:contentAuthority}</code></td><td> the authority of a content provider.</td></tr>
           <tr><td><code>{@link #SyncAdapter_supportsUploading android:supportsUploading}</code></td><td></td></tr>
           <tr><td><code>{@link #SyncAdapter_userVisible android:userVisible}</code></td><td></td></tr>
           </table>
           @see #SyncAdapter_accountType
           @see #SyncAdapter_contentAuthority
           @see #SyncAdapter_supportsUploading
           @see #SyncAdapter_userVisible
         */
        public static final int[] SyncAdapter = {
            0x0101028f, 0x01010290, 0x01010291, 0x0101029b
        };
        /**
          <p>
          @attr description
           The account type this authenticator handles. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#accountType}.
          @attr name android:accountType
        */
        public static final int SyncAdapter_accountType = 0;
        /**
          <p>
          @attr description
           the authority of a content provider. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#contentAuthority}.
          @attr name android:contentAuthority
        */
        public static final int SyncAdapter_contentAuthority = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#supportsUploading}
          attribute's value can be found in the {@link #SyncAdapter} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:supportsUploading
        */
        public static final int SyncAdapter_supportsUploading = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#userVisible}
          attribute's value can be found in the {@link #SyncAdapter} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:userVisible
        */
        public static final int SyncAdapter_userVisible = 2;
        /** Attributes that can be used with a TabWidget.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TabWidget_divider android:divider}</code></td><td> Drawable used to draw the divider between tabs.</td></tr>
           <tr><td><code>{@link #TabWidget_tabStripEnabled android:tabStripEnabled}</code></td><td> Determines whether the strip under the tab indicators is drawn or not.</td></tr>
           <tr><td><code>{@link #TabWidget_tabStripLeft android:tabStripLeft}</code></td><td> Drawable used to draw the left part of the strip underneath the tabs.</td></tr>
           <tr><td><code>{@link #TabWidget_tabStripRight android:tabStripRight}</code></td><td> Drawable used to draw the right part of the strip underneath the tabs.</td></tr>
           </table>
           @see #TabWidget_divider
           @see #TabWidget_tabStripEnabled
           @see #TabWidget_tabStripLeft
           @see #TabWidget_tabStripRight
         */
        public static final int[] TabWidget = {
            0x01010129, 0x010102bb, 0x010102bc, 0x010102bd
        };
        /**
          <p>
          @attr description
           Drawable used to draw the divider between tabs. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#divider}.
          @attr name android:divider
        */
        public static final int TabWidget_divider = 0;
        /**
          <p>
          @attr description
           Determines whether the strip under the tab indicators is drawn or not. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#tabStripEnabled}.
          @attr name android:tabStripEnabled
        */
        public static final int TabWidget_tabStripEnabled = 3;
        /**
          <p>
          @attr description
           Drawable used to draw the left part of the strip underneath the tabs. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#tabStripLeft}.
          @attr name android:tabStripLeft
        */
        public static final int TabWidget_tabStripLeft = 1;
        /**
          <p>
          @attr description
           Drawable used to draw the right part of the strip underneath the tabs. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#tabStripRight}.
          @attr name android:tabStripRight
        */
        public static final int TabWidget_tabStripRight = 2;
        /** Attributes that can be used with a TableLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TableLayout_collapseColumns android:collapseColumns}</code></td><td> The zero-based index of the columns to collapse.</td></tr>
           <tr><td><code>{@link #TableLayout_shrinkColumns android:shrinkColumns}</code></td><td> The zero-based index of the columns to shrink.</td></tr>
           <tr><td><code>{@link #TableLayout_stretchColumns android:stretchColumns}</code></td><td> The zero-based index of the columns to stretch.</td></tr>
           </table>
           @see #TableLayout_collapseColumns
           @see #TableLayout_shrinkColumns
           @see #TableLayout_stretchColumns
         */
        public static final int[] TableLayout = {
            0x01010149, 0x0101014a, 0x0101014b
        };
        /**
          <p>
          @attr description
           The zero-based index of the columns to collapse. The column indices
             must be separated by a comma: 1, 2, 5. Illegal and duplicate
             indices are ignored. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#collapseColumns}.
          @attr name android:collapseColumns
        */
        public static final int TableLayout_collapseColumns = 2;
        /**
          <p>
          @attr description
           The zero-based index of the columns to shrink. The column indices
             must be separated by a comma: 1, 2, 5. Illegal and duplicate
             indices are ignored. You can shrink all columns by using the
             value "*" instead. Note that a column can be marked stretchable
             and shrinkable at the same time. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#shrinkColumns}.
          @attr name android:shrinkColumns
        */
        public static final int TableLayout_shrinkColumns = 1;
        /**
          <p>
          @attr description
           The zero-based index of the columns to stretch. The column indices
             must be separated by a comma: 1, 2, 5. Illegal and duplicate
             indices are ignored. You can stretch all columns by using the
             value "*" instead. Note that a column can be marked stretchable
             and shrinkable at the same time. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#stretchColumns}.
          @attr name android:stretchColumns
        */
        public static final int TableLayout_stretchColumns = 0;
        /** Attributes that can be used with a TableRow.
         */
        public static final int[] TableRow = {
            
        };
        /** Attributes that can be used with a TableRow_Cell.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TableRow_Cell_layout_column android:layout_column}</code></td><td> The index of the column in which this child should be.</td></tr>
           <tr><td><code>{@link #TableRow_Cell_layout_span android:layout_span}</code></td><td> Defines how many columns this child should span.</td></tr>
           </table>
           @see #TableRow_Cell_layout_column
           @see #TableRow_Cell_layout_span
         */
        public static final int[] TableRow_Cell = {
            0x0101014c, 0x0101014d
        };
        /**
          <p>
          @attr description
           The index of the column in which this child should be. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_column}.
          @attr name android:layout_column
        */
        public static final int TableRow_Cell_layout_column = 0;
        /**
          <p>
          @attr description
           Defines how many columns this child should span.  Must be >= 1.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_span}.
          @attr name android:layout_span
        */
        public static final int TableRow_Cell_layout_span = 1;
        /** Attributes that can be used with a TextAppearance.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TextAppearance_textColor android:textColor}</code></td><td> Text color.</td></tr>
           <tr><td><code>{@link #TextAppearance_textColorHighlight android:textColorHighlight}</code></td><td> Color of the text selection highlight.</td></tr>
           <tr><td><code>{@link #TextAppearance_textColorHint android:textColorHint}</code></td><td> Color of the hint text.</td></tr>
           <tr><td><code>{@link #TextAppearance_textColorLink android:textColorLink}</code></td><td> Color of the links.</td></tr>
           <tr><td><code>{@link #TextAppearance_textSize android:textSize}</code></td><td> Size of the text.</td></tr>
           <tr><td><code>{@link #TextAppearance_textStyle android:textStyle}</code></td><td> Style (bold, italic, bolditalic) for the text.</td></tr>
           <tr><td><code>{@link #TextAppearance_typeface android:typeface}</code></td><td> Typeface (normal, sans, serif, monospace) for the text.</td></tr>
           </table>
           @see #TextAppearance_textColor
           @see #TextAppearance_textColorHighlight
           @see #TextAppearance_textColorHint
           @see #TextAppearance_textColorLink
           @see #TextAppearance_textSize
           @see #TextAppearance_textStyle
           @see #TextAppearance_typeface
         */
        public static final int[] TextAppearance = {
            0x01010095, 0x01010096, 0x01010097, 0x01010098,
            0x01010099, 0x0101009a, 0x0101009b
        };
        /**
          <p>
          @attr description
           Text color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColor}.
          @attr name android:textColor
        */
        public static final int TextAppearance_textColor = 3;
        /**
          <p>
          @attr description
           Color of the text selection highlight. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorHighlight}.
          @attr name android:textColorHighlight
        */
        public static final int TextAppearance_textColorHighlight = 4;
        /**
          <p>
          @attr description
           Color of the hint text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorHint}.
          @attr name android:textColorHint
        */
        public static final int TextAppearance_textColorHint = 5;
        /**
          <p>
          @attr description
           Color of the links. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorLink}.
          @attr name android:textColorLink
        */
        public static final int TextAppearance_textColorLink = 6;
        /**
          <p>
          @attr description
           Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textSize}.
          @attr name android:textSize
        */
        public static final int TextAppearance_textSize = 0;
        /**
          <p>
          @attr description
           Style (bold, italic, bolditalic) for the text. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textStyle}.
          @attr name android:textStyle
        */
        public static final int TextAppearance_textStyle = 2;
        /**
          <p>
          @attr description
           Typeface (normal, sans, serif, monospace) for the text. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>sans</code></td><td>1</td><td></td></tr>
<tr><td><code>serif</code></td><td>2</td><td></td></tr>
<tr><td><code>monospace</code></td><td>3</td><td></td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#typeface}.
          @attr name android:typeface
        */
        public static final int TextAppearance_typeface = 1;
        /** Attributes that can be used with a TextSwitcher.
         */
        public static final int[] TextSwitcher = {
            
        };
        /** Attributes that can be used with a TextView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TextView_autoLink android:autoLink}</code></td><td> Controls whether links such as urls and email addresses are
         automatically found and converted to clickable links.</td></tr>
           <tr><td><code>{@link #TextView_autoText android:autoText}</code></td><td> If set, specifies that this TextView has a textual input method
             and automatically corrects some common spelling errors.</td></tr>
           <tr><td><code>{@link #TextView_bufferType android:bufferType}</code></td><td> Determines the minimum type that getText() will return.</td></tr>
           <tr><td><code>{@link #TextView_capitalize android:capitalize}</code></td><td> If set, specifies that this TextView has a textual input method
             and should automatically capitalize what the user types.</td></tr>
           <tr><td><code>{@link #TextView_cursorVisible android:cursorVisible}</code></td><td> Makes the cursor visible (the default) or invisible.</td></tr>
           <tr><td><code>{@link #TextView_digits android:digits}</code></td><td> If set, specifies that this TextView has a numeric input method
             and that these specific characters are the ones that it will
             accept.</td></tr>
           <tr><td><code>{@link #TextView_drawableBottom android:drawableBottom}</code></td><td> The drawable to be drawn below the text.</td></tr>
           <tr><td><code>{@link #TextView_drawableLeft android:drawableLeft}</code></td><td> The drawable to be drawn to the left of the text.</td></tr>
           <tr><td><code>{@link #TextView_drawablePadding android:drawablePadding}</code></td><td> The padding between the drawables and the text.</td></tr>
           <tr><td><code>{@link #TextView_drawableRight android:drawableRight}</code></td><td> The drawable to be drawn to the right of the text.</td></tr>
           <tr><td><code>{@link #TextView_drawableTop android:drawableTop}</code></td><td> The drawable to be drawn above the text.</td></tr>
           <tr><td><code>{@link #TextView_editable android:editable}</code></td><td> If set, specifies that this TextView has an input method.</td></tr>
           <tr><td><code>{@link #TextView_editorExtras android:editorExtras}</code></td><td> Reference to an
             {@link android.R.styleable#InputExtras &lt;input-extras&gt;}
             XML resource containing additional data to
             supply to an input method, which is private to the implementation
             of the input method.</td></tr>
           <tr><td><code>{@link #TextView_ellipsize android:ellipsize}</code></td><td> If set, causes words that are longer than the view is wide
             to be ellipsized instead of broken in the middle.</td></tr>
           <tr><td><code>{@link #TextView_ems android:ems}</code></td><td> Makes the TextView be exactly this many ems wide.</td></tr>
           <tr><td><code>{@link #TextView_enabled android:enabled}</code></td><td> Specifies whether the TextView is enabled or not.</td></tr>
           <tr><td><code>{@link #TextView_freezesText android:freezesText}</code></td><td> If set, the text view will include its current complete text
             inside of its frozen icicle in addition to meta-data such as
             the current cursor position.</td></tr>
           <tr><td><code>{@link #TextView_gravity android:gravity}</code></td><td> Specifies how to align the text by the view's x- and/or y-axis
             when the text is smaller than the view.</td></tr>
           <tr><td><code>{@link #TextView_height android:height}</code></td><td> Makes the TextView be exactly this many pixels tall.</td></tr>
           <tr><td><code>{@link #TextView_hint android:hint}</code></td><td> Hint text to display when the text is empty.</td></tr>
           <tr><td><code>{@link #TextView_imeActionId android:imeActionId}</code></td><td> Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionId EditorInfo.actionId}
             used when an input method is connected to the text view.</td></tr>
           <tr><td><code>{@link #TextView_imeActionLabel android:imeActionLabel}</code></td><td> Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionLabel EditorInfo.actionLabel}
             used when an input method is connected to the text view.</td></tr>
           <tr><td><code>{@link #TextView_imeOptions android:imeOptions}</code></td><td> Additional features you can enable in an IME associated with an editor
         to improve the integration with your application.</td></tr>
           <tr><td><code>{@link #TextView_includeFontPadding android:includeFontPadding}</code></td><td> Leave enough room for ascenders and descenders instead of
             using the font ascent and descent strictly.</td></tr>
           <tr><td><code>{@link #TextView_inputMethod android:inputMethod}</code></td><td> If set, specifies that this TextView should use the specified
             input method (specified by fully-qualified class name).</td></tr>
           <tr><td><code>{@link #TextView_inputType android:inputType}</code></td><td> The type of data being placed in a text field, used to help an
         input method decide how to let the user enter text.</td></tr>
           <tr><td><code>{@link #TextView_lineSpacingExtra android:lineSpacingExtra}</code></td><td> Extra spacing between lines of text.</td></tr>
           <tr><td><code>{@link #TextView_lineSpacingMultiplier android:lineSpacingMultiplier}</code></td><td> Extra spacing between lines of text, as a multiplier.</td></tr>
           <tr><td><code>{@link #TextView_lines android:lines}</code></td><td> Makes the TextView be exactly this many lines tall.</td></tr>
           <tr><td><code>{@link #TextView_linksClickable android:linksClickable}</code></td><td> If set to false, keeps the movement method from being set
             to the link movement method even if autoLink causes links
             to be found.</td></tr>
           <tr><td><code>{@link #TextView_marqueeRepeatLimit android:marqueeRepeatLimit}</code></td><td> The number of times to repeat the marquee animation.</td></tr>
           <tr><td><code>{@link #TextView_maxEms android:maxEms}</code></td><td> Makes the TextView be at most this many ems wide.</td></tr>
           <tr><td><code>{@link #TextView_maxHeight android:maxHeight}</code></td><td> Makes the TextView be at most this many pixels tall.</td></tr>
           <tr><td><code>{@link #TextView_maxLength android:maxLength}</code></td><td> Set an input filter to constrain the text length to the
             specified number.</td></tr>
           <tr><td><code>{@link #TextView_maxLines android:maxLines}</code></td><td> Makes the TextView be at most this many lines tall.</td></tr>
           <tr><td><code>{@link #TextView_maxWidth android:maxWidth}</code></td><td> Makes the TextView be at most this many pixels wide.</td></tr>
           <tr><td><code>{@link #TextView_minEms android:minEms}</code></td><td> Makes the TextView be at least this many ems wide.</td></tr>
           <tr><td><code>{@link #TextView_minHeight android:minHeight}</code></td><td> Makes the TextView be at least this many pixels tall.</td></tr>
           <tr><td><code>{@link #TextView_minLines android:minLines}</code></td><td> Makes the TextView be at least this many lines tall.</td></tr>
           <tr><td><code>{@link #TextView_minWidth android:minWidth}</code></td><td> Makes the TextView be at least this many pixels wide.</td></tr>
           <tr><td><code>{@link #TextView_numeric android:numeric}</code></td><td> If set, specifies that this TextView has a numeric input method.</td></tr>
           <tr><td><code>{@link #TextView_password android:password}</code></td><td> Whether the characters of the field are displayed as
             password dots instead of themselves.</td></tr>
           <tr><td><code>{@link #TextView_phoneNumber android:phoneNumber}</code></td><td> If set, specifies that this TextView has a phone number input
             method.</td></tr>
           <tr><td><code>{@link #TextView_privateImeOptions android:privateImeOptions}</code></td><td> An addition content type description to supply to the input
             method attached to the text view, which is private to the
             implementation of the input method.</td></tr>
           <tr><td><code>{@link #TextView_scrollHorizontally android:scrollHorizontally}</code></td><td> Whether the text is allowed to be wider than the view (and
             therefore can be scrolled horizontally).</td></tr>
           <tr><td><code>{@link #TextView_selectAllOnFocus android:selectAllOnFocus}</code></td><td> If the text is selectable, select it all when the view takes
             focus instead of moving the cursor to the start or end.</td></tr>
           <tr><td><code>{@link #TextView_shadowColor android:shadowColor}</code></td><td> Place a shadow of the specified color behind the text.</td></tr>
           <tr><td><code>{@link #TextView_shadowDx android:shadowDx}</code></td><td> Horizontal offset of the shadow.</td></tr>
           <tr><td><code>{@link #TextView_shadowDy android:shadowDy}</code></td><td> Vertical offset of the shadow.</td></tr>
           <tr><td><code>{@link #TextView_shadowRadius android:shadowRadius}</code></td><td> Radius of the shadow.</td></tr>
           <tr><td><code>{@link #TextView_singleLine android:singleLine}</code></td><td> Constrains the text to a single horizontally scrolling line
             instead of letting it wrap onto multiple lines, and advances
             focus instead of inserting a newline when you press the
             enter key.</td></tr>
           <tr><td><code>{@link #TextView_text android:text}</code></td><td> Text to display.</td></tr>
           <tr><td><code>{@link #TextView_textAppearance android:textAppearance}</code></td><td> Base text color, typeface, size, and style.</td></tr>
           <tr><td><code>{@link #TextView_textColor android:textColor}</code></td><td> Text color.</td></tr>
           <tr><td><code>{@link #TextView_textColorHighlight android:textColorHighlight}</code></td><td> Color of the text selection highlight.</td></tr>
           <tr><td><code>{@link #TextView_textColorHint android:textColorHint}</code></td><td> Color of the hint text.</td></tr>
           <tr><td><code>{@link #TextView_textColorLink android:textColorLink}</code></td><td> Text color for links.</td></tr>
           <tr><td><code>{@link #TextView_textScaleX android:textScaleX}</code></td><td> Sets the horizontal scaling factor for the text.</td></tr>
           <tr><td><code>{@link #TextView_textSelectHandle android:textSelectHandle}</code></td><td> Reference to a drawable that will be used to display a text selection
             anchor for positioning the cursor within text.</td></tr>
           <tr><td><code>{@link #TextView_textSelectHandleLeft android:textSelectHandleLeft}</code></td><td> Reference to a drawable that will be used to display a text selection
             anchor on the left side of a selection region.</td></tr>
           <tr><td><code>{@link #TextView_textSelectHandleRight android:textSelectHandleRight}</code></td><td> Reference to a drawable that will be used to display a text selection
             anchor on the right side of a selection region.</td></tr>
           <tr><td><code>{@link #TextView_textSize android:textSize}</code></td><td> Size of the text.</td></tr>
           <tr><td><code>{@link #TextView_textStyle android:textStyle}</code></td><td> Style (bold, italic, bolditalic) for the text.</td></tr>
           <tr><td><code>{@link #TextView_typeface android:typeface}</code></td><td> Typeface (normal, sans, serif, monospace) for the text.</td></tr>
           <tr><td><code>{@link #TextView_width android:width}</code></td><td> Makes the TextView be exactly this many pixels wide.</td></tr>
           </table>
           @see #TextView_autoLink
           @see #TextView_autoText
           @see #TextView_bufferType
           @see #TextView_capitalize
           @see #TextView_cursorVisible
           @see #TextView_digits
           @see #TextView_drawableBottom
           @see #TextView_drawableLeft
           @see #TextView_drawablePadding
           @see #TextView_drawableRight
           @see #TextView_drawableTop
           @see #TextView_editable
           @see #TextView_editorExtras
           @see #TextView_ellipsize
           @see #TextView_ems
           @see #TextView_enabled
           @see #TextView_freezesText
           @see #TextView_gravity
           @see #TextView_height
           @see #TextView_hint
           @see #TextView_imeActionId
           @see #TextView_imeActionLabel
           @see #TextView_imeOptions
           @see #TextView_includeFontPadding
           @see #TextView_inputMethod
           @see #TextView_inputType
           @see #TextView_lineSpacingExtra
           @see #TextView_lineSpacingMultiplier
           @see #TextView_lines
           @see #TextView_linksClickable
           @see #TextView_marqueeRepeatLimit
           @see #TextView_maxEms
           @see #TextView_maxHeight
           @see #TextView_maxLength
           @see #TextView_maxLines
           @see #TextView_maxWidth
           @see #TextView_minEms
           @see #TextView_minHeight
           @see #TextView_minLines
           @see #TextView_minWidth
           @see #TextView_numeric
           @see #TextView_password
           @see #TextView_phoneNumber
           @see #TextView_privateImeOptions
           @see #TextView_scrollHorizontally
           @see #TextView_selectAllOnFocus
           @see #TextView_shadowColor
           @see #TextView_shadowDx
           @see #TextView_shadowDy
           @see #TextView_shadowRadius
           @see #TextView_singleLine
           @see #TextView_text
           @see #TextView_textAppearance
           @see #TextView_textColor
           @see #TextView_textColorHighlight
           @see #TextView_textColorHint
           @see #TextView_textColorLink
           @see #TextView_textScaleX
           @see #TextView_textSelectHandle
           @see #TextView_textSelectHandleLeft
           @see #TextView_textSelectHandleRight
           @see #TextView_textSize
           @see #TextView_textStyle
           @see #TextView_typeface
           @see #TextView_width
         */
        public static final int[] TextView = {
            0x0101000e, 0x01010034, 0x01010095, 0x01010096,
            0x01010097, 0x01010098, 0x01010099, 0x0101009a,
            0x0101009b, 0x010100ab, 0x010100af, 0x010100b0,
            0x010100b1, 0x0101011f, 0x01010120, 0x0101013f,
            0x01010140, 0x0101014e, 0x0101014f, 0x01010150,
            0x01010151, 0x01010152, 0x01010153, 0x01010154,
            0x01010155, 0x01010156, 0x01010157, 0x01010158,
            0x01010159, 0x0101015a, 0x0101015b, 0x0101015c,
            0x0101015d, 0x0101015e, 0x0101015f, 0x01010160,
            0x01010161, 0x01010162, 0x01010163, 0x01010164,
            0x01010165, 0x01010166, 0x01010167, 0x01010168,
            0x01010169, 0x0101016a, 0x0101016b, 0x0101016c,
            0x0101016d, 0x0101016e, 0x0101016f, 0x01010170,
            0x01010171, 0x01010217, 0x01010218, 0x0101021d,
            0x01010220, 0x01010223, 0x01010224, 0x01010264,
            0x01010265, 0x01010266, 0x010102c5, 0x010102c6,
            0x010102c7
        };
        /**
          <p>
          @attr description
           Controls whether links such as urls and email addresses are
         automatically found and converted to clickable links.  The default
         value is "none", disabling this feature. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00</td><td> Match no patterns (default). </td></tr>
<tr><td><code>web</code></td><td>0x01</td><td> Match Web URLs. </td></tr>
<tr><td><code>email</code></td><td>0x02</td><td> Match email addresses. </td></tr>
<tr><td><code>phone</code></td><td>0x04</td><td> Match phone numbers. </td></tr>
<tr><td><code>map</code></td><td>0x08</td><td> Match map addresses. </td></tr>
<tr><td><code>all</code></td><td>0x0f</td><td> Match all patterns (equivalent to web|email|phone|map). </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#autoLink}.
          @attr name android:autoLink
        */
        public static final int TextView_autoLink = 11;
        /**
          <p>
          @attr description
           If set, specifies that this TextView has a textual input method
             and automatically corrects some common spelling errors.
             The default is "false".
             {@deprecated Use inputType instead.} 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#autoText}.
          @attr name android:autoText
        */
        @Deprecated
        public static final int TextView_autoText = 45;
        /**
          <p>
          @attr description
           Determines the minimum type that getText() will return.
             The default is "normal".
             Note that EditText and LogTextBox always return Editable,
             even if you specify something less powerful here. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> Can return any CharSequence, possibly a
             Spanned one if the source text was Spanned. </td></tr>
<tr><td><code>spannable</code></td><td>1</td><td> Can only return Spannable. </td></tr>
<tr><td><code>editable</code></td><td>2</td><td> Can only return Spannable and Editable. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#bufferType}.
          @attr name android:bufferType
        */
        public static final int TextView_bufferType = 17;
        /**
          <p>
          @attr description
           If set, specifies that this TextView has a textual input method
             and should automatically capitalize what the user types.
             The default is "none".
             {@deprecated Use inputType instead.} 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Don't automatically capitalize anything. </td></tr>
<tr><td><code>sentences</code></td><td>1</td><td> Capitalize the first word of each sentence. </td></tr>
<tr><td><code>words</code></td><td>2</td><td> Capitalize the first letter of every word. </td></tr>
<tr><td><code>characters</code></td><td>3</td><td> Capitalize every character. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#capitalize}.
          @attr name android:capitalize
        */
        @Deprecated
        public static final int TextView_capitalize = 44;
        /**
          <p>
          @attr description
           Makes the cursor visible (the default) or invisible. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#cursorVisible}.
          @attr name android:cursorVisible
        */
        public static final int TextView_cursorVisible = 21;
        /**
          <p>
          @attr description
           If set, specifies that this TextView has a numeric input method
             and that these specific characters are the ones that it will
             accept.
             If this is set, numeric is implied to be true.
             The default is false. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#digits}.
          @attr name android:digits
        */
        public static final int TextView_digits = 41;
        /**
          <p>
          @attr description
           The drawable to be drawn below the text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#drawableBottom}.
          @attr name android:drawableBottom
        */
        public static final int TextView_drawableBottom = 49;
        /**
          <p>
          @attr description
           The drawable to be drawn to the left of the text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#drawableLeft}.
          @attr name android:drawableLeft
        */
        public static final int TextView_drawableLeft = 50;
        /**
          <p>
          @attr description
           The padding between the drawables and the text. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#drawablePadding}.
          @attr name android:drawablePadding
        */
        public static final int TextView_drawablePadding = 52;
        /**
          <p>
          @attr description
           The drawable to be drawn to the right of the text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#drawableRight}.
          @attr name android:drawableRight
        */
        public static final int TextView_drawableRight = 51;
        /**
          <p>
          @attr description
           The drawable to be drawn above the text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#drawableTop}.
          @attr name android:drawableTop
        */
        public static final int TextView_drawableTop = 48;
        /**
          <p>
          @attr description
           If set, specifies that this TextView has an input method.
             It will be a textual one unless it has otherwise been specified.
             For TextView, this is false by default.  For EditText, it is
             true by default.
             {@deprecated Use inputType instead.} 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#editable}.
          @attr name android:editable
        */
        @Deprecated
        public static final int TextView_editable = 46;
        /**
          <p>
          @attr description
           Reference to an
             {@link android.R.styleable#InputExtras &lt;input-extras&gt;}
             XML resource containing additional data to
             supply to an input method, which is private to the implementation
             of the input method.  This simply fills in
             the {@link android.view.inputmethod.EditorInfo#extras
             EditorInfo.extras} field when the input
             method is connected. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#editorExtras}.
          @attr name android:editorExtras
        */
        public static final int TextView_editorExtras = 58;
        /**
          <p>
          @attr description
           If set, causes words that are longer than the view is wide
             to be ellipsized instead of broken in the middle.
             You will often also want to set scrollHorizontally or singleLine
             as well so that the text as a whole is also constrained to
             a single line instead of still allowed to be broken onto
             multiple lines. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>start</code></td><td>1</td><td></td></tr>
<tr><td><code>middle</code></td><td>2</td><td></td></tr>
<tr><td><code>end</code></td><td>3</td><td></td></tr>
<tr><td><code>marquee</code></td><td>4</td><td></td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#ellipsize}.
          @attr name android:ellipsize
        */
        public static final int TextView_ellipsize = 9;
        /**
          <p>
          @attr description
           Makes the TextView be exactly this many ems wide. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#ems}.
          @attr name android:ems
        */
        public static final int TextView_ems = 27;
        /**
          <p>
          @attr description
           Specifies whether the TextView is enabled or not. {@deprecated Use state_enabled instead}. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#enabled}.
          @attr name android:enabled
        */
        @Deprecated
        public static final int TextView_enabled = 0;
        /**
          <p>
          @attr description
           If set, the text view will include its current complete text
             inside of its frozen icicle in addition to meta-data such as
             the current cursor position.  By default this is disabled;
             it can be useful when the contents of a text view is not stored
             in a persistent place such as a content provider. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#freezesText}.
          @attr name android:freezesText
        */
        public static final int TextView_freezesText = 47;
        /**
          <p>
          @attr description
           Specifies how to align the text by the view's x- and/or y-axis
             when the text is smaller than the view. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#gravity}.
          @attr name android:gravity
        */
        public static final int TextView_gravity = 10;
        /**
          <p>
          @attr description
           Makes the TextView be exactly this many pixels tall.
             You could get the same effect by specifying this number in the
             layout parameters. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#height}.
          @attr name android:height
        */
        public static final int TextView_height = 24;
        /**
          <p>
          @attr description
           Hint text to display when the text is empty. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#hint}.
          @attr name android:hint
        */
        public static final int TextView_hint = 19;
        /**
          <p>
          @attr description
           Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionId EditorInfo.actionId}
             used when an input method is connected to the text view. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#imeActionId}.
          @attr name android:imeActionId
        */
        public static final int TextView_imeActionId = 61;
        /**
          <p>
          @attr description
           Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionLabel EditorInfo.actionLabel}
             used when an input method is connected to the text view. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#imeActionLabel}.
          @attr name android:imeActionLabel
        */
        public static final int TextView_imeActionLabel = 60;
        /**
          <p>
          @attr description
           Additional features you can enable in an IME associated with an editor
         to improve the integration with your application.  The constants
         here correspond to those defined by
         {@link android.view.inputmethod.EditorInfo#imeOptions}. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0x00000000</td><td> There are no special semantics associated with this editor. </td></tr>
<tr><td><code>actionUnspecified</code></td><td>0x00000000</td><td> There is no specific action associated with this editor, let the
             editor come up with its own if it can.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_NULL}. </td></tr>
<tr><td><code>actionNone</code></td><td>0x00000001</td><td> This editor has no action associated with it.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NONE}. </td></tr>
<tr><td><code>actionGo</code></td><td>0x00000002</td><td> The action key performs a "go"
             operation to take the user to the target of the text they typed.
             Typically used, for example, when entering a URL.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_GO}. </td></tr>
<tr><td><code>actionSearch</code></td><td>0x00000003</td><td> The action key performs a "search"
             operation, taking the user to the results of searching for the text
             the have typed (in whatever context is appropriate).
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEARCH}. </td></tr>
<tr><td><code>actionSend</code></td><td>0x00000004</td><td> The action key performs a "send"
             operation, delivering the text to its target.  This is typically used
             when composing a message.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEND}. </td></tr>
<tr><td><code>actionNext</code></td><td>0x00000005</td><td> The action key performs a "next"
             operation, taking the user to the next field that will accept text.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NEXT}. </td></tr>
<tr><td><code>actionDone</code></td><td>0x00000006</td><td> The action key performs a "done"
             operation, closing the soft input method.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_DONE}. </td></tr>
<tr><td><code>flagNoExtractUi</code></td><td>0x10000000</td><td> Used to specify that the IME does not need
             to show its extracted text UI.  For input methods that may be fullscreen,
             often when in landscape mode, this allows them to be smaller and let part
             of the application be shown behind.  Though there will likely be limited
             access to the application available from the user, it can make the
             experience of a (mostly) fullscreen IME less jarring.  Note that when
             this flag is specified the IME may <em>not</em> be set up to be able
             to display text, so it should only be used in situations where this is
             not needed.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_EXTRACT_UI}. </td></tr>
<tr><td><code>flagNoAccessoryAction</code></td><td>0x20000000</td><td> Used in conjunction with a custom action, this indicates that the
             action should not be available as an accessory button when the
             input method is full-screen.
             Note that by setting this flag, there can be cases where the action
             is simply never available to the user.  Setting this generally means
             that you think showing text being edited is more important than the
             action you have supplied.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ACCESSORY_ACTION}. </td></tr>
<tr><td><code>flagNoEnterAction</code></td><td>0x40000000</td><td> Used in conjunction with a custom action,
             this indicates that the action should not be available in-line as
             a replacement for the "enter" key.  Typically this is
             because the action has such a significant impact or is not recoverable
             enough that accidentally hitting it should be avoided, such as sending
             a message.    Note that {@link android.widget.TextView} will
             automatically set this flag for you on multi-line text views.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ENTER_ACTION}. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#imeOptions}.
          @attr name android:imeOptions
        */
        public static final int TextView_imeOptions = 59;
        /**
          <p>
          @attr description
           Leave enough room for ascenders and descenders instead of
             using the font ascent and descent strictly.  (Normally true). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#includeFontPadding}.
          @attr name android:includeFontPadding
        */
        public static final int TextView_includeFontPadding = 34;
        /**
          <p>
          @attr description
           If set, specifies that this TextView should use the specified
             input method (specified by fully-qualified class name).
             {@deprecated Use inputType instead.} 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#inputMethod}.
          @attr name android:inputMethod
        */
        @Deprecated
        public static final int TextView_inputMethod = 43;
        /**
          <p>
          @attr description
           The type of data being placed in a text field, used to help an
         input method decide how to let the user enter text.  The constants
         here correspond to those defined by
         {@link android.text.InputType}.  Generally you can select
         a single value, though some can be combined together as
         indicated.  Setting this attribute to anything besides
         <var>none</var> also implies that the text is editable. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> There is no content type.  The text is not editable. </td></tr>
<tr><td><code>text</code></td><td>0x00000001</td><td> Just plain old text.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_NORMAL}. </td></tr>
<tr><td><code>textCapCharacters</code></td><td>0x00001001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of all characters.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_CHARACTERS}. </td></tr>
<tr><td><code>textCapWords</code></td><td>0x00002001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every word.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_WORDS}. </td></tr>
<tr><td><code>textCapSentences</code></td><td>0x00004001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every sentence.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_SENTENCES}. </td></tr>
<tr><td><code>textAutoCorrect</code></td><td>0x00008001</td><td> Can be combined with <var>text</var> and its variations to
             request auto-correction of text being input.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_CORRECT}. </td></tr>
<tr><td><code>textAutoComplete</code></td><td>0x00010001</td><td> Can be combined with <var>text</var> and its variations to
             specify that this field will be doing its own auto-completion and
             talking with the input method appropriately.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_COMPLETE}. </td></tr>
<tr><td><code>textMultiLine</code></td><td>0x00020001</td><td> Can be combined with <var>text</var> and its variations to
             allow multiple lines of text in the field.  If this flag is not set,
             the text field will be constrained to a single line.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_MULTI_LINE}. </td></tr>
<tr><td><code>textImeMultiLine</code></td><td>0x00040001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that though the regular text view should not be multiple
             lines, the IME should provide multiple lines if it can.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_IME_MULTI_LINE}. </td></tr>
<tr><td><code>textNoSuggestions</code></td><td>0x00080001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that the IME should not show any
             dictionary-based word suggestions.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_NO_SUGGESTIONS}. </td></tr>
<tr><td><code>textUri</code></td><td>0x00000011</td><td> Text that will be used as a URI.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_URI}. </td></tr>
<tr><td><code>textEmailAddress</code></td><td>0x00000021</td><td> Text that will be used as an e-mail address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textEmailSubject</code></td><td>0x00000031</td><td> Text that is being supplied as the subject of an e-mail.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_SUBJECT}. </td></tr>
<tr><td><code>textShortMessage</code></td><td>0x00000041</td><td> Text that is the content of a short message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_SHORT_MESSAGE}. </td></tr>
<tr><td><code>textLongMessage</code></td><td>0x00000051</td><td> Text that is the content of a long message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_LONG_MESSAGE}. </td></tr>
<tr><td><code>textPersonName</code></td><td>0x00000061</td><td> Text that is the name of a person.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PERSON_NAME}. </td></tr>
<tr><td><code>textPostalAddress</code></td><td>0x00000071</td><td> Text that is being supplied as a postal mailing address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_POSTAL_ADDRESS}. </td></tr>
<tr><td><code>textPassword</code></td><td>0x00000081</td><td> Text that is a password.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>textVisiblePassword</code></td><td>0x00000091</td><td> Text that is a password that should be visible.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_VISIBLE_PASSWORD}. </td></tr>
<tr><td><code>textWebEditText</code></td><td>0x000000a1</td><td> Text that is being supplied as text in a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EDIT_TEXT}. </td></tr>
<tr><td><code>textFilter</code></td><td>0x000000b1</td><td> Text that is filtering some other data.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_FILTER}. </td></tr>
<tr><td><code>textPhonetic</code></td><td>0x000000c1</td><td> Text that is for phonetic pronunciation, such as a phonetic name
             field in a contact entry.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PHONETIC}. </td></tr>
<tr><td><code>number</code></td><td>0x00000002</td><td> A numeric only field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER}. </td></tr>
<tr><td><code>numberSigned</code></td><td>0x00001002</td><td> Can be combined with <var>number</var> and its other options to
             allow a signed number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_SIGNED}. </td></tr>
<tr><td><code>numberDecimal</code></td><td>0x00002002</td><td> Can be combined with <var>number</var> and its other options to
             allow a decimal (fractional) number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_DECIMAL}. </td></tr>
<tr><td><code>phone</code></td><td>0x00000003</td><td> For entering a phone number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_PHONE}. </td></tr>
<tr><td><code>datetime</code></td><td>0x00000004</td><td> For entering a date and time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_NORMAL}. </td></tr>
<tr><td><code>date</code></td><td>0x00000014</td><td> For entering a date.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_DATE}. </td></tr>
<tr><td><code>time</code></td><td>0x00000024</td><td> For entering a time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_TIME}. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#inputType}.
          @attr name android:inputType
        */
        public static final int TextView_inputType = 56;
        /**
          <p>
          @attr description
           Extra spacing between lines of text. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#lineSpacingExtra}.
          @attr name android:lineSpacingExtra
        */
        public static final int TextView_lineSpacingExtra = 53;
        /**
          <p>
          @attr description
           Extra spacing between lines of text, as a multiplier. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#lineSpacingMultiplier}.
          @attr name android:lineSpacingMultiplier
        */
        public static final int TextView_lineSpacingMultiplier = 54;
        /**
          <p>
          @attr description
           Makes the TextView be exactly this many lines tall. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#lines}.
          @attr name android:lines
        */
        public static final int TextView_lines = 23;
        /**
          <p>
          @attr description
           If set to false, keeps the movement method from being set
             to the link movement method even if autoLink causes links
             to be found. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#linksClickable}.
          @attr name android:linksClickable
        */
        public static final int TextView_linksClickable = 12;
        /**
          <p>
          @attr description
           The number of times to repeat the marquee animation. Only applied if the
             TextView has marquee enabled. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>marquee_forever</code></td><td>-1</td><td> Indicates that marquee should repeat indefinitely. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#marqueeRepeatLimit}.
          @attr name android:marqueeRepeatLimit
        */
        public static final int TextView_marqueeRepeatLimit = 55;
        /**
          <p>
          @attr description
           Makes the TextView be at most this many ems wide. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#maxEms}.
          @attr name android:maxEms
        */
        public static final int TextView_maxEms = 26;
        /**
          <p>
          @attr description
           Makes the TextView be at most this many pixels tall. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#maxHeight}.
          @attr name android:maxHeight
        */
        public static final int TextView_maxHeight = 14;
        /**
          <p>
          @attr description
           Set an input filter to constrain the text length to the
             specified number. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#maxLength}.
          @attr name android:maxLength
        */
        public static final int TextView_maxLength = 35;
        /**
          <p>
          @attr description
           Makes the TextView be at most this many lines tall. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#maxLines}.
          @attr name android:maxLines
        */
        public static final int TextView_maxLines = 22;
        /**
          <p>
          @attr description
           Makes the TextView be at most this many pixels wide. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#maxWidth}.
          @attr name android:maxWidth
        */
        public static final int TextView_maxWidth = 13;
        /**
          <p>
          @attr description
           Makes the TextView be at least this many ems wide. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#minEms}.
          @attr name android:minEms
        */
        public static final int TextView_minEms = 29;
        /**
          <p>
          @attr description
           Makes the TextView be at least this many pixels tall. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#minHeight}.
          @attr name android:minHeight
        */
        public static final int TextView_minHeight = 16;
        /**
          <p>
          @attr description
           Makes the TextView be at least this many lines tall. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#minLines}.
          @attr name android:minLines
        */
        public static final int TextView_minLines = 25;
        /**
          <p>
          @attr description
           Makes the TextView be at least this many pixels wide. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#minWidth}.
          @attr name android:minWidth
        */
        public static final int TextView_minWidth = 15;
        /**
          <p>
          @attr description
           If set, specifies that this TextView has a numeric input method.
             The default is false.
             {@deprecated Use inputType instead.} 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>integer</code></td><td>0x01</td><td> Input is numeric. </td></tr>
<tr><td><code>signed</code></td><td>0x003</td><td> Input is numeric, with sign allowed. </td></tr>
<tr><td><code>decimal</code></td><td>0x05</td><td> Input is numeric, with decimals allowed. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#numeric}.
          @attr name android:numeric
        */
        @Deprecated
        public static final int TextView_numeric = 40;
        /**
          <p>
          @attr description
           Whether the characters of the field are displayed as
             password dots instead of themselves.
             {@deprecated Use inputType instead.} 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#password}.
          @attr name android:password
        */
        @Deprecated
        public static final int TextView_password = 31;
        /**
          <p>
          @attr description
           If set, specifies that this TextView has a phone number input
             method. The default is false.
             {@deprecated Use inputType instead.} 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#phoneNumber}.
          @attr name android:phoneNumber
        */
        @Deprecated
        public static final int TextView_phoneNumber = 42;
        /**
          <p>
          @attr description
           An addition content type description to supply to the input
             method attached to the text view, which is private to the
             implementation of the input method.  This simply fills in
             the {@link android.view.inputmethod.EditorInfo#privateImeOptions
             EditorInfo.privateImeOptions} field when the input
             method is connected. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#privateImeOptions}.
          @attr name android:privateImeOptions
        */
        public static final int TextView_privateImeOptions = 57;
        /**
          <p>
          @attr description
           Whether the text is allowed to be wider than the view (and
             therefore can be scrolled horizontally). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollHorizontally}.
          @attr name android:scrollHorizontally
        */
        public static final int TextView_scrollHorizontally = 30;
        /**
          <p>
          @attr description
           If the text is selectable, select it all when the view takes
             focus instead of moving the cursor to the start or end. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#selectAllOnFocus}.
          @attr name android:selectAllOnFocus
        */
        public static final int TextView_selectAllOnFocus = 33;
        /**
          <p>
          @attr description
           Place a shadow of the specified color behind the text. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#shadowColor}.
          @attr name android:shadowColor
        */
        public static final int TextView_shadowColor = 36;
        /**
          <p>
          @attr description
           Horizontal offset of the shadow. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#shadowDx}.
          @attr name android:shadowDx
        */
        public static final int TextView_shadowDx = 37;
        /**
          <p>
          @attr description
           Vertical offset of the shadow. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#shadowDy}.
          @attr name android:shadowDy
        */
        public static final int TextView_shadowDy = 38;
        /**
          <p>
          @attr description
           Radius of the shadow. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#shadowRadius}.
          @attr name android:shadowRadius
        */
        public static final int TextView_shadowRadius = 39;
        /**
          <p>
          @attr description
           Constrains the text to a single horizontally scrolling line
             instead of letting it wrap onto multiple lines, and advances
             focus instead of inserting a newline when you press the
             enter key.  Note: for editable text views, it is better
             to control this using the textMultiLine flag in the inputType
             attribute.  (If both singleLine and inputType are supplied,
             the inputType flags will override the value of singleLine.)
             {@deprecated This attribute is deprecated and is replaced by the textMultiLine flag
             in the inputType attribute.  Use caution when altering existing layouts, as the
             default value of singeLine is false (multi-line mode), but if you specify any
             value for inputType, the default is single-line mode.  (If both singleLine and
             inputType attributes are found,  the inputType flags will override the value of
             singleLine.) } 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#singleLine}.
          @attr name android:singleLine
        */
        @Deprecated
        public static final int TextView_singleLine = 32;
        /**
          <p>
          @attr description
           Text to display. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#text}.
          @attr name android:text
        */
        public static final int TextView_text = 18;
        /**
          <p>
          @attr description
           Base text color, typeface, size, and style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textAppearance}.
          @attr name android:textAppearance
        */
        public static final int TextView_textAppearance = 1;
        /**
          <p>
          @attr description
           Text color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColor}.
          @attr name android:textColor
        */
        public static final int TextView_textColor = 5;
        /**
          <p>
          @attr description
           Color of the text selection highlight. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorHighlight}.
          @attr name android:textColorHighlight
        */
        public static final int TextView_textColorHighlight = 6;
        /**
          <p>
          @attr description
           Color of the hint text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorHint}.
          @attr name android:textColorHint
        */
        public static final int TextView_textColorHint = 7;
        /**
          <p>
          @attr description
           Text color for links. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorLink}.
          @attr name android:textColorLink
        */
        public static final int TextView_textColorLink = 8;
        /**
          <p>
          @attr description
           Sets the horizontal scaling factor for the text. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textScaleX}.
          @attr name android:textScaleX
        */
        public static final int TextView_textScaleX = 20;
        /**
          <p>
          @attr description
           Reference to a drawable that will be used to display a text selection
             anchor for positioning the cursor within text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textSelectHandle}.
          @attr name android:textSelectHandle
        */
        public static final int TextView_textSelectHandle = 64;
        /**
          <p>
          @attr description
           Reference to a drawable that will be used to display a text selection
             anchor on the left side of a selection region. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textSelectHandleLeft}.
          @attr name android:textSelectHandleLeft
        */
        public static final int TextView_textSelectHandleLeft = 62;
        /**
          <p>
          @attr description
           Reference to a drawable that will be used to display a text selection
             anchor on the right side of a selection region. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textSelectHandleRight}.
          @attr name android:textSelectHandleRight
        */
        public static final int TextView_textSelectHandleRight = 63;
        /**
          <p>
          @attr description
           Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textSize}.
          @attr name android:textSize
        */
        public static final int TextView_textSize = 2;
        /**
          <p>
          @attr description
           Style (bold, italic, bolditalic) for the text. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textStyle}.
          @attr name android:textStyle
        */
        public static final int TextView_textStyle = 4;
        /**
          <p>
          @attr description
           Typeface (normal, sans, serif, monospace) for the text. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>sans</code></td><td>1</td><td></td></tr>
<tr><td><code>serif</code></td><td>2</td><td></td></tr>
<tr><td><code>monospace</code></td><td>3</td><td></td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#typeface}.
          @attr name android:typeface
        */
        public static final int TextView_typeface = 3;
        /**
          <p>
          @attr description
           Makes the TextView be exactly this many pixels wide.
             You could get the same effect by specifying this number in the
             layout parameters. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#width}.
          @attr name android:width
        */
        public static final int TextView_width = 28;
        /**  These are the standard attributes that make up a complete theme. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Theme_absListViewStyle android:absListViewStyle}</code></td><td> Default AbsListView style.</td></tr>
           <tr><td><code>{@link #Theme_alertDialogStyle android:alertDialogStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_autoCompleteTextViewStyle android:autoCompleteTextViewStyle}</code></td><td> Default AutoCompleteTextView style.</td></tr>
           <tr><td><code>{@link #Theme_backgroundDimAmount android:backgroundDimAmount}</code></td><td> Default background dim amount when a menu, dialog, or something similar pops up.</td></tr>
           <tr><td><code>{@link #Theme_backgroundDimEnabled android:backgroundDimEnabled}</code></td><td> Control whether dimming behind the window is enabled.</td></tr>
           <tr><td><code>{@link #Theme_buttonStyle android:buttonStyle}</code></td><td> Normal Button style.</td></tr>
           <tr><td><code>{@link #Theme_buttonStyleInset android:buttonStyleInset}</code></td><td> Button style to inset into an EditText.</td></tr>
           <tr><td><code>{@link #Theme_buttonStyleSmall android:buttonStyleSmall}</code></td><td> Small Button style.</td></tr>
           <tr><td><code>{@link #Theme_buttonStyleToggle android:buttonStyleToggle}</code></td><td> ToggleButton style.</td></tr>
           <tr><td><code>{@link #Theme_candidatesTextStyleSpans android:candidatesTextStyleSpans}</code></td><td> A styled string, specifying the style to be used for showing
             inline candidate text when composing with an input method.</td></tr>
           <tr><td><code>{@link #Theme_checkBoxPreferenceStyle android:checkBoxPreferenceStyle}</code></td><td> Default style for CheckBoxPreference.</td></tr>
           <tr><td><code>{@link #Theme_checkboxStyle android:checkboxStyle}</code></td><td> Default Checkbox style.</td></tr>
           <tr><td><code>{@link #Theme_colorBackground android:colorBackground}</code></td><td> Color that matches (as closely as possible) the window background.</td></tr>
           <tr><td><code>{@link #Theme_colorBackgroundCacheHint android:colorBackgroundCacheHint}</code></td><td> This is a hint for a solid color that can be used for caching
             rendered views.</td></tr>
           <tr><td><code>{@link #Theme_colorForeground android:colorForeground}</code></td><td> Default color of foreground imagery.</td></tr>
           <tr><td><code>{@link #Theme_colorForegroundInverse android:colorForegroundInverse}</code></td><td> Default color of foreground imagery on an inverted background.</td></tr>
           <tr><td><code>{@link #Theme_dialogPreferenceStyle android:dialogPreferenceStyle}</code></td><td> Default style for DialogPreference.</td></tr>
           <tr><td><code>{@link #Theme_disabledAlpha android:disabledAlpha}</code></td><td> Default disabled alpha for widgets that set enabled/disabled alpha programmatically.</td></tr>
           <tr><td><code>{@link #Theme_dropDownHintAppearance android:dropDownHintAppearance}</code></td><td> Default style for drop down hints.</td></tr>
           <tr><td><code>{@link #Theme_dropDownItemStyle android:dropDownItemStyle}</code></td><td> Default style for drop down items.</td></tr>
           <tr><td><code>{@link #Theme_dropDownListViewStyle android:dropDownListViewStyle}</code></td><td> Default ListView style for drop downs.</td></tr>
           <tr><td><code>{@link #Theme_editTextPreferenceStyle android:editTextPreferenceStyle}</code></td><td> Default style for EditTextPreference.</td></tr>
           <tr><td><code>{@link #Theme_editTextStyle android:editTextStyle}</code></td><td> Default EditText style.</td></tr>
           <tr><td><code>{@link #Theme_expandableListPreferredChildIndicatorLeft android:expandableListPreferredChildIndicatorLeft}</code></td><td> The preferred left bound for an expandable list child's indicator.</td></tr>
           <tr><td><code>{@link #Theme_expandableListPreferredChildIndicatorRight android:expandableListPreferredChildIndicatorRight}</code></td><td> The preferred right bound for an expandable list child's indicator.</td></tr>
           <tr><td><code>{@link #Theme_expandableListPreferredChildPaddingLeft android:expandableListPreferredChildPaddingLeft}</code></td><td> The preferred left padding for an expandable list item that is a child.</td></tr>
           <tr><td><code>{@link #Theme_expandableListPreferredItemIndicatorLeft android:expandableListPreferredItemIndicatorLeft}</code></td><td> The preferred left bound for an expandable list item's indicator.</td></tr>
           <tr><td><code>{@link #Theme_expandableListPreferredItemIndicatorRight android:expandableListPreferredItemIndicatorRight}</code></td><td> The preferred right bound for an expandable list item's indicator.</td></tr>
           <tr><td><code>{@link #Theme_expandableListPreferredItemPaddingLeft android:expandableListPreferredItemPaddingLeft}</code></td><td> The preferred left padding for an expandable list item (for child-specific layouts,
             use expandableListPreferredChildPaddingLeft).</td></tr>
           <tr><td><code>{@link #Theme_expandableListViewStyle android:expandableListViewStyle}</code></td><td> Default ExpandableListView style.</td></tr>
           <tr><td><code>{@link #Theme_expandableListViewWhiteStyle android:expandableListViewWhiteStyle}</code></td><td> ExpandableListView with white background.</td></tr>
           <tr><td><code>{@link #Theme_galleryItemBackground android:galleryItemBackground}</code></td><td> The preferred background for gallery items.</td></tr>
           <tr><td><code>{@link #Theme_galleryStyle android:galleryStyle}</code></td><td> Default Gallery style.</td></tr>
           <tr><td><code>{@link #Theme_gridViewStyle android:gridViewStyle}</code></td><td> Default GridView style.</td></tr>
           <tr><td><code>{@link #Theme_imageButtonStyle android:imageButtonStyle}</code></td><td> The style resource to use for an ImageButton.</td></tr>
           <tr><td><code>{@link #Theme_imageWellStyle android:imageWellStyle}</code></td><td> The style resource to use for an ImageButton that is an image well.</td></tr>
           <tr><td><code>{@link #Theme_listChoiceIndicatorMultiple android:listChoiceIndicatorMultiple}</code></td><td> Drawable to use for multiple choice indicators.</td></tr>
           <tr><td><code>{@link #Theme_listChoiceIndicatorSingle android:listChoiceIndicatorSingle}</code></td><td> Drawable to use for single choice indicators.</td></tr>
           <tr><td><code>{@link #Theme_listDivider android:listDivider}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_listPreferredItemHeight android:listPreferredItemHeight}</code></td><td> The preferred list item height.</td></tr>
           <tr><td><code>{@link #Theme_listSeparatorTextViewStyle android:listSeparatorTextViewStyle}</code></td><td> TextView style for list separators.</td></tr>
           <tr><td><code>{@link #Theme_listViewStyle android:listViewStyle}</code></td><td> Default ListView style.</td></tr>
           <tr><td><code>{@link #Theme_listViewWhiteStyle android:listViewWhiteStyle}</code></td><td> ListView with white background.</td></tr>
           <tr><td><code>{@link #Theme_mapViewStyle android:mapViewStyle}</code></td><td> Default MapView style.</td></tr>
           <tr><td><code>{@link #Theme_panelBackground android:panelBackground}</code></td><td> The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
           <tr><td><code>{@link #Theme_panelColorBackground android:panelColorBackground}</code></td><td> Color that matches (as closely as possible) the panel background.</td></tr>
           <tr><td><code>{@link #Theme_panelColorForeground android:panelColorForeground}</code></td><td> Default color of foreground panel imagery.</td></tr>
           <tr><td><code>{@link #Theme_panelFullBackground android:panelFullBackground}</code></td><td> The background of a panel when it extends to the left and right edges of the screen.</td></tr>
           <tr><td><code>{@link #Theme_panelTextAppearance android:panelTextAppearance}</code></td><td> Default appearance of panel text.</td></tr>
           <tr><td><code>{@link #Theme_popupWindowStyle android:popupWindowStyle}</code></td><td> Default PopupWindow style.</td></tr>
           <tr><td><code>{@link #Theme_preferenceCategoryStyle android:preferenceCategoryStyle}</code></td><td> Default style for PreferenceCategory.</td></tr>
           <tr><td><code>{@link #Theme_preferenceInformationStyle android:preferenceInformationStyle}</code></td><td> Default style for informational Preference.</td></tr>
           <tr><td><code>{@link #Theme_preferenceLayoutChild android:preferenceLayoutChild}</code></td><td> The preference layout that has the child/tabbed effect.</td></tr>
           <tr><td><code>{@link #Theme_preferenceScreenStyle android:preferenceScreenStyle}</code></td><td> Default style for PreferenceScreen.</td></tr>
           <tr><td><code>{@link #Theme_preferenceStyle android:preferenceStyle}</code></td><td> Default style for Preference.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyle android:progressBarStyle}</code></td><td> Default ProgressBar style.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyleHorizontal android:progressBarStyleHorizontal}</code></td><td> Horizontal ProgressBar style.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyleInverse android:progressBarStyleInverse}</code></td><td> Inverse ProgressBar style.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyleLarge android:progressBarStyleLarge}</code></td><td> Large ProgressBar style.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyleLargeInverse android:progressBarStyleLargeInverse}</code></td><td> Large inverse ProgressBar style.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyleSmall android:progressBarStyleSmall}</code></td><td> Small ProgressBar style.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyleSmallInverse android:progressBarStyleSmallInverse}</code></td><td> Small inverse ProgressBar style.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyleSmallTitle android:progressBarStyleSmallTitle}</code></td><td> Small ProgressBar in title style.</td></tr>
           <tr><td><code>{@link #Theme_quickContactBadgeStyleSmallWindowLarge android:quickContactBadgeStyleSmallWindowLarge}</code></td><td> Default quickcontact badge style with large quickcontact window.</td></tr>
           <tr><td><code>{@link #Theme_quickContactBadgeStyleSmallWindowMedium android:quickContactBadgeStyleSmallWindowMedium}</code></td><td> Default quickcontact badge style with medium quickcontact window.</td></tr>
           <tr><td><code>{@link #Theme_quickContactBadgeStyleSmallWindowSmall android:quickContactBadgeStyleSmallWindowSmall}</code></td><td> Default quickcontact badge style with small quickcontact window.</td></tr>
           <tr><td><code>{@link #Theme_quickContactBadgeStyleWindowLarge android:quickContactBadgeStyleWindowLarge}</code></td><td> Default quickcontact badge style with large quickcontact window.</td></tr>
           <tr><td><code>{@link #Theme_quickContactBadgeStyleWindowMedium android:quickContactBadgeStyleWindowMedium}</code></td><td> Default quickcontact badge style with medium quickcontact window.</td></tr>
           <tr><td><code>{@link #Theme_quickContactBadgeStyleWindowSmall android:quickContactBadgeStyleWindowSmall}</code></td><td> Default quickcontact badge style with small quickcontact window.</td></tr>
           <tr><td><code>{@link #Theme_radioButtonStyle android:radioButtonStyle}</code></td><td> Default RadioButton style.</td></tr>
           <tr><td><code>{@link #Theme_ratingBarStyle android:ratingBarStyle}</code></td><td> Default RatingBar style.</td></tr>
           <tr><td><code>{@link #Theme_ratingBarStyleIndicator android:ratingBarStyleIndicator}</code></td><td> Indicator RatingBar style.</td></tr>
           <tr><td><code>{@link #Theme_ratingBarStyleSmall android:ratingBarStyleSmall}</code></td><td> Small indicator RatingBar style.</td></tr>
           <tr><td><code>{@link #Theme_ringtonePreferenceStyle android:ringtonePreferenceStyle}</code></td><td> Default style for RingtonePreference.</td></tr>
           <tr><td><code>{@link #Theme_scrollViewStyle android:scrollViewStyle}</code></td><td> Default ScrollView style.</td></tr>
           <tr><td><code>{@link #Theme_seekBarStyle android:seekBarStyle}</code></td><td> Default SeekBar style.</td></tr>
           <tr><td><code>{@link #Theme_spinnerDropDownItemStyle android:spinnerDropDownItemStyle}</code></td><td> Default style for spinner drop down items.</td></tr>
           <tr><td><code>{@link #Theme_spinnerItemStyle android:spinnerItemStyle}</code></td><td> Default spinner item style.</td></tr>
           <tr><td><code>{@link #Theme_spinnerStyle android:spinnerStyle}</code></td><td> Default Spinner style.</td></tr>
           <tr><td><code>{@link #Theme_starStyle android:starStyle}</code></td><td> Default Star style.</td></tr>
           <tr><td><code>{@link #Theme_tabWidgetStyle android:tabWidgetStyle}</code></td><td> Default TabWidget style.</td></tr>
           <tr><td><code>{@link #Theme_textAppearance android:textAppearance}</code></td><td> Default appearance of text: color, typeface, size, and style.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceButton android:textAppearanceButton}</code></td><td> Text color, typeface, size, and style for the text inside of a button.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceInverse android:textAppearanceInverse}</code></td><td> Default appearance of text against an inverted background:
             color, typeface, size, and style.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceLarge android:textAppearanceLarge}</code></td><td> Text color, typeface, size, and style for "large" text.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceLargeInverse android:textAppearanceLargeInverse}</code></td><td> Text color, typeface, size, and style for "large" inverse text.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceMedium android:textAppearanceMedium}</code></td><td> Text color, typeface, size, and style for "medium" text.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceMediumInverse android:textAppearanceMediumInverse}</code></td><td> Text color, typeface, size, and style for "medium" inverse text.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceSearchResultSubtitle android:textAppearanceSearchResultSubtitle}</code></td><td> Text color, typeface, size, and style for system search result subtitle.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceSearchResultTitle android:textAppearanceSearchResultTitle}</code></td><td> Text color, typeface, size, and style for system search result title.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceSmall android:textAppearanceSmall}</code></td><td> Text color, typeface, size, and style for "small" text.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceSmallInverse android:textAppearanceSmallInverse}</code></td><td> Text color, typeface, size, and style for "small" inverse text.</td></tr>
           <tr><td><code>{@link #Theme_textCheckMark android:textCheckMark}</code></td><td> Drawable to use for check marks.</td></tr>
           <tr><td><code>{@link #Theme_textCheckMarkInverse android:textCheckMarkInverse}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_textColorHintInverse android:textColorHintInverse}</code></td><td> Inverse hint text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorPrimary android:textColorPrimary}</code></td><td> The most prominent text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorPrimaryDisableOnly android:textColorPrimaryDisableOnly}</code></td><td> Bright text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorPrimaryInverse android:textColorPrimaryInverse}</code></td><td> Primary inverse text color, useful for inverted backgrounds.</td></tr>
           <tr><td><code>{@link #Theme_textColorPrimaryInverseDisableOnly android:textColorPrimaryInverseDisableOnly}</code></td><td> Bright inverse text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorPrimaryInverseNoDisable android:textColorPrimaryInverseNoDisable}</code></td><td> Bright inverse text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorPrimaryNoDisable android:textColorPrimaryNoDisable}</code></td><td> Bright text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorSecondary android:textColorSecondary}</code></td><td> Secondary text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorSecondaryInverse android:textColorSecondaryInverse}</code></td><td> Secondary inverse text color, useful for inverted backgrounds.</td></tr>
           <tr><td><code>{@link #Theme_textColorSecondaryInverseNoDisable android:textColorSecondaryInverseNoDisable}</code></td><td> Dim inverse text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorSecondaryNoDisable android:textColorSecondaryNoDisable}</code></td><td> Dim text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorTertiary android:textColorTertiary}</code></td><td> Tertiary text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorTertiaryInverse android:textColorTertiaryInverse}</code></td><td> Tertiary inverse text color, useful for inverted backgrounds.</td></tr>
           <tr><td><code>{@link #Theme_textSelectHandle android:textSelectHandle}</code></td><td> Reference to a drawable that will be used to display a text selection
             anchor for positioning the cursor within text.</td></tr>
           <tr><td><code>{@link #Theme_textSelectHandleLeft android:textSelectHandleLeft}</code></td><td> Reference to a drawable that will be used to display a text selection
             anchor on the left side of a selection region.</td></tr>
           <tr><td><code>{@link #Theme_textSelectHandleRight android:textSelectHandleRight}</code></td><td> Reference to a drawable that will be used to display a text selection
             anchor on the right side of a selection region.</td></tr>
           <tr><td><code>{@link #Theme_textSelectHandleWindowStyle android:textSelectHandleWindowStyle}</code></td><td> Reference to a style that will be used for the window containing a text
             selection anchor.</td></tr>
           <tr><td><code>{@link #Theme_textViewStyle android:textViewStyle}</code></td><td> Default TextView style.</td></tr>
           <tr><td><code>{@link #Theme_webTextViewStyle android:webTextViewStyle}</code></td><td> Default WebTextView style.</td></tr>
           <tr><td><code>{@link #Theme_webViewStyle android:webViewStyle}</code></td><td> Default WebView style.</td></tr>
           <tr><td><code>{@link #Theme_windowAnimationStyle android:windowAnimationStyle}</code></td><td> Reference to a style resource holding
             the set of window animations to use, which can be
             any of the attributes defined by
             {@link android.R.styleable#WindowAnimation}.</td></tr>
           <tr><td><code>{@link #Theme_windowBackground android:windowBackground}</code></td><td> Drawable to use as the overall window background.</td></tr>
           <tr><td><code>{@link #Theme_windowContentOverlay android:windowContentOverlay}</code></td><td> This Drawable is overlaid over the foreground of the Window's content area, usually
             to place a shadow below the title.</td></tr>
           <tr><td><code>{@link #Theme_windowDisablePreview android:windowDisablePreview}</code></td><td> Flag allowing you to disable the preview animation for a window.</td></tr>
           <tr><td><code>{@link #Theme_windowFrame android:windowFrame}</code></td><td> Drawable to use as a frame around the window.</td></tr>
           <tr><td><code>{@link #Theme_windowFullscreen android:windowFullscreen}</code></td><td> Flag indicating whether this window should fill the entire screen.</td></tr>
           <tr><td><code>{@link #Theme_windowIsFloating android:windowIsFloating}</code></td><td> Flag indicating whether this is a floating window.</td></tr>
           <tr><td><code>{@link #Theme_windowIsTranslucent android:windowIsTranslucent}</code></td><td> Flag indicating whether this is a translucent window.</td></tr>
           <tr><td><code>{@link #Theme_windowNoDisplay android:windowNoDisplay}</code></td><td> Flag indicating that this window should not be displayed at all.</td></tr>
           <tr><td><code>{@link #Theme_windowNoTitle android:windowNoTitle}</code></td><td> Flag indicating whether there should be no title on this window.</td></tr>
           <tr><td><code>{@link #Theme_windowShowWallpaper android:windowShowWallpaper}</code></td><td> Flag indicating that this window's background should be the
        	 user's current wallpaper.</td></tr>
           <tr><td><code>{@link #Theme_windowSoftInputMode android:windowSoftInputMode}</code></td><td> Defines the default soft input state that this window would
             like when it is displayed.</td></tr>
           <tr><td><code>{@link #Theme_windowTitleBackgroundStyle android:windowTitleBackgroundStyle}</code></td><td> The style resource to use for a window's title area.</td></tr>
           <tr><td><code>{@link #Theme_windowTitleSize android:windowTitleSize}</code></td><td> The style resource to use for a window's title bar height.</td></tr>
           <tr><td><code>{@link #Theme_windowTitleStyle android:windowTitleStyle}</code></td><td> The style resource to use for a window's title text.</td></tr>
           <tr><td><code>{@link #Theme_yesNoPreferenceStyle android:yesNoPreferenceStyle}</code></td><td> Default style for YesNoPreference.</td></tr>
           </table>
           @see #Theme_absListViewStyle
           @see #Theme_alertDialogStyle
           @see #Theme_autoCompleteTextViewStyle
           @see #Theme_backgroundDimAmount
           @see #Theme_backgroundDimEnabled
           @see #Theme_buttonStyle
           @see #Theme_buttonStyleInset
           @see #Theme_buttonStyleSmall
           @see #Theme_buttonStyleToggle
           @see #Theme_candidatesTextStyleSpans
           @see #Theme_checkBoxPreferenceStyle
           @see #Theme_checkboxStyle
           @see #Theme_colorBackground
           @see #Theme_colorBackgroundCacheHint
           @see #Theme_colorForeground
           @see #Theme_colorForegroundInverse
           @see #Theme_dialogPreferenceStyle
           @see #Theme_disabledAlpha
           @see #Theme_dropDownHintAppearance
           @see #Theme_dropDownItemStyle
           @see #Theme_dropDownListViewStyle
           @see #Theme_editTextPreferenceStyle
           @see #Theme_editTextStyle
           @see #Theme_expandableListPreferredChildIndicatorLeft
           @see #Theme_expandableListPreferredChildIndicatorRight
           @see #Theme_expandableListPreferredChildPaddingLeft
           @see #Theme_expandableListPreferredItemIndicatorLeft
           @see #Theme_expandableListPreferredItemIndicatorRight
           @see #Theme_expandableListPreferredItemPaddingLeft
           @see #Theme_expandableListViewStyle
           @see #Theme_expandableListViewWhiteStyle
           @see #Theme_galleryItemBackground
           @see #Theme_galleryStyle
           @see #Theme_gridViewStyle
           @see #Theme_imageButtonStyle
           @see #Theme_imageWellStyle
           @see #Theme_listChoiceIndicatorMultiple
           @see #Theme_listChoiceIndicatorSingle
           @see #Theme_listDivider
           @see #Theme_listPreferredItemHeight
           @see #Theme_listSeparatorTextViewStyle
           @see #Theme_listViewStyle
           @see #Theme_listViewWhiteStyle
           @see #Theme_mapViewStyle
           @see #Theme_panelBackground
           @see #Theme_panelColorBackground
           @see #Theme_panelColorForeground
           @see #Theme_panelFullBackground
           @see #Theme_panelTextAppearance
           @see #Theme_popupWindowStyle
           @see #Theme_preferenceCategoryStyle
           @see #Theme_preferenceInformationStyle
           @see #Theme_preferenceLayoutChild
           @see #Theme_preferenceScreenStyle
           @see #Theme_preferenceStyle
           @see #Theme_progressBarStyle
           @see #Theme_progressBarStyleHorizontal
           @see #Theme_progressBarStyleInverse
           @see #Theme_progressBarStyleLarge
           @see #Theme_progressBarStyleLargeInverse
           @see #Theme_progressBarStyleSmall
           @see #Theme_progressBarStyleSmallInverse
           @see #Theme_progressBarStyleSmallTitle
           @see #Theme_quickContactBadgeStyleSmallWindowLarge
           @see #Theme_quickContactBadgeStyleSmallWindowMedium
           @see #Theme_quickContactBadgeStyleSmallWindowSmall
           @see #Theme_quickContactBadgeStyleWindowLarge
           @see #Theme_quickContactBadgeStyleWindowMedium
           @see #Theme_quickContactBadgeStyleWindowSmall
           @see #Theme_radioButtonStyle
           @see #Theme_ratingBarStyle
           @see #Theme_ratingBarStyleIndicator
           @see #Theme_ratingBarStyleSmall
           @see #Theme_ringtonePreferenceStyle
           @see #Theme_scrollViewStyle
           @see #Theme_seekBarStyle
           @see #Theme_spinnerDropDownItemStyle
           @see #Theme_spinnerItemStyle
           @see #Theme_spinnerStyle
           @see #Theme_starStyle
           @see #Theme_tabWidgetStyle
           @see #Theme_textAppearance
           @see #Theme_textAppearanceButton
           @see #Theme_textAppearanceInverse
           @see #Theme_textAppearanceLarge
           @see #Theme_textAppearanceLargeInverse
           @see #Theme_textAppearanceMedium
           @see #Theme_textAppearanceMediumInverse
           @see #Theme_textAppearanceSearchResultSubtitle
           @see #Theme_textAppearanceSearchResultTitle
           @see #Theme_textAppearanceSmall
           @see #Theme_textAppearanceSmallInverse
           @see #Theme_textCheckMark
           @see #Theme_textCheckMarkInverse
           @see #Theme_textColorHintInverse
           @see #Theme_textColorPrimary
           @see #Theme_textColorPrimaryDisableOnly
           @see #Theme_textColorPrimaryInverse
           @see #Theme_textColorPrimaryInverseDisableOnly
           @see #Theme_textColorPrimaryInverseNoDisable
           @see #Theme_textColorPrimaryNoDisable
           @see #Theme_textColorSecondary
           @see #Theme_textColorSecondaryInverse
           @see #Theme_textColorSecondaryInverseNoDisable
           @see #Theme_textColorSecondaryNoDisable
           @see #Theme_textColorTertiary
           @see #Theme_textColorTertiaryInverse
           @see #Theme_textSelectHandle
           @see #Theme_textSelectHandleLeft
           @see #Theme_textSelectHandleRight
           @see #Theme_textSelectHandleWindowStyle
           @see #Theme_textViewStyle
           @see #Theme_webTextViewStyle
           @see #Theme_webViewStyle
           @see #Theme_windowAnimationStyle
           @see #Theme_windowBackground
           @see #Theme_windowContentOverlay
           @see #Theme_windowDisablePreview
           @see #Theme_windowFrame
           @see #Theme_windowFullscreen
           @see #Theme_windowIsFloating
           @see #Theme_windowIsTranslucent
           @see #Theme_windowNoDisplay
           @see #Theme_windowNoTitle
           @see #Theme_windowShowWallpaper
           @see #Theme_windowSoftInputMode
           @see #Theme_windowTitleBackgroundStyle
           @see #Theme_windowTitleSize
           @see #Theme_windowTitleStyle
           @see #Theme_yesNoPreferenceStyle
         */
        public static final int[] Theme = {
            0x01010030, 0x01010031, 0x01010032, 0x01010033,
            0x01010034, 0x01010035, 0x01010036, 0x01010037,
            0x01010038, 0x01010039, 0x0101003a, 0x0101003b,
            0x0101003c, 0x0101003d, 0x0101003e, 0x0101003f,
            0x01010040, 0x01010041, 0x01010042, 0x01010043,
            0x01010044, 0x01010045, 0x01010046, 0x01010047,
            0x01010048, 0x01010049, 0x0101004a, 0x0101004b,
            0x0101004c, 0x0101004d, 0x0101004e, 0x0101004f,
            0x01010050, 0x01010051, 0x01010052, 0x01010053,
            0x01010054, 0x01010055, 0x01010056, 0x01010057,
            0x01010058, 0x01010059, 0x0101005a, 0x0101005b,
            0x0101005c, 0x0101005d, 0x0101005e, 0x0101005f,
            0x01010060, 0x01010061, 0x01010062, 0x0101006a,
            0x0101006b, 0x0101006c, 0x0101006d, 0x0101006e,
            0x0101006f, 0x01010070, 0x01010071, 0x01010072,
            0x01010073, 0x01010074, 0x01010075, 0x01010076,
            0x01010077, 0x01010078, 0x01010079, 0x0101007a,
            0x0101007b, 0x0101007c, 0x0101007d, 0x0101007e,
            0x01010080, 0x01010081, 0x01010082, 0x01010083,
            0x01010084, 0x01010085, 0x01010086, 0x01010087,
            0x01010088, 0x01010089, 0x0101008a, 0x0101008b,
            0x0101008c, 0x0101008d, 0x0101008e, 0x0101008f,
            0x01010090, 0x01010091, 0x01010092, 0x01010093,
            0x01010094, 0x010100ae, 0x01010206, 0x01010207,
            0x01010208, 0x0101020d, 0x0101020f, 0x01010210,
            0x01010212, 0x01010213, 0x01010214, 0x01010219,
            0x0101021a, 0x0101021e, 0x0101021f, 0x01010222,
            0x0101022b, 0x01010230, 0x01010267, 0x01010287,
            0x01010288, 0x01010289, 0x0101028b, 0x01010292,
            0x010102a0, 0x010102a1, 0x010102ab, 0x010102ae,
            0x010102af, 0x010102b0, 0x010102b1, 0x010102b2,
            0x010102b3, 0x010102b6, 0x010102b9, 0x010102c5,
            0x010102c6, 0x010102c7, 0x010102c8, 0x010102cc,
            0x010102cd, 0x010102ce, 0x010102cf, 0x010102d0
        };
        /**
          <p>
          @attr description
           Default AbsListView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#absListViewStyle}.
          @attr name android:absListViewStyle
        */
        public static final int Theme_absListViewStyle = 51;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#alertDialogStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:alertDialogStyle
        */
        public static final int Theme_alertDialogStyle = 45;
        /**
          <p>
          @attr description
           Default AutoCompleteTextView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#autoCompleteTextViewStyle}.
          @attr name android:autoCompleteTextViewStyle
        */
        public static final int Theme_autoCompleteTextViewStyle = 52;
        /**
          <p>
          @attr description
           Default background dim amount when a menu, dialog, or something similar pops up. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#backgroundDimAmount}.
          @attr name android:backgroundDimAmount
        */
        public static final int Theme_backgroundDimAmount = 2;
        /**
          <p>
          @attr description
           Control whether dimming behind the window is enabled.  The default
             theme does not set this value, meaning it is based on whether the
             window is floating. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#backgroundDimEnabled}.
          @attr name android:backgroundDimEnabled
        */
        public static final int Theme_backgroundDimEnabled = 106;
        /**
          <p>
          @attr description
           Normal Button style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#buttonStyle}.
          @attr name android:buttonStyle
        */
        public static final int Theme_buttonStyle = 24;
        /**
          <p>
          @attr description
           Button style to inset into an EditText. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#buttonStyleInset}.
          @attr name android:buttonStyleInset
        */
        public static final int Theme_buttonStyleInset = 26;
        /**
          <p>
          @attr description
           Small Button style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#buttonStyleSmall}.
          @attr name android:buttonStyleSmall
        */
        public static final int Theme_buttonStyleSmall = 25;
        /**
          <p>
          @attr description
           ToggleButton style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#buttonStyleToggle}.
          @attr name android:buttonStyleToggle
        */
        public static final int Theme_buttonStyleToggle = 27;
        /**
          <p>
          @attr description
           A styled string, specifying the style to be used for showing
             inline candidate text when composing with an input method.  The
             text itself will be ignored, but the style spans will be applied
             to the candidate text as it is edited. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#candidatesTextStyleSpans}.
          @attr name android:candidatesTextStyleSpans
        */
        public static final int Theme_candidatesTextStyleSpans = 109;
        /**
          <p>
          @attr description
           Default style for CheckBoxPreference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#checkBoxPreferenceStyle}.
          @attr name android:checkBoxPreferenceStyle
        */
        public static final int Theme_checkBoxPreferenceStyle = 87;
        /**
          <p>
          @attr description
           Default Checkbox style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#checkboxStyle}.
          @attr name android:checkboxStyle
        */
        public static final int Theme_checkboxStyle = 53;
        /**
          <p>
          @attr description
           Color that matches (as closely as possible) the window background. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#colorBackground}.
          @attr name android:colorBackground
        */
        public static final int Theme_colorBackground = 1;
        /**
          <p>
          @attr description
           This is a hint for a solid color that can be used for caching
             rendered views.  This will be the color of the background when
             there is a solid background color; it will be null when the
             background is a texture or translucent. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#colorBackgroundCacheHint}.
          @attr name android:colorBackgroundCacheHint
        */
        public static final int Theme_colorBackgroundCacheHint = 118;
        /**
          <p>
          @attr description
           Default color of foreground imagery. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#colorForeground}.
          @attr name android:colorForeground
        */
        public static final int Theme_colorForeground = 0;
        /**
          <p>
          @attr description
           Default color of foreground imagery on an inverted background. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#colorForegroundInverse}.
          @attr name android:colorForegroundInverse
        */
        public static final int Theme_colorForegroundInverse = 94;
        /**
          <p>
          @attr description
           Default style for DialogPreference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dialogPreferenceStyle}.
          @attr name android:dialogPreferenceStyle
        */
        public static final int Theme_dialogPreferenceStyle = 89;
        /**
          <p>
          @attr description
           Default disabled alpha for widgets that set enabled/disabled alpha programmatically. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#disabledAlpha}.
          @attr name android:disabledAlpha
        */
        public static final int Theme_disabledAlpha = 3;
        /**
          <p>
          @attr description
           Default style for drop down hints. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dropDownHintAppearance}.
          @attr name android:dropDownHintAppearance
        */
        public static final int Theme_dropDownHintAppearance = 80;
        /**
          <p>
          @attr description
           Default style for drop down items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dropDownItemStyle}.
          @attr name android:dropDownItemStyle
        */
        public static final int Theme_dropDownItemStyle = 78;
        /**
          <p>
          @attr description
           Default ListView style for drop downs. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#dropDownListViewStyle}.
          @attr name android:dropDownListViewStyle
        */
        public static final int Theme_dropDownListViewStyle = 54;
        /**
          <p>
          @attr description
           Default style for EditTextPreference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#editTextPreferenceStyle}.
          @attr name android:editTextPreferenceStyle
        */
        public static final int Theme_editTextPreferenceStyle = 90;
        /**
          <p>
          @attr description
           Default EditText style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#editTextStyle}.
          @attr name android:editTextStyle
        */
        public static final int Theme_editTextStyle = 55;
        /**
          <p>
          @attr description
           The preferred left bound for an expandable list child's indicator. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#expandableListPreferredChildIndicatorLeft}.
          @attr name android:expandableListPreferredChildIndicatorLeft
        */
        public static final int Theme_expandableListPreferredChildIndicatorLeft = 34;
        /**
          <p>
          @attr description
           The preferred right bound for an expandable list child's indicator. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#expandableListPreferredChildIndicatorRight}.
          @attr name android:expandableListPreferredChildIndicatorRight
        */
        public static final int Theme_expandableListPreferredChildIndicatorRight = 35;
        /**
          <p>
          @attr description
           The preferred left padding for an expandable list item that is a child.
             If this is not provided, it defaults to the expandableListPreferredItemPaddingLeft. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#expandableListPreferredChildPaddingLeft}.
          @attr name android:expandableListPreferredChildPaddingLeft
        */
        public static final int Theme_expandableListPreferredChildPaddingLeft = 31;
        /**
          <p>
          @attr description
           The preferred left bound for an expandable list item's indicator. For a child-specific
             indicator, use expandableListPreferredChildIndicatorLeft. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#expandableListPreferredItemIndicatorLeft}.
          @attr name android:expandableListPreferredItemIndicatorLeft
        */
        public static final int Theme_expandableListPreferredItemIndicatorLeft = 32;
        /**
          <p>
          @attr description
           The preferred right bound for an expandable list item's indicator. For a child-specific
             indicator, use expandableListPreferredChildIndicatorRight. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#expandableListPreferredItemIndicatorRight}.
          @attr name android:expandableListPreferredItemIndicatorRight
        */
        public static final int Theme_expandableListPreferredItemIndicatorRight = 33;
        /**
          <p>
          @attr description
           The preferred left padding for an expandable list item (for child-specific layouts,
             use expandableListPreferredChildPaddingLeft). This takes into account
             the indicator that will be shown to next to the item. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#expandableListPreferredItemPaddingLeft}.
          @attr name android:expandableListPreferredItemPaddingLeft
        */
        public static final int Theme_expandableListPreferredItemPaddingLeft = 30;
        /**
          <p>
          @attr description
           Default ExpandableListView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#expandableListViewStyle}.
          @attr name android:expandableListViewStyle
        */
        public static final int Theme_expandableListViewStyle = 56;
        /**
          <p>
          @attr description
           ExpandableListView with white background. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#expandableListViewWhiteStyle}.
          @attr name android:expandableListViewWhiteStyle
        */
        public static final int Theme_expandableListViewWhiteStyle = 125;
        /**
          <p>
          @attr description
           The preferred background for gallery items. This should be set
             as the background of any Views you provide from the Adapter. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#galleryItemBackground}.
          @attr name android:galleryItemBackground
        */
        public static final int Theme_galleryItemBackground = 28;
        /**
          <p>
          @attr description
           Default Gallery style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#galleryStyle}.
          @attr name android:galleryStyle
        */
        public static final int Theme_galleryStyle = 57;
        /**
          <p>
          @attr description
           Default GridView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#gridViewStyle}.
          @attr name android:gridViewStyle
        */
        public static final int Theme_gridViewStyle = 58;
        /**
          <p>
          @attr description
           The style resource to use for an ImageButton. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#imageButtonStyle}.
          @attr name android:imageButtonStyle
        */
        public static final int Theme_imageButtonStyle = 59;
        /**
          <p>
          @attr description
           The style resource to use for an ImageButton that is an image well. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#imageWellStyle}.
          @attr name android:imageWellStyle
        */
        public static final int Theme_imageWellStyle = 60;
        /**
          <p>
          @attr description
           Drawable to use for multiple choice indicators. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#listChoiceIndicatorMultiple}.
          @attr name android:listChoiceIndicatorMultiple
        */
        public static final int Theme_listChoiceIndicatorMultiple = 104;
        /**
          <p>
          @attr description
           Drawable to use for single choice indicators. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#listChoiceIndicatorSingle}.
          @attr name android:listChoiceIndicatorSingle
        */
        public static final int Theme_listChoiceIndicatorSingle = 103;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#listDivider}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:listDivider
        */
        public static final int Theme_listDivider = 102;
        /**
          <p>
          @attr description
           The preferred list item height. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#listPreferredItemHeight}.
          @attr name android:listPreferredItemHeight
        */
        public static final int Theme_listPreferredItemHeight = 29;
        /**
          <p>
          @attr description
           TextView style for list separators. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#listSeparatorTextViewStyle}.
          @attr name android:listSeparatorTextViewStyle
        */
        public static final int Theme_listSeparatorTextViewStyle = 96;
        /**
          <p>
          @attr description
           Default ListView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#listViewStyle}.
          @attr name android:listViewStyle
        */
        public static final int Theme_listViewStyle = 61;
        /**
          <p>
          @attr description
           ListView with white background. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#listViewWhiteStyle}.
          @attr name android:listViewWhiteStyle
        */
        public static final int Theme_listViewWhiteStyle = 62;
        /**
          <p>
          @attr description
           Default MapView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#mapViewStyle}.
          @attr name android:mapViewStyle
        */
        public static final int Theme_mapViewStyle = 82;
        /**
          <p>
          @attr description
           The background of a panel when it is inset from the left and right edges of the screen. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#panelBackground}.
          @attr name android:panelBackground
        */
        public static final int Theme_panelBackground = 46;
        /**
          <p>
          @attr description
           Color that matches (as closely as possible) the panel background. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#panelColorBackground}.
          @attr name android:panelColorBackground
        */
        public static final int Theme_panelColorBackground = 49;
        /**
          <p>
          @attr description
           Default color of foreground panel imagery. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#panelColorForeground}.
          @attr name android:panelColorForeground
        */
        public static final int Theme_panelColorForeground = 48;
        /**
          <p>
          @attr description
           The background of a panel when it extends to the left and right edges of the screen. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#panelFullBackground}.
          @attr name android:panelFullBackground
        */
        public static final int Theme_panelFullBackground = 47;
        /**
          <p>
          @attr description
           Default appearance of panel text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#panelTextAppearance}.
          @attr name android:panelTextAppearance
        */
        public static final int Theme_panelTextAppearance = 50;
        /**
          <p>
          @attr description
           Default PopupWindow style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#popupWindowStyle}.
          @attr name android:popupWindowStyle
        */
        public static final int Theme_popupWindowStyle = 63;
        /**
          <p>
          @attr description
           Default style for PreferenceCategory. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#preferenceCategoryStyle}.
          @attr name android:preferenceCategoryStyle
        */
        public static final int Theme_preferenceCategoryStyle = 84;
        /**
          <p>
          @attr description
           Default style for informational Preference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#preferenceInformationStyle}.
          @attr name android:preferenceInformationStyle
        */
        public static final int Theme_preferenceInformationStyle = 85;
        /**
          <p>
          @attr description
           The preference layout that has the child/tabbed effect. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#preferenceLayoutChild}.
          @attr name android:preferenceLayoutChild
        */
        public static final int Theme_preferenceLayoutChild = 92;
        /**
          <p>
          @attr description
           Default style for PreferenceScreen. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#preferenceScreenStyle}.
          @attr name android:preferenceScreenStyle
        */
        public static final int Theme_preferenceScreenStyle = 83;
        /**
          <p>
          @attr description
           Default style for Preference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#preferenceStyle}.
          @attr name android:preferenceStyle
        */
        public static final int Theme_preferenceStyle = 86;
        /**
          <p>
          @attr description
           Default ProgressBar style. This is a medium circular progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#progressBarStyle}.
          @attr name android:progressBarStyle
        */
        public static final int Theme_progressBarStyle = 64;
        /**
          <p>
          @attr description
           Horizontal ProgressBar style. This is a horizontal progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#progressBarStyleHorizontal}.
          @attr name android:progressBarStyleHorizontal
        */
        public static final int Theme_progressBarStyleHorizontal = 65;
        /**
          <p>
          @attr description
           Inverse ProgressBar style. This is a medium circular progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#progressBarStyleInverse}.
          @attr name android:progressBarStyleInverse
        */
        public static final int Theme_progressBarStyleInverse = 111;
        /**
          <p>
          @attr description
           Large ProgressBar style. This is a large circular progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#progressBarStyleLarge}.
          @attr name android:progressBarStyleLarge
        */
        public static final int Theme_progressBarStyleLarge = 67;
        /**
          <p>
          @attr description
           Large inverse ProgressBar style. This is a large circular progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#progressBarStyleLargeInverse}.
          @attr name android:progressBarStyleLargeInverse
        */
        public static final int Theme_progressBarStyleLargeInverse = 113;
        /**
          <p>
          @attr description
           Small ProgressBar style. This is a small circular progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#progressBarStyleSmall}.
          @attr name android:progressBarStyleSmall
        */
        public static final int Theme_progressBarStyleSmall = 66;
        /**
          <p>
          @attr description
           Small inverse ProgressBar style. This is a small circular progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#progressBarStyleSmallInverse}.
          @attr name android:progressBarStyleSmallInverse
        */
        public static final int Theme_progressBarStyleSmallInverse = 112;
        /**
          <p>
          @attr description
           Small ProgressBar in title style. This is a small circular progress bar that will be placed in title bars. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#progressBarStyleSmallTitle}.
          @attr name android:progressBarStyleSmallTitle
        */
        public static final int Theme_progressBarStyleSmallTitle = 98;
        /**
          <p>
          @attr description
           Default quickcontact badge style with large quickcontact window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#quickContactBadgeStyleSmallWindowLarge}.
          @attr name android:quickContactBadgeStyleSmallWindowLarge
        */
        public static final int Theme_quickContactBadgeStyleSmallWindowLarge = 124;
        /**
          <p>
          @attr description
           Default quickcontact badge style with medium quickcontact window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#quickContactBadgeStyleSmallWindowMedium}.
          @attr name android:quickContactBadgeStyleSmallWindowMedium
        */
        public static final int Theme_quickContactBadgeStyleSmallWindowMedium = 123;
        /**
          <p>
          @attr description
           Default quickcontact badge style with small quickcontact window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#quickContactBadgeStyleSmallWindowSmall}.
          @attr name android:quickContactBadgeStyleSmallWindowSmall
        */
        public static final int Theme_quickContactBadgeStyleSmallWindowSmall = 122;
        /**
          <p>
          @attr description
           Default quickcontact badge style with large quickcontact window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#quickContactBadgeStyleWindowLarge}.
          @attr name android:quickContactBadgeStyleWindowLarge
        */
        public static final int Theme_quickContactBadgeStyleWindowLarge = 121;
        /**
          <p>
          @attr description
           Default quickcontact badge style with medium quickcontact window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#quickContactBadgeStyleWindowMedium}.
          @attr name android:quickContactBadgeStyleWindowMedium
        */
        public static final int Theme_quickContactBadgeStyleWindowMedium = 120;
        /**
          <p>
          @attr description
           Default quickcontact badge style with small quickcontact window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#quickContactBadgeStyleWindowSmall}.
          @attr name android:quickContactBadgeStyleWindowSmall
        */
        public static final int Theme_quickContactBadgeStyleWindowSmall = 119;
        /**
          <p>
          @attr description
           Default RadioButton style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#radioButtonStyle}.
          @attr name android:radioButtonStyle
        */
        public static final int Theme_radioButtonStyle = 71;
        /**
          <p>
          @attr description
           Default RatingBar style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#ratingBarStyle}.
          @attr name android:ratingBarStyle
        */
        public static final int Theme_ratingBarStyle = 69;
        /**
          <p>
          @attr description
           Indicator RatingBar style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#ratingBarStyleIndicator}.
          @attr name android:ratingBarStyleIndicator
        */
        public static final int Theme_ratingBarStyleIndicator = 99;
        /**
          <p>
          @attr description
           Small indicator RatingBar style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#ratingBarStyleSmall}.
          @attr name android:ratingBarStyleSmall
        */
        public static final int Theme_ratingBarStyleSmall = 70;
        /**
          <p>
          @attr description
           Default style for RingtonePreference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#ringtonePreferenceStyle}.
          @attr name android:ringtonePreferenceStyle
        */
        public static final int Theme_ringtonePreferenceStyle = 91;
        /**
          <p>
          @attr description
           Default ScrollView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollViewStyle}.
          @attr name android:scrollViewStyle
        */
        public static final int Theme_scrollViewStyle = 72;
        /**
          <p>
          @attr description
           Default SeekBar style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#seekBarStyle}.
          @attr name android:seekBarStyle
        */
        public static final int Theme_seekBarStyle = 68;
        /**
          <p>
          @attr description
           Default style for spinner drop down items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#spinnerDropDownItemStyle}.
          @attr name android:spinnerDropDownItemStyle
        */
        public static final int Theme_spinnerDropDownItemStyle = 79;
        /**
          <p>
          @attr description
           Default spinner item style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#spinnerItemStyle}.
          @attr name android:spinnerItemStyle
        */
        public static final int Theme_spinnerItemStyle = 81;
        /**
          <p>
          @attr description
           Default Spinner style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#spinnerStyle}.
          @attr name android:spinnerStyle
        */
        public static final int Theme_spinnerStyle = 73;
        /**
          <p>
          @attr description
           Default Star style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#starStyle}.
          @attr name android:starStyle
        */
        public static final int Theme_starStyle = 74;
        /**
          <p>
          @attr description
           Default TabWidget style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#tabWidgetStyle}.
          @attr name android:tabWidgetStyle
        */
        public static final int Theme_tabWidgetStyle = 75;
        /**
          <p>
          @attr description
           Default appearance of text: color, typeface, size, and style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textAppearance}.
          @attr name android:textAppearance
        */
        public static final int Theme_textAppearance = 4;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for the text inside of a button. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textAppearanceButton}.
          @attr name android:textAppearanceButton
        */
        public static final int Theme_textAppearanceButton = 95;
        /**
          <p>
          @attr description
           Default appearance of text against an inverted background:
             color, typeface, size, and style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textAppearanceInverse}.
          @attr name android:textAppearanceInverse
        */
        public static final int Theme_textAppearanceInverse = 5;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for "large" text. Defaults to primary text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textAppearanceLarge}.
          @attr name android:textAppearanceLarge
        */
        public static final int Theme_textAppearanceLarge = 16;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for "large" inverse text. Defaults to primary inverse text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textAppearanceLargeInverse}.
          @attr name android:textAppearanceLargeInverse
        */
        public static final int Theme_textAppearanceLargeInverse = 19;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for "medium" text. Defaults to primary text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textAppearanceMedium}.
          @attr name android:textAppearanceMedium
        */
        public static final int Theme_textAppearanceMedium = 17;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for "medium" inverse text. Defaults to primary inverse text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textAppearanceMediumInverse}.
          @attr name android:textAppearanceMediumInverse
        */
        public static final int Theme_textAppearanceMediumInverse = 20;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textAppearanceSearchResultSubtitle}.
          @attr name android:textAppearanceSearchResultSubtitle
        */
        public static final int Theme_textAppearanceSearchResultSubtitle = 116;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textAppearanceSearchResultTitle}.
          @attr name android:textAppearanceSearchResultTitle
        */
        public static final int Theme_textAppearanceSearchResultTitle = 117;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for "small" text. Defaults to secondary text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textAppearanceSmall}.
          @attr name android:textAppearanceSmall
        */
        public static final int Theme_textAppearanceSmall = 18;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for "small" inverse text. Defaults to secondary inverse text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textAppearanceSmallInverse}.
          @attr name android:textAppearanceSmallInverse
        */
        public static final int Theme_textAppearanceSmallInverse = 21;
        /**
          <p>
          @attr description
           Drawable to use for check marks. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textCheckMark}.
          @attr name android:textCheckMark
        */
        public static final int Theme_textCheckMark = 22;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#textCheckMarkInverse}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:textCheckMarkInverse
        */
        public static final int Theme_textCheckMarkInverse = 23;
        /**
          <p>
          @attr description
           Inverse hint text color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorHintInverse}.
          @attr name android:textColorHintInverse
        */
        public static final int Theme_textColorHintInverse = 15;
        /**
          <p>
          @attr description
           The most prominent text color.  


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorPrimary}.
          @attr name android:textColorPrimary
        */
        public static final int Theme_textColorPrimary = 6;
        /**
          <p>
          @attr description
           Bright text color. Only differentiates based on the disabled state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorPrimaryDisableOnly}.
          @attr name android:textColorPrimaryDisableOnly
        */
        public static final int Theme_textColorPrimaryDisableOnly = 7;
        /**
          <p>
          @attr description
           Primary inverse text color, useful for inverted backgrounds. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorPrimaryInverse}.
          @attr name android:textColorPrimaryInverse
        */
        public static final int Theme_textColorPrimaryInverse = 9;
        /**
          <p>
          @attr description
           Bright inverse text color. Only differentiates based on the disabled state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorPrimaryInverseDisableOnly}.
          @attr name android:textColorPrimaryInverseDisableOnly
        */
        public static final int Theme_textColorPrimaryInverseDisableOnly = 114;
        /**
          <p>
          @attr description
           Bright inverse text color. This does not differentiate the disabled state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorPrimaryInverseNoDisable}.
          @attr name android:textColorPrimaryInverseNoDisable
        */
        public static final int Theme_textColorPrimaryInverseNoDisable = 13;
        /**
          <p>
          @attr description
           Bright text color. This does not differentiate the disabled state. As an example,
             buttons use this since they display the disabled state via the background and not the
             foreground text color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorPrimaryNoDisable}.
          @attr name android:textColorPrimaryNoDisable
        */
        public static final int Theme_textColorPrimaryNoDisable = 11;
        /**
          <p>
          @attr description
           Secondary text color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorSecondary}.
          @attr name android:textColorSecondary
        */
        public static final int Theme_textColorSecondary = 8;
        /**
          <p>
          @attr description
           Secondary inverse text color, useful for inverted backgrounds. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorSecondaryInverse}.
          @attr name android:textColorSecondaryInverse
        */
        public static final int Theme_textColorSecondaryInverse = 10;
        /**
          <p>
          @attr description
           Dim inverse text color. This does not differentiate the disabled state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorSecondaryInverseNoDisable}.
          @attr name android:textColorSecondaryInverseNoDisable
        */
        public static final int Theme_textColorSecondaryInverseNoDisable = 14;
        /**
          <p>
          @attr description
           Dim text color. This does not differentiate the disabled state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorSecondaryNoDisable}.
          @attr name android:textColorSecondaryNoDisable
        */
        public static final int Theme_textColorSecondaryNoDisable = 12;
        /**
          <p>
          @attr description
           Tertiary text color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorTertiary}.
          @attr name android:textColorTertiary
        */
        public static final int Theme_textColorTertiary = 100;
        /**
          <p>
          @attr description
           Tertiary inverse text color, useful for inverted backgrounds. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColorTertiaryInverse}.
          @attr name android:textColorTertiaryInverse
        */
        public static final int Theme_textColorTertiaryInverse = 101;
        /**
          <p>
          @attr description
           Reference to a drawable that will be used to display a text selection
             anchor for positioning the cursor within text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textSelectHandle}.
          @attr name android:textSelectHandle
        */
        public static final int Theme_textSelectHandle = 129;
        /**
          <p>
          @attr description
           Reference to a drawable that will be used to display a text selection
             anchor on the left side of a selection region. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textSelectHandleLeft}.
          @attr name android:textSelectHandleLeft
        */
        public static final int Theme_textSelectHandleLeft = 127;
        /**
          <p>
          @attr description
           Reference to a drawable that will be used to display a text selection
             anchor on the right side of a selection region. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textSelectHandleRight}.
          @attr name android:textSelectHandleRight
        */
        public static final int Theme_textSelectHandleRight = 128;
        /**
          <p>
          @attr description
           Reference to a style that will be used for the window containing a text
             selection anchor. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textSelectHandleWindowStyle}.
          @attr name android:textSelectHandleWindowStyle
        */
        public static final int Theme_textSelectHandleWindowStyle = 130;
        /**
          <p>
          @attr description
           Default TextView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textViewStyle}.
          @attr name android:textViewStyle
        */
        public static final int Theme_textViewStyle = 76;
        /**
          <p>
          @attr description
           Default WebTextView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#webTextViewStyle}.
          @attr name android:webTextViewStyle
        */
        public static final int Theme_webTextViewStyle = 126;
        /**
          <p>
          @attr description
           Default WebView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#webViewStyle}.
          @attr name android:webViewStyle
        */
        public static final int Theme_webViewStyle = 77;
        /**
          <p>
          @attr description
           Reference to a style resource holding
             the set of window animations to use, which can be
             any of the attributes defined by
             {@link android.R.styleable#WindowAnimation}. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowAnimationStyle}.
          @attr name android:windowAnimationStyle
        */
        public static final int Theme_windowAnimationStyle = 93;
        /**
          <p>
          @attr description
           Drawable to use as the overall window background.  There are a
             few special considerations you should use when settings this
             drawable:
             <ul>
             <li> This information will be used to infer the pixel format
                  for your window's surface.  If the drawable has any
                  non-opaque pixels, your window will be translucent
                  (32 bpp).
             <li> If you want to draw the entire background
                  yourself, you should set this drawable to some solid
                  color that closely matches that background (so the
                  system's preview of your window will match), and
                  then in code manually set your window's background to
                  null so it will not be drawn.
             </ul> 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowBackground}.
          @attr name android:windowBackground
        */
        public static final int Theme_windowBackground = 36;
        /**
          <p>
          @attr description
           This Drawable is overlaid over the foreground of the Window's content area, usually
             to place a shadow below the title.  


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowContentOverlay}.
          @attr name android:windowContentOverlay
        */
        public static final int Theme_windowContentOverlay = 41;
        /**
          <p>
          @attr description
           Flag allowing you to disable the preview animation for a window.
             The default value is false; if set to true, the system can never
             use the window's theme to show a preview of it before your
             actual instance is shown to the user. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowDisablePreview}.
          @attr name android:windowDisablePreview
        */
        public static final int Theme_windowDisablePreview = 107;
        /**
          <p>
          @attr description
           Drawable to use as a frame around the window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowFrame}.
          @attr name android:windowFrame
        */
        public static final int Theme_windowFrame = 37;
        /**
          <p>
          @attr description
           Flag indicating whether this window should fill the entire screen. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowFullscreen}.
          @attr name android:windowFullscreen
        */
        public static final int Theme_windowFullscreen = 97;
        /**
          <p>
          @attr description
           Flag indicating whether this is a floating window. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowIsFloating}.
          @attr name android:windowIsFloating
        */
        public static final int Theme_windowIsFloating = 39;
        /**
          <p>
          @attr description
           Flag indicating whether this is a translucent window. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowIsTranslucent}.
          @attr name android:windowIsTranslucent
        */
        public static final int Theme_windowIsTranslucent = 40;
        /**
          <p>
          @attr description
           Flag indicating that this window should not be displayed at all.
             The default value is false; if set to true, and this window is
             the main window of an Activity, then it will never actually
             be added to the window manager.  This means that your activity
             must immediately quit without waiting for user interaction,
             because there will be no such interaction coming. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowNoDisplay}.
          @attr name android:windowNoDisplay
        */
        public static final int Theme_windowNoDisplay = 105;
        /**
          <p>
          @attr description
           Flag indicating whether there should be no title on this window. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowNoTitle}.
          @attr name android:windowNoTitle
        */
        public static final int Theme_windowNoTitle = 38;
        /**
          <p>
          @attr description
           Flag indicating that this window's background should be the
        	 user's current wallpaper. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowShowWallpaper}.
          @attr name android:windowShowWallpaper
        */
        public static final int Theme_windowShowWallpaper = 115;
        /**
          <p>
          @attr description
           Defines the default soft input state that this window would
             like when it is displayed. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>stateUnspecified</code></td><td>0</td><td> Not specified, use what the system thinks is best.  This
                 is the default. </td></tr>
<tr><td><code>stateUnchanged</code></td><td>1</td><td> Leave the soft input window as-is, in whatever state it
                 last was. </td></tr>
<tr><td><code>stateHidden</code></td><td>2</td><td> Make the soft input area hidden when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysHidden</code></td><td>3</td><td> Always make the soft input area hidden when this window
                 has input focus. </td></tr>
<tr><td><code>stateVisible</code></td><td>4</td><td> Make the soft input area visible when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysVisible</code></td><td>5</td><td> Always make the soft input area visible when this window
                 has input focus. </td></tr>
<tr><td><code>adjustUnspecified</code></td><td>0x00</td><td> The window resize/pan adjustment has not been specified,
                 the system will automatically select between resize and pan
                 modes, depending
                 on whether the content of the window has any layout views
                 that can scroll their contents.  If there is such a view,
                 then the window will be resized, with the assumption being
                 that the resizeable area can be reduced to make room for
                 the input UI. </td></tr>
<tr><td><code>adjustResize</code></td><td>0x10</td><td> Always resize the window: the content area of the window is
                 reduced to make room for the soft input area. </td></tr>
<tr><td><code>adjustPan</code></td><td>0x20</td><td> Don't resize the window to make room for the soft input area;
                 instead pan the contents of the window as focus moves inside
                 of it so that the user can see what they are typing.  This is
                 generally less desireable than panning because the user may
                 need to close the input area to get at and interact with
                 parts of the window. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowSoftInputMode}.
          @attr name android:windowSoftInputMode
        */
        public static final int Theme_windowSoftInputMode = 108;
        /**
          <p>
          @attr description
           The style resource to use for a window's title area. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowTitleBackgroundStyle}.
          @attr name android:windowTitleBackgroundStyle
        */
        public static final int Theme_windowTitleBackgroundStyle = 44;
        /**
          <p>
          @attr description
           The style resource to use for a window's title bar height. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowTitleSize}.
          @attr name android:windowTitleSize
        */
        public static final int Theme_windowTitleSize = 42;
        /**
          <p>
          @attr description
           The style resource to use for a window's title text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowTitleStyle}.
          @attr name android:windowTitleStyle
        */
        public static final int Theme_windowTitleStyle = 43;
        /**
          <p>
          @attr description
           Default style for YesNoPreference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#yesNoPreferenceStyle}.
          @attr name android:yesNoPreferenceStyle
        */
        public static final int Theme_yesNoPreferenceStyle = 88;
        /** Attributes that can be used with a ToggleButton.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ToggleButton_disabledAlpha android:disabledAlpha}</code></td><td> The alpha to apply to the indicator when disabled.</td></tr>
           <tr><td><code>{@link #ToggleButton_textOff android:textOff}</code></td><td> The text for the button when it is not checked.</td></tr>
           <tr><td><code>{@link #ToggleButton_textOn android:textOn}</code></td><td> The text for the button when it is checked.</td></tr>
           </table>
           @see #ToggleButton_disabledAlpha
           @see #ToggleButton_textOff
           @see #ToggleButton_textOn
         */
        public static final int[] ToggleButton = {
            0x01010033, 0x01010124, 0x01010125
        };
        /**
          <p>
          @attr description
           The alpha to apply to the indicator when disabled. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#disabledAlpha}.
          @attr name android:disabledAlpha
        */
        public static final int ToggleButton_disabledAlpha = 0;
        /**
          <p>
          @attr description
           The text for the button when it is not checked. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textOff}.
          @attr name android:textOff
        */
        public static final int ToggleButton_textOff = 2;
        /**
          <p>
          @attr description
           The text for the button when it is checked. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textOn}.
          @attr name android:textOn
        */
        public static final int ToggleButton_textOn = 1;
        /** Attributes that can be used with a TranslateAnimation.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TranslateAnimation_fromXDelta android:fromXDelta}</code></td><td></td></tr>
           <tr><td><code>{@link #TranslateAnimation_fromYDelta android:fromYDelta}</code></td><td></td></tr>
           <tr><td><code>{@link #TranslateAnimation_toXDelta android:toXDelta}</code></td><td></td></tr>
           <tr><td><code>{@link #TranslateAnimation_toYDelta android:toYDelta}</code></td><td></td></tr>
           </table>
           @see #TranslateAnimation_fromXDelta
           @see #TranslateAnimation_fromYDelta
           @see #TranslateAnimation_toXDelta
           @see #TranslateAnimation_toYDelta
         */
        public static final int[] TranslateAnimation = {
            0x010101c6, 0x010101c7, 0x010101c8, 0x010101c9
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#fromXDelta}
          attribute's value can be found in the {@link #TranslateAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:fromXDelta
        */
        public static final int TranslateAnimation_fromXDelta = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#fromYDelta}
          attribute's value can be found in the {@link #TranslateAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:fromYDelta
        */
        public static final int TranslateAnimation_fromYDelta = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#toXDelta}
          attribute's value can be found in the {@link #TranslateAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:toXDelta
        */
        public static final int TranslateAnimation_toXDelta = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#toYDelta}
          attribute's value can be found in the {@link #TranslateAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:toYDelta
        */
        public static final int TranslateAnimation_toYDelta = 3;
        /** Attributes that can be used with a TwoLineListItem.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TwoLineListItem_mode android:mode}</code></td><td></td></tr>
           </table>
           @see #TwoLineListItem_mode
         */
        public static final int[] TwoLineListItem = {
            0x0101017e
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#mode}
          attribute's value can be found in the {@link #TwoLineListItem} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>oneLine</code></td><td>1</td><td> Always show only the first line. </td></tr>
<tr><td><code>collapsing</code></td><td>2</td><td> When selected show both lines, otherwise show only the first line.
                 This is the default mode. </td></tr>
<tr><td><code>twoLine</code></td><td>3</td><td> Always show both lines. </td></tr>
</table>
          @attr name android:mode
        */
        public static final int TwoLineListItem_mode = 0;
        /** Attributes that can be used with a VerticalSlider_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #VerticalSlider_Layout_layout_scale android:layout_scale}</code></td><td></td></tr>
           </table>
           @see #VerticalSlider_Layout_layout_scale
         */
        public static final int[] VerticalSlider_Layout = {
            0x01010193
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_scale}
          attribute's value can be found in the {@link #VerticalSlider_Layout} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:layout_scale
        */
        public static final int VerticalSlider_Layout_layout_scale = 0;
        /**  Attributes that can be used with {@link android.view.View} or
         any of its subclasses.  Also see {@link #ViewGroup_Layout} for
         attributes that are processed by the view's parent. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #View_background android:background}</code></td><td> A drawable to use as the background.</td></tr>
           <tr><td><code>{@link #View_clickable android:clickable}</code></td><td> Defines whether this view reacts to click events.</td></tr>
           <tr><td><code>{@link #View_contentDescription android:contentDescription}</code></td><td> Defines text that briefly describes content of the view.</td></tr>
           <tr><td><code>{@link #View_drawingCacheQuality android:drawingCacheQuality}</code></td><td> Defines the quality of translucent drawing caches.</td></tr>
           <tr><td><code>{@link #View_duplicateParentState android:duplicateParentState}</code></td><td> When this attribute is set to true, the view gets its drawable state
             (focused, pressed, etc.</td></tr>
           <tr><td><code>{@link #View_fadeScrollbars android:fadeScrollbars}</code></td><td> Defines whether to fade out scrollbars when they are not in use.</td></tr>
           <tr><td><code>{@link #View_fadingEdge android:fadingEdge}</code></td><td> Defines which edges should be fadeded on scrolling.</td></tr>
           <tr><td><code>{@link #View_fadingEdgeLength android:fadingEdgeLength}</code></td><td> Defines the length of the fading edges.</td></tr>
           <tr><td><code>{@link #View_filterTouchesWhenObscured android:filterTouchesWhenObscured}</code></td><td> Specifies whether to filter touches when the view's window is obscured by
             another visible window.</td></tr>
           <tr><td><code>{@link #View_fitsSystemWindows android:fitsSystemWindows}</code></td><td> Boolean internal attribute to adjust view layout based on
             system windows such as the status bar.</td></tr>
           <tr><td><code>{@link #View_focusable android:focusable}</code></td><td> Boolean that controls whether a view can take focus.</td></tr>
           <tr><td><code>{@link #View_focusableInTouchMode android:focusableInTouchMode}</code></td><td> Boolean that controls whether a view can take focus while in touch mode.</td></tr>
           <tr><td><code>{@link #View_hapticFeedbackEnabled android:hapticFeedbackEnabled}</code></td><td> Boolean that controls whether a view should have haptic feedback
             enabled for events such as long presses.</td></tr>
           <tr><td><code>{@link #View_id android:id}</code></td><td> Supply an identifier name for this view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.</td></tr>
           <tr><td><code>{@link #View_isScrollContainer android:isScrollContainer}</code></td><td> Set this if the view will serve as a scrolling container, meaing
             that it can be resized to shrink its overall window so that there
             will be space for an input method.</td></tr>
           <tr><td><code>{@link #View_keepScreenOn android:keepScreenOn}</code></td><td> Controls whether the view's window should keep the screen on
             while visible.</td></tr>
           <tr><td><code>{@link #View_longClickable android:longClickable}</code></td><td> Defines whether this view reacts to long click events.</td></tr>
           <tr><td><code>{@link #View_minHeight android:minHeight}</code></td><td> Defines the minimum height of the view.</td></tr>
           <tr><td><code>{@link #View_minWidth android:minWidth}</code></td><td> Defines the minimum width of the view.</td></tr>
           <tr><td><code>{@link #View_nextFocusDown android:nextFocusDown}</code></td><td> Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_DOWN}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.</td></tr>
           <tr><td><code>{@link #View_nextFocusLeft android:nextFocusLeft}</code></td><td> Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_LEFT}.</td></tr>
           <tr><td><code>{@link #View_nextFocusRight android:nextFocusRight}</code></td><td> Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_RIGHT}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.</td></tr>
           <tr><td><code>{@link #View_nextFocusUp android:nextFocusUp}</code></td><td> Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_UP}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.</td></tr>
           <tr><td><code>{@link #View_onClick android:onClick}</code></td><td> Name of the method in this View's context to invoke when the view is
             clicked.</td></tr>
           <tr><td><code>{@link #View_overScrollMode android:overScrollMode}</code></td><td> Defines over-scrolling behavior.</td></tr>
           <tr><td><code>{@link #View_padding android:padding}</code></td><td> Sets the padding, in pixels, of all four edges.</td></tr>
           <tr><td><code>{@link #View_paddingBottom android:paddingBottom}</code></td><td> Sets the padding, in pixels, of the bottom edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingLeft android:paddingLeft}</code></td><td> Sets the padding, in pixels, of the left edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingRight android:paddingRight}</code></td><td> Sets the padding, in pixels, of the right edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingTop android:paddingTop}</code></td><td> Sets the padding, in pixels, of the top edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_saveEnabled android:saveEnabled}</code></td><td> If unset, no state will be saved for this view when it is being
             frozen.</td></tr>
           <tr><td><code>{@link #View_scrollX android:scrollX}</code></td><td> The initial horizontal scroll offset, in pixels.</td></tr>
           <tr><td><code>{@link #View_scrollY android:scrollY}</code></td><td> The initial vertical scroll offset, in pixels.</td></tr>
           <tr><td><code>{@link #View_scrollbarAlwaysDrawHorizontalTrack android:scrollbarAlwaysDrawHorizontalTrack}</code></td><td> Defines whether the horizontal scrollbar track should always be drawn.</td></tr>
           <tr><td><code>{@link #View_scrollbarAlwaysDrawVerticalTrack android:scrollbarAlwaysDrawVerticalTrack}</code></td><td> Defines whether the vertical scrollbar track should always be drawn.</td></tr>
           <tr><td><code>{@link #View_scrollbarDefaultDelayBeforeFade android:scrollbarDefaultDelayBeforeFade}</code></td><td> Defines the delay in milliseconds that a scrollbar waits before fade out.</td></tr>
           <tr><td><code>{@link #View_scrollbarFadeDuration android:scrollbarFadeDuration}</code></td><td> Defines the delay in milliseconds that a scrollbar takes to fade out.</td></tr>
           <tr><td><code>{@link #View_scrollbarSize android:scrollbarSize}</code></td><td> Sets the width of vertical scrollbars and height of horizontal scrollbars.</td></tr>
           <tr><td><code>{@link #View_scrollbarStyle android:scrollbarStyle}</code></td><td> Controls the scrollbar style and position.</td></tr>
           <tr><td><code>{@link #View_scrollbarThumbHorizontal android:scrollbarThumbHorizontal}</code></td><td> Defines the horizontal scrollbar thumb drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbarThumbVertical android:scrollbarThumbVertical}</code></td><td> Defines the vertical scrollbar thumb drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbarTrackHorizontal android:scrollbarTrackHorizontal}</code></td><td> Defines the horizontal scrollbar track drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbarTrackVertical android:scrollbarTrackVertical}</code></td><td> Defines the vertical scrollbar track drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbars android:scrollbars}</code></td><td> Defines which scrollbars should be displayed on scrolling or not.</td></tr>
           <tr><td><code>{@link #View_soundEffectsEnabled android:soundEffectsEnabled}</code></td><td> Boolean that controls whether a view should have sound effects
             enabled for events such as clicking and touching.</td></tr>
           <tr><td><code>{@link #View_tag android:tag}</code></td><td> Supply a tag for this view containing a String, to be retrieved
             later with {@link android.view.View#getTag View.getTag()} or
             searched for with {@link android.view.View#findViewWithTag
             View.findViewWithTag()}.</td></tr>
           <tr><td><code>{@link #View_visibility android:visibility}</code></td><td> Controls the initial visibility of the view.</td></tr>
           </table>
           @see #View_background
           @see #View_clickable
           @see #View_contentDescription
           @see #View_drawingCacheQuality
           @see #View_duplicateParentState
           @see #View_fadeScrollbars
           @see #View_fadingEdge
           @see #View_fadingEdgeLength
           @see #View_filterTouchesWhenObscured
           @see #View_fitsSystemWindows
           @see #View_focusable
           @see #View_focusableInTouchMode
           @see #View_hapticFeedbackEnabled
           @see #View_id
           @see #View_isScrollContainer
           @see #View_keepScreenOn
           @see #View_longClickable
           @see #View_minHeight
           @see #View_minWidth
           @see #View_nextFocusDown
           @see #View_nextFocusLeft
           @see #View_nextFocusRight
           @see #View_nextFocusUp
           @see #View_onClick
           @see #View_overScrollMode
           @see #View_padding
           @see #View_paddingBottom
           @see #View_paddingLeft
           @see #View_paddingRight
           @see #View_paddingTop
           @see #View_saveEnabled
           @see #View_scrollX
           @see #View_scrollY
           @see #View_scrollbarAlwaysDrawHorizontalTrack
           @see #View_scrollbarAlwaysDrawVerticalTrack
           @see #View_scrollbarDefaultDelayBeforeFade
           @see #View_scrollbarFadeDuration
           @see #View_scrollbarSize
           @see #View_scrollbarStyle
           @see #View_scrollbarThumbHorizontal
           @see #View_scrollbarThumbVertical
           @see #View_scrollbarTrackHorizontal
           @see #View_scrollbarTrackVertical
           @see #View_scrollbars
           @see #View_soundEffectsEnabled
           @see #View_tag
           @see #View_visibility
         */
        public static final int[] View = {
            0x01010063, 0x01010064, 0x01010065, 0x01010066,
            0x01010067, 0x01010068, 0x01010069, 0x0101007f,
            0x010100d0, 0x010100d1, 0x010100d2, 0x010100d3,
            0x010100d4, 0x010100d5, 0x010100d6, 0x010100d7,
            0x010100d8, 0x010100d9, 0x010100da, 0x010100db,
            0x010100dc, 0x010100dd, 0x010100de, 0x010100df,
            0x010100e0, 0x010100e1, 0x010100e2, 0x010100e3,
            0x010100e4, 0x010100e5, 0x010100e6, 0x010100e7,
            0x010100e8, 0x010100e9, 0x0101013f, 0x01010140,
            0x01010215, 0x01010216, 0x0101024e, 0x0101025e,
            0x0101026f, 0x01010273, 0x010102a8, 0x010102a9,
            0x010102aa, 0x010102c1, 0x010102c4
        };
        /**
          <p>
          @attr description
           A drawable to use as the background.  This can be either a reference
             to a full drawable resource (such as a PNG image, 9-patch,
             XML state list description, etc), or a solid color such as "#ff000000"
            (black). 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#background}.
          @attr name android:background
        */
        public static final int View_background = 12;
        /**
          <p>
          @attr description
           Defines whether this view reacts to click events. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#clickable}.
          @attr name android:clickable
        */
        public static final int View_clickable = 29;
        /**
          <p>
          @attr description
           Defines text that briefly describes content of the view. This property is used
             primarily for accessibility. Since some views do not have textual
             representation this attribute can be used for providing such. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#contentDescription}.
          @attr name android:contentDescription
        */
        public static final int View_contentDescription = 41;
        /**
          <p>
          @attr description
           Defines the quality of translucent drawing caches. This property is used
             only when the drawing cache is enabled and translucent. The default value is auto. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td> Lets the framework decide what quality level should be used
                 for the drawing cache. </td></tr>
<tr><td><code>low</code></td><td>1</td><td> Low quality. When set to low quality, the drawing cache uses a lower color
                 depth, thus losing precision in rendering gradients, but uses less memory. </td></tr>
<tr><td><code>high</code></td><td>2</td><td> High quality. When set to high quality, the drawing cache uses a higher
                 color depth but uses more memory. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#drawingCacheQuality}.
          @attr name android:drawingCacheQuality
        */
        public static final int View_drawingCacheQuality = 32;
        /**
          <p>
          @attr description
           When this attribute is set to true, the view gets its drawable state
             (focused, pressed, etc.) from its direct parent rather than from itself. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#duplicateParentState}.
          @attr name android:duplicateParentState
        */
        public static final int View_duplicateParentState = 33;
        /**
          <p>
          @attr description
           Defines whether to fade out scrollbars when they are not in use. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#fadeScrollbars}.
          @attr name android:fadeScrollbars
        */
        public static final int View_fadeScrollbars = 44;
        /**
          <p>
          @attr description
           Defines which edges should be fadeded on scrolling. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No edge is faded. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00001000</td><td> Fades horizontal edges only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00002000</td><td> Fades vertical edges only. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#fadingEdge}.
          @attr name android:fadingEdge
        */
        public static final int View_fadingEdge = 23;
        /**
          <p>
          @attr description
           Defines the length of the fading edges. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#fadingEdgeLength}.
          @attr name android:fadingEdgeLength
        */
        public static final int View_fadingEdgeLength = 24;
        /**
          <p>
          @attr description
           Specifies whether to filter touches when the view's window is obscured by
             another visible window.  When set to true, the view will not receive touches
             whenever a toast, dialog or other window appears above the view's window.
             Refer to the {@link android.view.View} security documentation for more details. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#filterTouchesWhenObscured}.
          @attr name android:filterTouchesWhenObscured
        */
        public static final int View_filterTouchesWhenObscured = 46;
        /**
          <p>
          @attr description
           Boolean internal attribute to adjust view layout based on
             system windows such as the status bar.
             If true, adjusts the padding of this view to leave space for the system windows.
             Will only take effect if this view is in a non-embedded activity. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#fitsSystemWindows}.
          @attr name android:fitsSystemWindows
        */
        public static final int View_fitsSystemWindows = 21;
        /**
          <p>
          @attr description
           Boolean that controls whether a view can take focus.  By default the user can not
             move focus to a view; by setting this attribute to true the view is
             allowed to take focus.  This value does not impact the behavior of
             directly calling {@link android.view.View#requestFocus}, which will
             always request focus regardless of this view.  It only impacts where
             focus navigation will try to move focus. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#focusable}.
          @attr name android:focusable
        */
        public static final int View_focusable = 18;
        /**
          <p>
          @attr description
           Boolean that controls whether a view can take focus while in touch mode.
             If this is true for a view, that view can gain focus when clicked on, and can keep
             focus if another view is clicked on that doesn't have this attribute set to true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#focusableInTouchMode}.
          @attr name android:focusableInTouchMode
        */
        public static final int View_focusableInTouchMode = 19;
        /**
          <p>
          @attr description
           Boolean that controls whether a view should have haptic feedback
             enabled for events such as long presses. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#hapticFeedbackEnabled}.
          @attr name android:hapticFeedbackEnabled
        */
        public static final int View_hapticFeedbackEnabled = 39;
        /**
          <p>
          @attr description
           Supply an identifier name for this view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.
             This must be a
             resource reference; typically you set this using the
             <code>@+</code> syntax to create a new ID resources.
             For example: <code>android:id="@+id/my_id"</code> which
             allows you to later retrieve the view
             with <code>findViewById(R.id.my_id)</code>. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#id}.
          @attr name android:id
        */
        public static final int View_id = 8;
        /**
          <p>
          @attr description
           Set this if the view will serve as a scrolling container, meaing
             that it can be resized to shrink its overall window so that there
             will be space for an input method.  If not set, the default
             value will be true if "scrollbars" has the vertical scrollbar
             set, else it will be false. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#isScrollContainer}.
          @attr name android:isScrollContainer
        */
        public static final int View_isScrollContainer = 38;
        /**
          <p>
          @attr description
           Controls whether the view's window should keep the screen on
             while visible. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#keepScreenOn}.
          @attr name android:keepScreenOn
        */
        public static final int View_keepScreenOn = 37;
        /**
          <p>
          @attr description
           Defines whether this view reacts to long click events. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#longClickable}.
          @attr name android:longClickable
        */
        public static final int View_longClickable = 30;
        /**
          <p>
          @attr description
           Defines the minimum height of the view. It is not guaranteed
             the view will be able to achieve this minimum height (for example,
             if its parent layout constrains it with less available height). 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#minHeight}.
          @attr name android:minHeight
        */
        public static final int View_minHeight = 35;
        /**
          <p>
          @attr description
           Defines the minimum width of the view. It is not guaranteed
             the view will be able to achieve this minimum width (for example,
             if its parent layout constrains it with less available width). 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#minWidth}.
          @attr name android:minWidth
        */
        public static final int View_minWidth = 34;
        /**
          <p>
          @attr description
           Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_DOWN}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#nextFocusDown}.
          @attr name android:nextFocusDown
        */
        public static final int View_nextFocusDown = 28;
        /**
          <p>
          @attr description
           Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_LEFT}.

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#nextFocusLeft}.
          @attr name android:nextFocusLeft
        */
        public static final int View_nextFocusLeft = 25;
        /**
          <p>
          @attr description
           Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_RIGHT}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#nextFocusRight}.
          @attr name android:nextFocusRight
        */
        public static final int View_nextFocusRight = 26;
        /**
          <p>
          @attr description
           Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_UP}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#nextFocusUp}.
          @attr name android:nextFocusUp
        */
        public static final int View_nextFocusUp = 27;
        /**
          <p>
          @attr description
           Name of the method in this View's context to invoke when the view is
             clicked. This name must correspond to a public method that takes
             exactly one parameter of type View. For instance, if you specify
             <code>android:onClick="sayHello"</code>, you must declare a
             <code>public void sayHello(View v)</code> method of your context
             (typically, your Activity). 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#onClick}.
          @attr name android:onClick
        */
        public static final int View_onClick = 40;
        /**
          <p>
          @attr description
           Defines over-scrolling behavior. This property is used only if the
             View is scrollable. Over-scrolling is the ability for the user to
             receive feedback when attempting to scroll beyond meaningful content. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>always</code></td><td>0</td><td> Always show over-scroll effects, even if the content fits entirely
                 within the available space. </td></tr>
<tr><td><code>ifContentScrolls</code></td><td>1</td><td> Only show over-scroll effects if the content is large
                 enough to meaningfully scroll. </td></tr>
<tr><td><code>never</code></td><td>2</td><td> Never show over-scroll effects. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#overScrollMode}.
          @attr name android:overScrollMode
        */
        public static final int View_overScrollMode = 45;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of all four edges.  Padding is defined as
             space between the edges of the view and the view's content. A views size
             will include it's padding.  If a {@link android.R.attr#background}
             is provided, the padding will initially be set to that (0 if the
             drawable does not have padding).  Explicitly setting a padding value
             will override the corresponding padding found in the background. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#padding}.
          @attr name android:padding
        */
        public static final int View_padding = 13;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the bottom edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#paddingBottom}.
          @attr name android:paddingBottom
        */
        public static final int View_paddingBottom = 17;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the left edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#paddingLeft}.
          @attr name android:paddingLeft
        */
        public static final int View_paddingLeft = 14;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the right edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#paddingRight}.
          @attr name android:paddingRight
        */
        public static final int View_paddingRight = 16;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the top edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#paddingTop}.
          @attr name android:paddingTop
        */
        public static final int View_paddingTop = 15;
        /**
          <p>
          @attr description
           If unset, no state will be saved for this view when it is being
             frozen. The default is true, allowing the view to be saved
             (however it also must have an ID assigned to it for its
             state to be saved).  Setting this to false only disables the
             state for this view, not for its children which may still
             be saved. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#saveEnabled}.
          @attr name android:saveEnabled
        */
        public static final int View_saveEnabled = 31;
        /**
          <p>
          @attr description
           The initial horizontal scroll offset, in pixels.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollX}.
          @attr name android:scrollX
        */
        public static final int View_scrollX = 10;
        /**
          <p>
          @attr description
           The initial vertical scroll offset, in pixels. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollY}.
          @attr name android:scrollY
        */
        public static final int View_scrollY = 11;
        /**
          <p>
          @attr description
           Defines whether the horizontal scrollbar track should always be drawn. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollbarAlwaysDrawHorizontalTrack}.
          @attr name android:scrollbarAlwaysDrawHorizontalTrack
        */
        public static final int View_scrollbarAlwaysDrawHorizontalTrack = 5;
        /**
          <p>
          @attr description
           Defines whether the vertical scrollbar track should always be drawn. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollbarAlwaysDrawVerticalTrack}.
          @attr name android:scrollbarAlwaysDrawVerticalTrack
        */
        public static final int View_scrollbarAlwaysDrawVerticalTrack = 6;
        /**
          <p>
          @attr description
           Defines the delay in milliseconds that a scrollbar waits before fade out. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollbarDefaultDelayBeforeFade}.
          @attr name android:scrollbarDefaultDelayBeforeFade
        */
        public static final int View_scrollbarDefaultDelayBeforeFade = 43;
        /**
          <p>
          @attr description
           Defines the delay in milliseconds that a scrollbar takes to fade out. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollbarFadeDuration}.
          @attr name android:scrollbarFadeDuration
        */
        public static final int View_scrollbarFadeDuration = 42;
        /**
          <p>
          @attr description
           Sets the width of vertical scrollbars and height of horizontal scrollbars. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollbarSize}.
          @attr name android:scrollbarSize
        */
        public static final int View_scrollbarSize = 0;
        /**
          <p>
          @attr description
           Controls the scrollbar style and position. The scrollbars can be overlaid or
             inset. When inset, they add to the padding of the view. And the
             scrollbars can be drawn inside the padding area or on the edge of
             the view. For example, if a view has a background drawable and you
             want to draw the scrollbars inside the padding specified by the
             drawable, you can use insideOverlay or insideInset. If you want them
             to appear at the edge of the view, ignoring the padding, then you can
             use outsideOverlay or outsideInset.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>insideOverlay</code></td><td>0x0</td><td> Inside the padding and overlaid </td></tr>
<tr><td><code>insideInset</code></td><td>0x01000000</td><td> Inside the padding and inset </td></tr>
<tr><td><code>outsideOverlay</code></td><td>0x02000000</td><td> Edge of the view and overlaid </td></tr>
<tr><td><code>outsideInset</code></td><td>0x03000000</td><td> Edge of the view and inset </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollbarStyle}.
          @attr name android:scrollbarStyle
        */
        public static final int View_scrollbarStyle = 7;
        /**
          <p>
          @attr description
           Defines the horizontal scrollbar thumb drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollbarThumbHorizontal}.
          @attr name android:scrollbarThumbHorizontal
        */
        public static final int View_scrollbarThumbHorizontal = 1;
        /**
          <p>
          @attr description
           Defines the vertical scrollbar thumb drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollbarThumbVertical}.
          @attr name android:scrollbarThumbVertical
        */
        public static final int View_scrollbarThumbVertical = 2;
        /**
          <p>
          @attr description
           Defines the horizontal scrollbar track drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollbarTrackHorizontal}.
          @attr name android:scrollbarTrackHorizontal
        */
        public static final int View_scrollbarTrackHorizontal = 3;
        /**
          <p>
          @attr description
           Defines the vertical scrollbar track drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollbarTrackVertical}.
          @attr name android:scrollbarTrackVertical
        */
        public static final int View_scrollbarTrackVertical = 4;
        /**
          <p>
          @attr description
           Defines which scrollbars should be displayed on scrolling or not. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No scrollbar is displayed. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00000100</td><td> Displays horizontal scrollbar only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00000200</td><td> Displays vertical scrollbar only. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#scrollbars}.
          @attr name android:scrollbars
        */
        public static final int View_scrollbars = 22;
        /**
          <p>
          @attr description
           Boolean that controls whether a view should have sound effects
             enabled for events such as clicking and touching. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#soundEffectsEnabled}.
          @attr name android:soundEffectsEnabled
        */
        public static final int View_soundEffectsEnabled = 36;
        /**
          <p>
          @attr description
           Supply a tag for this view containing a String, to be retrieved
             later with {@link android.view.View#getTag View.getTag()} or
             searched for with {@link android.view.View#findViewWithTag
             View.findViewWithTag()}.  It is generally preferable to use
             IDs (through the android:id attribute) instead of tags because
             they are faster and allow for compile-time type checking. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#tag}.
          @attr name android:tag
        */
        public static final int View_tag = 9;
        /**
          <p>
          @attr description
           Controls the initial visibility of the view.  


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>visible</code></td><td>0</td><td> Visible on screen; the default value. </td></tr>
<tr><td><code>invisible</code></td><td>1</td><td> Not displayed, but taken into account during layout (space is left for it). </td></tr>
<tr><td><code>gone</code></td><td>2</td><td> Completely hidden, as if the view had not been added. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#visibility}.
          @attr name android:visibility
        */
        public static final int View_visibility = 20;
        /** Attributes that can be used with a ViewAnimator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewAnimator_inAnimation android:inAnimation}</code></td><td></td></tr>
           <tr><td><code>{@link #ViewAnimator_outAnimation android:outAnimation}</code></td><td></td></tr>
           </table>
           @see #ViewAnimator_inAnimation
           @see #ViewAnimator_outAnimation
         */
        public static final int[] ViewAnimator = {
            0x01010177, 0x01010178
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#inAnimation}
          attribute's value can be found in the {@link #ViewAnimator} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:inAnimation
        */
        public static final int ViewAnimator_inAnimation = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#outAnimation}
          attribute's value can be found in the {@link #ViewAnimator} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:outAnimation
        */
        public static final int ViewAnimator_outAnimation = 1;
        /** Attributes that can be used with a ViewDrawableStates.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewDrawableStates_state_enabled android:state_enabled}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #ViewDrawableStates_state_focused android:state_focused}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #ViewDrawableStates_state_pressed android:state_pressed}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #ViewDrawableStates_state_selected android:state_selected}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #ViewDrawableStates_state_window_focused android:state_window_focused}</code></td><td>  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           </table>
           @see #ViewDrawableStates_state_enabled
           @see #ViewDrawableStates_state_focused
           @see #ViewDrawableStates_state_pressed
           @see #ViewDrawableStates_state_selected
           @see #ViewDrawableStates_state_window_focused
         */
        public static final int[] ViewDrawableStates = {
            0x0101009c, 0x0101009d, 0x0101009e, 0x010100a1,
            0x010100a7
        };
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_enabled}.
          @attr name android:state_enabled
        */
        public static final int ViewDrawableStates_state_enabled = 2;
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_focused}.
          @attr name android:state_focused
        */
        public static final int ViewDrawableStates_state_focused = 0;
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_pressed}.
          @attr name android:state_pressed
        */
        public static final int ViewDrawableStates_state_pressed = 4;
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_selected}.
          @attr name android:state_selected
        */
        public static final int ViewDrawableStates_state_selected = 3;
        /**
          <p>
          @attr description
            State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#state_window_focused}.
          @attr name android:state_window_focused
        */
        public static final int ViewDrawableStates_state_window_focused = 1;
        /** Attributes that can be used with a ViewFlipper.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewFlipper_autoStart android:autoStart}</code></td><td> When true, automatically start animating </td></tr>
           <tr><td><code>{@link #ViewFlipper_flipInterval android:flipInterval}</code></td><td></td></tr>
           </table>
           @see #ViewFlipper_autoStart
           @see #ViewFlipper_flipInterval
         */
        public static final int[] ViewFlipper = {
            0x01010179, 0x010102b5
        };
        /**
          <p>
          @attr description
           When true, automatically start animating 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#autoStart}.
          @attr name android:autoStart
        */
        public static final int ViewFlipper_autoStart = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#flipInterval}
          attribute's value can be found in the {@link #ViewFlipper} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:flipInterval
        */
        public static final int ViewFlipper_flipInterval = 0;
        /**  Attributes that can be used with a {@link android.view.ViewGroup} or any
         of its subclasses.  Also see {@link #ViewGroup_Layout} for
         attributes that this class processes in its children. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewGroup_addStatesFromChildren android:addStatesFromChildren}</code></td><td> Sets whether this ViewGroup's drawable states also include
             its children's drawable states.</td></tr>
           <tr><td><code>{@link #ViewGroup_alwaysDrawnWithCache android:alwaysDrawnWithCache}</code></td><td> Defines whether the ViewGroup should always draw its children using their
             drawing cache or not.</td></tr>
           <tr><td><code>{@link #ViewGroup_animationCache android:animationCache}</code></td><td> Defines whether layout animations should create a drawing cache for their
             children.</td></tr>
           <tr><td><code>{@link #ViewGroup_clipChildren android:clipChildren}</code></td><td> Defines whether a child is limited to draw inside of its bounds or not.</td></tr>
           <tr><td><code>{@link #ViewGroup_clipToPadding android:clipToPadding}</code></td><td> Defines whether the ViewGroup will clip its drawing surface so as to exclude
             the padding area.</td></tr>
           <tr><td><code>{@link #ViewGroup_descendantFocusability android:descendantFocusability}</code></td><td> Defines the relationship between the ViewGroup and its descendants
             when looking for a View to take focus.</td></tr>
           <tr><td><code>{@link #ViewGroup_layoutAnimation android:layoutAnimation}</code></td><td> Defines the layout animation to use the first time the ViewGroup is laid out.</td></tr>
           <tr><td><code>{@link #ViewGroup_persistentDrawingCache android:persistentDrawingCache}</code></td><td> Defines the persistence of the drawing cache.</td></tr>
           </table>
           @see #ViewGroup_addStatesFromChildren
           @see #ViewGroup_alwaysDrawnWithCache
           @see #ViewGroup_animationCache
           @see #ViewGroup_clipChildren
           @see #ViewGroup_clipToPadding
           @see #ViewGroup_descendantFocusability
           @see #ViewGroup_layoutAnimation
           @see #ViewGroup_persistentDrawingCache
         */
        public static final int[] ViewGroup = {
            0x010100ea, 0x010100eb, 0x010100ec, 0x010100ed,
            0x010100ee, 0x010100ef, 0x010100f0, 0x010100f1
        };
        /**
          <p>
          @attr description
           Sets whether this ViewGroup's drawable states also include
             its children's drawable states.  This is used, for example, to
             make a group appear to be focused when its child EditText or button
             is focused. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#addStatesFromChildren}.
          @attr name android:addStatesFromChildren
        */
        public static final int ViewGroup_addStatesFromChildren = 6;
        /**
          <p>
          @attr description
           Defines whether the ViewGroup should always draw its children using their
             drawing cache or not. The default value is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#alwaysDrawnWithCache}.
          @attr name android:alwaysDrawnWithCache
        */
        public static final int ViewGroup_alwaysDrawnWithCache = 5;
        /**
          <p>
          @attr description
           Defines whether layout animations should create a drawing cache for their
             children. Enabling the animation cache consumes more memory and requires
             a longer initialization but provides better performance. The animation
             cache is enabled by default. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#animationCache}.
          @attr name android:animationCache
        */
        public static final int ViewGroup_animationCache = 3;
        /**
          <p>
          @attr description
           Defines whether a child is limited to draw inside of its bounds or not.
             This is useful with animations that scale the size of the children to more
             than 100% for instance. In such a case, this property should be set to false
             to allow the children to draw outside of their bounds. The default value of
             this property is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#clipChildren}.
          @attr name android:clipChildren
        */
        public static final int ViewGroup_clipChildren = 0;
        /**
          <p>
          @attr description
           Defines whether the ViewGroup will clip its drawing surface so as to exclude
             the padding area. This property is set to true by default. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#clipToPadding}.
          @attr name android:clipToPadding
        */
        public static final int ViewGroup_clipToPadding = 1;
        /**
          <p>
          @attr description
           Defines the relationship between the ViewGroup and its descendants
             when looking for a View to take focus. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>beforeDescendants</code></td><td>0</td><td> The ViewGroup will get focus before any of its descendants. </td></tr>
<tr><td><code>afterDescendants</code></td><td>1</td><td> The ViewGroup will get focus only if none of its descendants want it. </td></tr>
<tr><td><code>blocksDescendants</code></td><td>2</td><td> The ViewGroup will block its descendants from receiving focus. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#descendantFocusability}.
          @attr name android:descendantFocusability
        */
        public static final int ViewGroup_descendantFocusability = 7;
        /**
          <p>
          @attr description
           Defines the layout animation to use the first time the ViewGroup is laid out.
             Layout animations can also be started manually after the first layout. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layoutAnimation}.
          @attr name android:layoutAnimation
        */
        public static final int ViewGroup_layoutAnimation = 2;
        /**
          <p>
          @attr description
           Defines the persistence of the drawing cache. The drawing cache might be
             enabled by a ViewGroup for all its children in specific situations (for
             instance during a scrolling.) This property lets you persist the cache
             in memory after its initial usage. Persisting the cache consumes more
             memory but may prevent frequent garbage collection is the cache is created
             over and over again. By default the persistence is set to scrolling. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x0</td><td> The drawing cache is not persisted after use. </td></tr>
<tr><td><code>animation</code></td><td>0x1</td><td> The drawing cache is persisted after a layout animation. </td></tr>
<tr><td><code>scrolling</code></td><td>0x2</td><td> The drawing cache is persisted after a scroll. </td></tr>
<tr><td><code>all</code></td><td>0x3</td><td> The drawing cache is always persisted. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#persistentDrawingCache}.
          @attr name android:persistentDrawingCache
        */
        public static final int ViewGroup_persistentDrawingCache = 4;
        /**  This is the basic set of layout attributes that are common to all
         layout managers.  These attributes are specified with the rest of
         a view's normal attributes (such as {@link android.R.attr#background},
         but will be parsed by the view's parent and ignored by the child.
        <p>The values defined here correspond to the base layout attribute
        class {@link android.view.ViewGroup.LayoutParams}. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewGroup_Layout_layout_height android:layout_height}</code></td><td> Specifies the basic height of the view.</td></tr>
           <tr><td><code>{@link #ViewGroup_Layout_layout_width android:layout_width}</code></td><td> Specifies the basic width of the view.</td></tr>
           </table>
           @see #ViewGroup_Layout_layout_height
           @see #ViewGroup_Layout_layout_width
         */
        public static final int[] ViewGroup_Layout = {
            0x010100f4, 0x010100f5
        };
        /**
          <p>
          @attr description
           Specifies the basic height of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant height or one of
             the special constants. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_height}.
          @attr name android:layout_height
        */
        public static final int ViewGroup_Layout_layout_height = 1;
        /**
          <p>
          @attr description
           Specifies the basic width of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant width or one of
             the special constants. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_width}.
          @attr name android:layout_width
        */
        public static final int ViewGroup_Layout_layout_width = 0;
        /**  This is the basic set of layout attributes for layout managers that
         wish to place margins around their child views.
         These attributes are specified with the rest of
         a view's normal attributes (such as {@link android.R.attr#background},
         but will be parsed by the view's parent and ignored by the child.
        <p>The values defined here correspond to the base layout attribute
        class {@link android.view.ViewGroup.MarginLayoutParams}. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_height android:layout_height}</code></td><td> Specifies the basic height of the view.</td></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_margin android:layout_margin}</code></td><td>  Specifies extra space on the left, top, right and bottom
              sides of this view.</td></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_marginBottom android:layout_marginBottom}</code></td><td>  Specifies extra space on the bottom side of this view.</td></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_marginLeft android:layout_marginLeft}</code></td><td>  Specifies extra space on the left side of this view.</td></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_marginRight android:layout_marginRight}</code></td><td>  Specifies extra space on the right side of this view.</td></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_marginTop android:layout_marginTop}</code></td><td>  Specifies extra space on the top side of this view.</td></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_width android:layout_width}</code></td><td> Specifies the basic width of the view.</td></tr>
           </table>
           @see #ViewGroup_MarginLayout_layout_height
           @see #ViewGroup_MarginLayout_layout_margin
           @see #ViewGroup_MarginLayout_layout_marginBottom
           @see #ViewGroup_MarginLayout_layout_marginLeft
           @see #ViewGroup_MarginLayout_layout_marginRight
           @see #ViewGroup_MarginLayout_layout_marginTop
           @see #ViewGroup_MarginLayout_layout_width
         */
        public static final int[] ViewGroup_MarginLayout = {
            0x010100f4, 0x010100f5, 0x010100f6, 0x010100f7,
            0x010100f8, 0x010100f9, 0x010100fa
        };
        /**
          <p>
          @attr description
           Specifies the basic height of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant height or one of
             the special constants. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_height}.
          @attr name android:layout_height
        */
        public static final int ViewGroup_MarginLayout_layout_height = 1;
        /**
          <p>
          @attr description
            Specifies extra space on the left, top, right and bottom
              sides of this view. This space is outside this view's bounds. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_margin}.
          @attr name android:layout_margin
        */
        public static final int ViewGroup_MarginLayout_layout_margin = 2;
        /**
          <p>
          @attr description
            Specifies extra space on the bottom side of this view.
              This space is outside this view's bounds. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_marginBottom}.
          @attr name android:layout_marginBottom
        */
        public static final int ViewGroup_MarginLayout_layout_marginBottom = 6;
        /**
          <p>
          @attr description
            Specifies extra space on the left side of this view.
              This space is outside this view's bounds. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_marginLeft}.
          @attr name android:layout_marginLeft
        */
        public static final int ViewGroup_MarginLayout_layout_marginLeft = 3;
        /**
          <p>
          @attr description
            Specifies extra space on the right side of this view.
              This space is outside this view's bounds. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_marginRight}.
          @attr name android:layout_marginRight
        */
        public static final int ViewGroup_MarginLayout_layout_marginRight = 5;
        /**
          <p>
          @attr description
            Specifies extra space on the top side of this view.
              This space is outside this view's bounds. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_marginTop}.
          @attr name android:layout_marginTop
        */
        public static final int ViewGroup_MarginLayout_layout_marginTop = 4;
        /**
          <p>
          @attr description
           Specifies the basic width of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant width or one of
             the special constants. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout_width}.
          @attr name android:layout_width
        */
        public static final int ViewGroup_MarginLayout_layout_width = 0;
        /**  A {@link android.view.ViewStub} lets you lazily include other XML layouts
         inside your application at runtime. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewStub_inflatedId android:inflatedId}</code></td><td> Overrides the id of the inflated View with this value.</td></tr>
           <tr><td><code>{@link #ViewStub_layout android:layout}</code></td><td> Supply an identifier for the layout resource to inflate when the ViewStub
             becomes visible or when forced to do so.</td></tr>
           </table>
           @see #ViewStub_inflatedId
           @see #ViewStub_layout
         */
        public static final int[] ViewStub = {
            0x010100f2, 0x010100f3
        };
        /**
          <p>
          @attr description
           Overrides the id of the inflated View with this value. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#inflatedId}.
          @attr name android:inflatedId
        */
        public static final int ViewStub_inflatedId = 1;
        /**
          <p>
          @attr description
           Supply an identifier for the layout resource to inflate when the ViewStub
             becomes visible or when forced to do so. The layout resource must be a
             valid reference to a layout. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#layout}.
          @attr name android:layout
        */
        public static final int ViewStub_layout = 0;
        /** Attributes that can be used with a ViewSwitcher.
         */
        public static final int[] ViewSwitcher = {
            
        };
        /**  Base attributes available to VolumePreference. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #VolumePreference_streamType android:streamType}</code></td><td> Different audio stream types.</td></tr>
           </table>
           @see #VolumePreference_streamType
         */
        public static final int[] VolumePreference = {
            0x01010209
        };
        /**
          <p>
          @attr description
           Different audio stream types. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>voice</code></td><td>0</td><td></td></tr>
<tr><td><code>system</code></td><td>1</td><td></td></tr>
<tr><td><code>ring</code></td><td>2</td><td></td></tr>
<tr><td><code>music</code></td><td>3</td><td></td></tr>
<tr><td><code>alarm</code></td><td>4</td><td></td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#streamType}.
          @attr name android:streamType
        */
        public static final int VolumePreference_streamType = 0;
        /**  Use <code>wallpaper</code> as the root tag of the XML resource that
         describes an
         {@link android.service.wallpaper.WallpaperService}, which is
         referenced from its
         {@link android.service.wallpaper.WallpaperService#SERVICE_META_DATA}
         meta-data entry.  Described here are the attributes that can be
         included in that tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Wallpaper_author android:author}</code></td><td> Name of the author of this component, e.</td></tr>
           <tr><td><code>{@link #Wallpaper_description android:description}</code></td><td> Short description of the component's purpose or behavior.</td></tr>
           <tr><td><code>{@link #Wallpaper_settingsActivity android:settingsActivity}</code></td><td> Component name of an activity that allows the user to modify
             the settings for this service.</td></tr>
           <tr><td><code>{@link #Wallpaper_thumbnail android:thumbnail}</code></td><td> Reference to a the wallpaper's thumbnail bitmap.</td></tr>
           </table>
           @see #Wallpaper_author
           @see #Wallpaper_description
           @see #Wallpaper_settingsActivity
           @see #Wallpaper_thumbnail
         */
        public static final int[] Wallpaper = {
            0x01010020, 0x01010225, 0x010102a5, 0x010102b4
        };
        /**
          <p>
          @attr description
           Name of the author of this component, e.g. Google. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#author}.
          @attr name android:author
        */
        public static final int Wallpaper_author = 3;
        /**
          <p>
          @attr description
           Short description of the component's purpose or behavior. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#description}.
          @attr name android:description
        */
        public static final int Wallpaper_description = 0;
        /**
          <p>
          @attr description
           Component name of an activity that allows the user to modify
             the settings for this service. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#settingsActivity}.
          @attr name android:settingsActivity
        */
        public static final int Wallpaper_settingsActivity = 1;
        /**
          <p>
          @attr description
           Reference to a the wallpaper's thumbnail bitmap. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#thumbnail}.
          @attr name android:thumbnail
        */
        public static final int Wallpaper_thumbnail = 2;
        /**  @hide 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           </table>
         */
        public static final int[] WeightedLinearLayout = {
            0x010102d5, 0x010102d6
        };
        /**  The set of attributes that describe a Windows's theme. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Window_backgroundDimAmount android:backgroundDimAmount}</code></td><td> Default background dim amount when a menu, dialog, or something similar pops up.</td></tr>
           <tr><td><code>{@link #Window_backgroundDimEnabled android:backgroundDimEnabled}</code></td><td> Control whether dimming behind the window is enabled.</td></tr>
           <tr><td><code>{@link #Window_textColor android:textColor}</code></td><td> Color of text (usually same as colorForeground).</td></tr>
           <tr><td><code>{@link #Window_windowAnimationStyle android:windowAnimationStyle}</code></td><td> Reference to a style resource holding
             the set of window animations to use, which can be
             any of the attributes defined by
             {@link android.R.styleable#WindowAnimation}.</td></tr>
           <tr><td><code>{@link #Window_windowBackground android:windowBackground}</code></td><td> Drawable to use as the overall window background.</td></tr>
           <tr><td><code>{@link #Window_windowContentOverlay android:windowContentOverlay}</code></td><td> This Drawable is overlaid over the foreground of the Window's content area, usually
             to place a shadow below the title.</td></tr>
           <tr><td><code>{@link #Window_windowDisablePreview android:windowDisablePreview}</code></td><td> Flag allowing you to disable the preview animation for a window.</td></tr>
           <tr><td><code>{@link #Window_windowFrame android:windowFrame}</code></td><td> Drawable to use as a frame around the window.</td></tr>
           <tr><td><code>{@link #Window_windowFullscreen android:windowFullscreen}</code></td><td> Flag indicating whether this window should fill the entire screen.</td></tr>
           <tr><td><code>{@link #Window_windowIsFloating android:windowIsFloating}</code></td><td> Flag indicating whether this is a floating window.</td></tr>
           <tr><td><code>{@link #Window_windowIsTranslucent android:windowIsTranslucent}</code></td><td> Flag indicating whether this is a translucent window.</td></tr>
           <tr><td><code>{@link #Window_windowNoDisplay android:windowNoDisplay}</code></td><td> Flag indicating that this window should not be displayed at all.</td></tr>
           <tr><td><code>{@link #Window_windowNoTitle android:windowNoTitle}</code></td><td> Flag indicating whether there should be no title on this window.</td></tr>
           <tr><td><code>{@link #Window_windowShowWallpaper android:windowShowWallpaper}</code></td><td> Flag indicating that this window's background should be the
        	 user's current wallpaper.</td></tr>
           <tr><td><code>{@link #Window_windowSoftInputMode android:windowSoftInputMode}</code></td><td> Defines the default soft input state that this window would
             like when it is displayed.</td></tr>
           </table>
           @see #Window_backgroundDimAmount
           @see #Window_backgroundDimEnabled
           @see #Window_textColor
           @see #Window_windowAnimationStyle
           @see #Window_windowBackground
           @see #Window_windowContentOverlay
           @see #Window_windowDisablePreview
           @see #Window_windowFrame
           @see #Window_windowFullscreen
           @see #Window_windowIsFloating
           @see #Window_windowIsTranslucent
           @see #Window_windowNoDisplay
           @see #Window_windowNoTitle
           @see #Window_windowShowWallpaper
           @see #Window_windowSoftInputMode
         */
        public static final int[] Window = {
            0x01010032, 0x01010054, 0x01010055, 0x01010056,
            0x01010057, 0x01010058, 0x01010059, 0x01010098,
            0x010100ae, 0x0101020d, 0x0101021e, 0x0101021f,
            0x01010222, 0x0101022b, 0x01010292
        };
        /**
          <p>
          @attr description
           Default background dim amount when a menu, dialog, or something similar pops up. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#backgroundDimAmount}.
          @attr name android:backgroundDimAmount
        */
        public static final int Window_backgroundDimAmount = 0;
        /**
          <p>
          @attr description
           Control whether dimming behind the window is enabled.  The default
             theme does not set this value, meaning it is based on whether the
             window is floating. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#backgroundDimEnabled}.
          @attr name android:backgroundDimEnabled
        */
        public static final int Window_backgroundDimEnabled = 11;
        /**
          <p>
          @attr description
           Color of text (usually same as colorForeground). 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#textColor}.
          @attr name android:textColor
        */
        public static final int Window_textColor = 7;
        /**
          <p>
          @attr description
           Reference to a style resource holding
             the set of window animations to use, which can be
             any of the attributes defined by
             {@link android.R.styleable#WindowAnimation}. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowAnimationStyle}.
          @attr name android:windowAnimationStyle
        */
        public static final int Window_windowAnimationStyle = 8;
        /**
          <p>
          @attr description
           Drawable to use as the overall window background.  There are a
             few special considerations you should use when settings this
             drawable:
             <ul>
             <li> This information will be used to infer the pixel format
                  for your window's surface.  If the drawable has any
                  non-opaque pixels, your window will be translucent
                  (32 bpp).
             <li> If you want to draw the entire background
                  yourself, you should set this drawable to some solid
                  color that closely matches that background (so the
                  system's preview of your window will match), and
                  then in code manually set your window's background to
                  null so it will not be drawn.
             </ul> 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowBackground}.
          @attr name android:windowBackground
        */
        public static final int Window_windowBackground = 1;
        /**
          <p>
          @attr description
           This Drawable is overlaid over the foreground of the Window's content area, usually
             to place a shadow below the title.  


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowContentOverlay}.
          @attr name android:windowContentOverlay
        */
        public static final int Window_windowContentOverlay = 6;
        /**
          <p>
          @attr description
           Flag allowing you to disable the preview animation for a window.
             The default value is false; if set to true, the system can never
             use the window's theme to show a preview of it before your
             actual instance is shown to the user. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowDisablePreview}.
          @attr name android:windowDisablePreview
        */
        public static final int Window_windowDisablePreview = 12;
        /**
          <p>
          @attr description
           Drawable to use as a frame around the window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowFrame}.
          @attr name android:windowFrame
        */
        public static final int Window_windowFrame = 2;
        /**
          <p>
          @attr description
           Flag indicating whether this window should fill the entire screen. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowFullscreen}.
          @attr name android:windowFullscreen
        */
        public static final int Window_windowFullscreen = 9;
        /**
          <p>
          @attr description
           Flag indicating whether this is a floating window. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowIsFloating}.
          @attr name android:windowIsFloating
        */
        public static final int Window_windowIsFloating = 4;
        /**
          <p>
          @attr description
           Flag indicating whether this is a translucent window. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowIsTranslucent}.
          @attr name android:windowIsTranslucent
        */
        public static final int Window_windowIsTranslucent = 5;
        /**
          <p>
          @attr description
           Flag indicating that this window should not be displayed at all.
             The default value is false; if set to true, and this window is
             the main window of an Activity, then it will never actually
             be added to the window manager.  This means that your activity
             must immediately quit without waiting for user interaction,
             because there will be no such interaction coming. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowNoDisplay}.
          @attr name android:windowNoDisplay
        */
        public static final int Window_windowNoDisplay = 10;
        /**
          <p>
          @attr description
           Flag indicating whether there should be no title on this window. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowNoTitle}.
          @attr name android:windowNoTitle
        */
        public static final int Window_windowNoTitle = 3;
        /**
          <p>
          @attr description
           Flag indicating that this window's background should be the
        	 user's current wallpaper. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowShowWallpaper}.
          @attr name android:windowShowWallpaper
        */
        public static final int Window_windowShowWallpaper = 14;
        /**
          <p>
          @attr description
           Defines the default soft input state that this window would
             like when it is displayed. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>stateUnspecified</code></td><td>0</td><td> Not specified, use what the system thinks is best.  This
                 is the default. </td></tr>
<tr><td><code>stateUnchanged</code></td><td>1</td><td> Leave the soft input window as-is, in whatever state it
                 last was. </td></tr>
<tr><td><code>stateHidden</code></td><td>2</td><td> Make the soft input area hidden when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysHidden</code></td><td>3</td><td> Always make the soft input area hidden when this window
                 has input focus. </td></tr>
<tr><td><code>stateVisible</code></td><td>4</td><td> Make the soft input area visible when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysVisible</code></td><td>5</td><td> Always make the soft input area visible when this window
                 has input focus. </td></tr>
<tr><td><code>adjustUnspecified</code></td><td>0x00</td><td> The window resize/pan adjustment has not been specified,
                 the system will automatically select between resize and pan
                 modes, depending
                 on whether the content of the window has any layout views
                 that can scroll their contents.  If there is such a view,
                 then the window will be resized, with the assumption being
                 that the resizeable area can be reduced to make room for
                 the input UI. </td></tr>
<tr><td><code>adjustResize</code></td><td>0x10</td><td> Always resize the window: the content area of the window is
                 reduced to make room for the soft input area. </td></tr>
<tr><td><code>adjustPan</code></td><td>0x20</td><td> Don't resize the window to make room for the soft input area;
                 instead pan the contents of the window as focus moves inside
                 of it so that the user can see what they are typing.  This is
                 generally less desireable than panning because the user may
                 need to close the input area to get at and interact with
                 parts of the window. </td></tr>
</table>
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowSoftInputMode}.
          @attr name android:windowSoftInputMode
        */
        public static final int Window_windowSoftInputMode = 13;
        /**  Window animation class attributes. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #WindowAnimation_activityCloseEnterAnimation android:activityCloseEnterAnimation}</code></td><td>  When closing the current activity, this is the animation that is
              run on the next activity (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_activityCloseExitAnimation android:activityCloseExitAnimation}</code></td><td>  When closing the current activity, this is the animation that is
              run on the current activity (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_activityOpenEnterAnimation android:activityOpenEnterAnimation}</code></td><td>  When opening a new activity, this is the animation that is
              run on the next activity (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_activityOpenExitAnimation android:activityOpenExitAnimation}</code></td><td>  When opening a new activity, this is the animation that is
              run on the previous activity (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskCloseEnterAnimation android:taskCloseEnterAnimation}</code></td><td>  When closing the last activity of a task, this is the animation that is
              run on the activity of the next task (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskCloseExitAnimation android:taskCloseExitAnimation}</code></td><td>  When opening an activity in a new task, this is the animation that is
              run on the activity of the old task (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskOpenEnterAnimation android:taskOpenEnterAnimation}</code></td><td>  When opening an activity in a new task, this is the animation that is
              run on the activity of the new task (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskOpenExitAnimation android:taskOpenExitAnimation}</code></td><td>  When opening an activity in a new task, this is the animation that is
              run on the activity of the old task (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskToBackEnterAnimation android:taskToBackEnterAnimation}</code></td><td>  When sending the current task to the background, this is the
              animation that is run on the top activity of the task behind
              it (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskToBackExitAnimation android:taskToBackExitAnimation}</code></td><td>  When sending the current task to the background, this is the
              animation that is run on the top activity of the current task
              (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskToFrontEnterAnimation android:taskToFrontEnterAnimation}</code></td><td>  When bringing an existing task to the foreground, this is the
              animation that is run on the top activity of the task being brought
              to the foreground (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskToFrontExitAnimation android:taskToFrontExitAnimation}</code></td><td>  When bringing an existing task to the foreground, this is the
              animation that is run on the current foreground activity
              (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperCloseEnterAnimation android:wallpaperCloseEnterAnimation}</code></td><td>  When opening a new activity that hides the wallpaper, while
              currently showing the wallpaper, this is the animation that
              is run on the new activity (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperCloseExitAnimation android:wallpaperCloseExitAnimation}</code></td><td>  When opening a new activity that hides the wallpaper, while
              currently showing the wallpaper, this is the animation that
              is run on the old wallpaper activity (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperIntraCloseEnterAnimation android:wallpaperIntraCloseEnterAnimation}</code></td><td>  When closing a foreround activity that is on top of the wallpaper
              when the previous activity is also on top of the wallpaper,
              this is the animation that is run on the previous activity
              (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperIntraCloseExitAnimation android:wallpaperIntraCloseExitAnimation}</code></td><td>  When closing a foreround activity that is on top of the wallpaper
              when the previous activity is also on top of the wallpaper,
              this is the animation that is run on the current activity
              (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperIntraOpenEnterAnimation android:wallpaperIntraOpenEnterAnimation}</code></td><td>  When opening a new activity that is on top of the wallpaper
              when the current activity is also on top of the wallpaper,
              this is the animation that is run on the new activity
              (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperIntraOpenExitAnimation android:wallpaperIntraOpenExitAnimation}</code></td><td>  When opening a new activity that is on top of the wallpaper
              when the current activity is also on top of the wallpaper,
              this is the animation that is run on the current activity
              (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperOpenEnterAnimation android:wallpaperOpenEnterAnimation}</code></td><td>  When opening a new activity that shows the wallpaper, while
              currently not showing the wallpaper, this is the animation that
              is run on the new wallpaper activity (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperOpenExitAnimation android:wallpaperOpenExitAnimation}</code></td><td>  When opening a new activity that shows the wallpaper, while
              currently not showing the wallpaper, this is the animation that
              is run on the current activity (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_windowEnterAnimation android:windowEnterAnimation}</code></td><td> The animation used when a window is being added.</td></tr>
           <tr><td><code>{@link #WindowAnimation_windowExitAnimation android:windowExitAnimation}</code></td><td> The animation used when a window is being removed.</td></tr>
           <tr><td><code>{@link #WindowAnimation_windowHideAnimation android:windowHideAnimation}</code></td><td> The animation used when a window is going from VISIBLE to INVISIBLE.</td></tr>
           <tr><td><code>{@link #WindowAnimation_windowShowAnimation android:windowShowAnimation}</code></td><td> The animation used when a window is going from INVISIBLE to VISIBLE.</td></tr>
           </table>
           @see #WindowAnimation_activityCloseEnterAnimation
           @see #WindowAnimation_activityCloseExitAnimation
           @see #WindowAnimation_activityOpenEnterAnimation
           @see #WindowAnimation_activityOpenExitAnimation
           @see #WindowAnimation_taskCloseEnterAnimation
           @see #WindowAnimation_taskCloseExitAnimation
           @see #WindowAnimation_taskOpenEnterAnimation
           @see #WindowAnimation_taskOpenExitAnimation
           @see #WindowAnimation_taskToBackEnterAnimation
           @see #WindowAnimation_taskToBackExitAnimation
           @see #WindowAnimation_taskToFrontEnterAnimation
           @see #WindowAnimation_taskToFrontExitAnimation
           @see #WindowAnimation_wallpaperCloseEnterAnimation
           @see #WindowAnimation_wallpaperCloseExitAnimation
           @see #WindowAnimation_wallpaperIntraCloseEnterAnimation
           @see #WindowAnimation_wallpaperIntraCloseExitAnimation
           @see #WindowAnimation_wallpaperIntraOpenEnterAnimation
           @see #WindowAnimation_wallpaperIntraOpenExitAnimation
           @see #WindowAnimation_wallpaperOpenEnterAnimation
           @see #WindowAnimation_wallpaperOpenExitAnimation
           @see #WindowAnimation_windowEnterAnimation
           @see #WindowAnimation_windowExitAnimation
           @see #WindowAnimation_windowHideAnimation
           @see #WindowAnimation_windowShowAnimation
         */
        public static final int[] WindowAnimation = {
            0x010100b4, 0x010100b5, 0x010100b6, 0x010100b7,
            0x010100b8, 0x010100b9, 0x010100ba, 0x010100bb,
            0x010100bc, 0x010100bd, 0x010100be, 0x010100bf,
            0x010100c0, 0x010100c1, 0x010100c2, 0x010100c3,
            0x01010293, 0x01010294, 0x01010295, 0x01010296,
            0x01010297, 0x01010298, 0x01010299, 0x0101029a
        };
        /**
          <p>
          @attr description
            When closing the current activity, this is the animation that is
              run on the next activity (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#activityCloseEnterAnimation}.
          @attr name android:activityCloseEnterAnimation
        */
        public static final int WindowAnimation_activityCloseEnterAnimation = 6;
        /**
          <p>
          @attr description
            When closing the current activity, this is the animation that is
              run on the current activity (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#activityCloseExitAnimation}.
          @attr name android:activityCloseExitAnimation
        */
        public static final int WindowAnimation_activityCloseExitAnimation = 7;
        /**
          <p>
          @attr description
            When opening a new activity, this is the animation that is
              run on the next activity (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#activityOpenEnterAnimation}.
          @attr name android:activityOpenEnterAnimation
        */
        public static final int WindowAnimation_activityOpenEnterAnimation = 4;
        /**
          <p>
          @attr description
            When opening a new activity, this is the animation that is
              run on the previous activity (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#activityOpenExitAnimation}.
          @attr name android:activityOpenExitAnimation
        */
        public static final int WindowAnimation_activityOpenExitAnimation = 5;
        /**
          <p>
          @attr description
            When closing the last activity of a task, this is the animation that is
              run on the activity of the next task (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#taskCloseEnterAnimation}.
          @attr name android:taskCloseEnterAnimation
        */
        public static final int WindowAnimation_taskCloseEnterAnimation = 10;
        /**
          <p>
          @attr description
            When opening an activity in a new task, this is the animation that is
              run on the activity of the old task (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#taskCloseExitAnimation}.
          @attr name android:taskCloseExitAnimation
        */
        public static final int WindowAnimation_taskCloseExitAnimation = 11;
        /**
          <p>
          @attr description
            When opening an activity in a new task, this is the animation that is
              run on the activity of the new task (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#taskOpenEnterAnimation}.
          @attr name android:taskOpenEnterAnimation
        */
        public static final int WindowAnimation_taskOpenEnterAnimation = 8;
        /**
          <p>
          @attr description
            When opening an activity in a new task, this is the animation that is
              run on the activity of the old task (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#taskOpenExitAnimation}.
          @attr name android:taskOpenExitAnimation
        */
        public static final int WindowAnimation_taskOpenExitAnimation = 9;
        /**
          <p>
          @attr description
            When sending the current task to the background, this is the
              animation that is run on the top activity of the task behind
              it (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#taskToBackEnterAnimation}.
          @attr name android:taskToBackEnterAnimation
        */
        public static final int WindowAnimation_taskToBackEnterAnimation = 14;
        /**
          <p>
          @attr description
            When sending the current task to the background, this is the
              animation that is run on the top activity of the current task
              (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#taskToBackExitAnimation}.
          @attr name android:taskToBackExitAnimation
        */
        public static final int WindowAnimation_taskToBackExitAnimation = 15;
        /**
          <p>
          @attr description
            When bringing an existing task to the foreground, this is the
              animation that is run on the top activity of the task being brought
              to the foreground (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#taskToFrontEnterAnimation}.
          @attr name android:taskToFrontEnterAnimation
        */
        public static final int WindowAnimation_taskToFrontEnterAnimation = 12;
        /**
          <p>
          @attr description
            When bringing an existing task to the foreground, this is the
              animation that is run on the current foreground activity
              (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#taskToFrontExitAnimation}.
          @attr name android:taskToFrontExitAnimation
        */
        public static final int WindowAnimation_taskToFrontExitAnimation = 13;
        /**
          <p>
          @attr description
            When opening a new activity that hides the wallpaper, while
              currently showing the wallpaper, this is the animation that
              is run on the new activity (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#wallpaperCloseEnterAnimation}.
          @attr name android:wallpaperCloseEnterAnimation
        */
        public static final int WindowAnimation_wallpaperCloseEnterAnimation = 18;
        /**
          <p>
          @attr description
            When opening a new activity that hides the wallpaper, while
              currently showing the wallpaper, this is the animation that
              is run on the old wallpaper activity (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#wallpaperCloseExitAnimation}.
          @attr name android:wallpaperCloseExitAnimation
        */
        public static final int WindowAnimation_wallpaperCloseExitAnimation = 19;
        /**
          <p>
          @attr description
            When closing a foreround activity that is on top of the wallpaper
              when the previous activity is also on top of the wallpaper,
              this is the animation that is run on the previous activity
              (which is entering the screen).  The wallpaper remains
              static behind the animation. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#wallpaperIntraCloseEnterAnimation}.
          @attr name android:wallpaperIntraCloseEnterAnimation
        */
        public static final int WindowAnimation_wallpaperIntraCloseEnterAnimation = 22;
        /**
          <p>
          @attr description
            When closing a foreround activity that is on top of the wallpaper
              when the previous activity is also on top of the wallpaper,
              this is the animation that is run on the current activity
              (which is exiting the screen).  The wallpaper remains
              static behind the animation. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#wallpaperIntraCloseExitAnimation}.
          @attr name android:wallpaperIntraCloseExitAnimation
        */
        public static final int WindowAnimation_wallpaperIntraCloseExitAnimation = 23;
        /**
          <p>
          @attr description
            When opening a new activity that is on top of the wallpaper
              when the current activity is also on top of the wallpaper,
              this is the animation that is run on the new activity
              (which is entering the screen).  The wallpaper remains
              static behind the animation. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#wallpaperIntraOpenEnterAnimation}.
          @attr name android:wallpaperIntraOpenEnterAnimation
        */
        public static final int WindowAnimation_wallpaperIntraOpenEnterAnimation = 20;
        /**
          <p>
          @attr description
            When opening a new activity that is on top of the wallpaper
              when the current activity is also on top of the wallpaper,
              this is the animation that is run on the current activity
              (which is exiting the screen).  The wallpaper remains
              static behind the animation. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#wallpaperIntraOpenExitAnimation}.
          @attr name android:wallpaperIntraOpenExitAnimation
        */
        public static final int WindowAnimation_wallpaperIntraOpenExitAnimation = 21;
        /**
          <p>
          @attr description
            When opening a new activity that shows the wallpaper, while
              currently not showing the wallpaper, this is the animation that
              is run on the new wallpaper activity (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#wallpaperOpenEnterAnimation}.
          @attr name android:wallpaperOpenEnterAnimation
        */
        public static final int WindowAnimation_wallpaperOpenEnterAnimation = 16;
        /**
          <p>
          @attr description
            When opening a new activity that shows the wallpaper, while
              currently not showing the wallpaper, this is the animation that
              is run on the current activity (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#wallpaperOpenExitAnimation}.
          @attr name android:wallpaperOpenExitAnimation
        */
        public static final int WindowAnimation_wallpaperOpenExitAnimation = 17;
        /**
          <p>
          @attr description
           The animation used when a window is being added. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowEnterAnimation}.
          @attr name android:windowEnterAnimation
        */
        public static final int WindowAnimation_windowEnterAnimation = 0;
        /**
          <p>
          @attr description
           The animation used when a window is being removed. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowExitAnimation}.
          @attr name android:windowExitAnimation
        */
        public static final int WindowAnimation_windowExitAnimation = 1;
        /**
          <p>
          @attr description
           The animation used when a window is going from VISIBLE to INVISIBLE. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowHideAnimation}.
          @attr name android:windowHideAnimation
        */
        public static final int WindowAnimation_windowHideAnimation = 3;
        /**
          <p>
          @attr description
           The animation used when a window is going from INVISIBLE to VISIBLE. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This corresponds to the global attribute          resource symbol {@link android.R.attr#windowShowAnimation}.
          @attr name android:windowShowAnimation
        */
        public static final int WindowAnimation_windowShowAnimation = 2;
    };
}
