package java.sql;
public interface CallableStatement
  extends java.sql.PreparedStatement
{
public abstract  java.sql.Array getArray(int parameterIndex) throws java.sql.SQLException;
public abstract  java.sql.Array getArray(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  java.math.BigDecimal getBigDecimal(int parameterIndex) throws java.sql.SQLException;
public abstract  java.math.BigDecimal getBigDecimal(int parameterIndex, int scale) throws java.sql.SQLException;
public abstract  java.math.BigDecimal getBigDecimal(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  java.sql.Blob getBlob(int parameterIndex) throws java.sql.SQLException;
public abstract  java.sql.Blob getBlob(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  boolean getBoolean(int parameterIndex) throws java.sql.SQLException;
public abstract  boolean getBoolean(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  byte getByte(int parameterIndex) throws java.sql.SQLException;
public abstract  byte getByte(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  byte[] getBytes(int parameterIndex) throws java.sql.SQLException;
public abstract  byte[] getBytes(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  java.sql.Clob getClob(int parameterIndex) throws java.sql.SQLException;
public abstract  java.sql.Clob getClob(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  java.sql.Date getDate(int parameterIndex) throws java.sql.SQLException;
public abstract  java.sql.Date getDate(int parameterIndex, java.util.Calendar cal) throws java.sql.SQLException;
public abstract  java.sql.Date getDate(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  java.sql.Date getDate(java.lang.String parameterName, java.util.Calendar cal) throws java.sql.SQLException;
public abstract  double getDouble(int parameterIndex) throws java.sql.SQLException;
public abstract  double getDouble(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  float getFloat(int parameterIndex) throws java.sql.SQLException;
public abstract  float getFloat(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  int getInt(int parameterIndex) throws java.sql.SQLException;
public abstract  int getInt(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  long getLong(int parameterIndex) throws java.sql.SQLException;
public abstract  long getLong(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  java.lang.Object getObject(int parameterIndex) throws java.sql.SQLException;
public abstract  java.lang.Object getObject(int parameterIndex, java.util.Map<java.lang.String, java.lang.Class<?>> map) throws java.sql.SQLException;
public abstract  java.lang.Object getObject(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  java.lang.Object getObject(java.lang.String parameterName, java.util.Map<java.lang.String, java.lang.Class<?>> map) throws java.sql.SQLException;
public abstract  java.sql.Ref getRef(int parameterIndex) throws java.sql.SQLException;
public abstract  java.sql.Ref getRef(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  short getShort(int parameterIndex) throws java.sql.SQLException;
public abstract  short getShort(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  java.lang.String getString(int parameterIndex) throws java.sql.SQLException;
public abstract  java.lang.String getString(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  java.sql.Time getTime(int parameterIndex) throws java.sql.SQLException;
public abstract  java.sql.Time getTime(int parameterIndex, java.util.Calendar cal) throws java.sql.SQLException;
public abstract  java.sql.Time getTime(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  java.sql.Time getTime(java.lang.String parameterName, java.util.Calendar cal) throws java.sql.SQLException;
public abstract  java.sql.Timestamp getTimestamp(int parameterIndex) throws java.sql.SQLException;
public abstract  java.sql.Timestamp getTimestamp(int parameterIndex, java.util.Calendar cal) throws java.sql.SQLException;
public abstract  java.sql.Timestamp getTimestamp(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  java.sql.Timestamp getTimestamp(java.lang.String parameterName, java.util.Calendar cal) throws java.sql.SQLException;
public abstract  java.net.URL getURL(int parameterIndex) throws java.sql.SQLException;
public abstract  java.net.URL getURL(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  void registerOutParameter(int parameterIndex, int sqlType) throws java.sql.SQLException;
public abstract  void registerOutParameter(int parameterIndex, int sqlType, int scale) throws java.sql.SQLException;
public abstract  void registerOutParameter(int paramIndex, int sqlType, java.lang.String typeName) throws java.sql.SQLException;
public abstract  void registerOutParameter(java.lang.String parameterName, int sqlType) throws java.sql.SQLException;
public abstract  void registerOutParameter(java.lang.String parameterName, int sqlType, int scale) throws java.sql.SQLException;
public abstract  void registerOutParameter(java.lang.String parameterName, int sqlType, java.lang.String typeName) throws java.sql.SQLException;
public abstract  void setAsciiStream(java.lang.String parameterName, java.io.InputStream theInputStream, int length) throws java.sql.SQLException;
public abstract  void setBigDecimal(java.lang.String parameterName, java.math.BigDecimal theBigDecimal) throws java.sql.SQLException;
public abstract  void setBinaryStream(java.lang.String parameterName, java.io.InputStream theInputStream, int length) throws java.sql.SQLException;
public abstract  void setBoolean(java.lang.String parameterName, boolean theBoolean) throws java.sql.SQLException;
public abstract  void setByte(java.lang.String parameterName, byte theByte) throws java.sql.SQLException;
public abstract  void setBytes(java.lang.String parameterName, byte[] theBytes) throws java.sql.SQLException;
public abstract  void setCharacterStream(java.lang.String parameterName, java.io.Reader reader, int length) throws java.sql.SQLException;
public abstract  void setDate(java.lang.String parameterName, java.sql.Date theDate) throws java.sql.SQLException;
public abstract  void setDate(java.lang.String parameterName, java.sql.Date theDate, java.util.Calendar cal) throws java.sql.SQLException;
public abstract  void setDouble(java.lang.String parameterName, double theDouble) throws java.sql.SQLException;
public abstract  void setFloat(java.lang.String parameterName, float theFloat) throws java.sql.SQLException;
public abstract  void setInt(java.lang.String parameterName, int theInt) throws java.sql.SQLException;
public abstract  void setLong(java.lang.String parameterName, long theLong) throws java.sql.SQLException;
public abstract  void setNull(java.lang.String parameterName, int sqlType) throws java.sql.SQLException;
public abstract  void setNull(java.lang.String parameterName, int sqlType, java.lang.String typeName) throws java.sql.SQLException;
public abstract  void setObject(java.lang.String parameterName, java.lang.Object theObject) throws java.sql.SQLException;
public abstract  void setObject(java.lang.String parameterName, java.lang.Object theObject, int targetSqlType) throws java.sql.SQLException;
public abstract  void setObject(java.lang.String parameterName, java.lang.Object theObject, int targetSqlType, int scale) throws java.sql.SQLException;
public abstract  void setShort(java.lang.String parameterName, short theShort) throws java.sql.SQLException;
public abstract  void setString(java.lang.String parameterName, java.lang.String theString) throws java.sql.SQLException;
public abstract  void setTime(java.lang.String parameterName, java.sql.Time theTime) throws java.sql.SQLException;
public abstract  void setTime(java.lang.String parameterName, java.sql.Time theTime, java.util.Calendar cal) throws java.sql.SQLException;
public abstract  void setTimestamp(java.lang.String parameterName, java.sql.Timestamp theTimestamp) throws java.sql.SQLException;
public abstract  void setTimestamp(java.lang.String parameterName, java.sql.Timestamp theTimestamp, java.util.Calendar cal) throws java.sql.SQLException;
public abstract  void setURL(java.lang.String parameterName, java.net.URL theURL) throws java.sql.SQLException;
public abstract  boolean wasNull() throws java.sql.SQLException;
public abstract  java.sql.RowId getRowId(int parameterIndex) throws java.sql.SQLException;
public abstract  java.sql.RowId getRowId(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  void setRowId(java.lang.String parameterName, java.sql.RowId rowId) throws java.sql.SQLException;
public abstract  void setNString(java.lang.String parameterName, java.lang.String string) throws java.sql.SQLException;
public abstract  void setNCharacterStream(java.lang.String parameterName, java.io.Reader reader, long length) throws java.sql.SQLException;
public abstract  void setNClob(java.lang.String parameterName, java.sql.NClob nclob) throws java.sql.SQLException;
public abstract  void setClob(java.lang.String parameterName, java.io.Reader reader, long length) throws java.sql.SQLException;
public abstract  void setBlob(java.lang.String parameterName, java.io.InputStream inputStream, long length) throws java.sql.SQLException;
public abstract  void setNClob(java.lang.String parameterName, java.io.Reader reader, long length) throws java.sql.SQLException;
public abstract  java.sql.NClob getNClob(int parameterIndex) throws java.sql.SQLException;
public abstract  java.sql.NClob getNClob(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  void setSQLXML(java.lang.String parameterName, java.sql.SQLXML sqlXml) throws java.sql.SQLException;
public abstract  java.sql.SQLXML getSQLXML(int parameterIndex) throws java.sql.SQLException;
public abstract  java.sql.SQLXML getSQLXML(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  java.lang.String getNString(int parameterIndex) throws java.sql.SQLException;
public abstract  java.lang.String getNString(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  java.io.Reader getNCharacterStream(int parameterIndex) throws java.sql.SQLException;
public abstract  java.io.Reader getNCharacterStream(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  java.io.Reader getCharacterStream(int parameterIndex) throws java.sql.SQLException;
public abstract  java.io.Reader getCharacterStream(java.lang.String parameterName) throws java.sql.SQLException;
public abstract  void setBlob(java.lang.String parameterName, java.sql.Blob blob) throws java.sql.SQLException;
public abstract  void setClob(java.lang.String parameterName, java.sql.Clob clob) throws java.sql.SQLException;
public abstract  void setAsciiStream(java.lang.String parameterName, java.io.InputStream x, long length) throws java.sql.SQLException;
public abstract  void setAsciiStream(java.lang.String parameterName, java.io.InputStream x) throws java.sql.SQLException;
public abstract  void setBinaryStream(java.lang.String parameterName, java.io.InputStream x, long length) throws java.sql.SQLException;
public abstract  void setBinaryStream(java.lang.String parameterName, java.io.InputStream x) throws java.sql.SQLException;
public abstract  void setCharacterStream(java.lang.String parameterName, java.io.Reader reader, long length) throws java.sql.SQLException;
public abstract  void setCharacterStream(java.lang.String parameterName, java.io.Reader reader) throws java.sql.SQLException;
public abstract  void setNCharacterStream(java.lang.String parameterName, java.io.Reader value) throws java.sql.SQLException;
public abstract  void setClob(java.lang.String parameterName, java.io.Reader reader) throws java.sql.SQLException;
public abstract  void setBlob(java.lang.String parameterName, java.io.InputStream inputStream) throws java.sql.SQLException;
public abstract  void setNClob(java.lang.String parameterName, java.io.Reader reader) throws java.sql.SQLException;
}
